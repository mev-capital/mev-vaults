{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport { useEffect, useState, useMemo } from 'react';\nimport { BIG_ZERO } from '../utils/formatbalance';\nimport useWallet from './useWallet';\nimport useSushi from './useSushi';\nimport { getMasterChefContract } from '../sushi/utils';\nimport { log } from '../utils/logger';\n\nconst useBalanceOf = function () {\n  _s();\n\n  let contractAddress = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n  let autoRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const [balance, setBalance] = useState(new BigNumber(BIG_ZERO));\n  const {\n    account,\n    ethereum\n  } = useWallet();\n  const chainId = useMemo(() => {\n    return parseInt(ethereum === null || ethereum === void 0 ? void 0 : ethereum.chainId, 16);\n  }, [ethereum === null || ethereum === void 0 ? void 0 : ethereum.chainId]);\n  const sushi = useSushi();\n  const masterChefContract = getMasterChefContract(sushi);\n  useEffect(() => {\n    if (!account || !chainId || !masterChefContract) {\n      return;\n    }\n\n    const getBalance = async () => {\n      let contract = sushi.getEthContract();\n\n      switch (chainId) {\n        case 56:\n          contract = sushi.getBscContract();\n          break;\n\n        case 137:\n          contract = sushi.getPolygonContract();\n          break;\n      }\n\n      if (contractAddress) {\n        contract.options.address = contractAddress;\n      }\n\n      const value = await contract.methods.balanceOf(account).call();\n\n      if (value) {\n        log(`ðŸ”„ Balance set to ${value}`);\n        setBalance(new BigNumber(value));\n      }\n    };\n\n    getBalance();\n\n    if (autoRefresh) {\n      let refreshInterval = setInterval(getBalance, 5000);\n      return () => clearInterval(refreshInterval);\n    }\n  }, [account, chainId, masterChefContract, sushi, contractAddress, autoRefresh]);\n  return balance;\n};\n\n_s(useBalanceOf, \"R8RMA/a/nq8nGxyCSIdqaoMMrLQ=\", false, function () {\n  return [useWallet, useSushi];\n});\n\nexport default useBalanceOf;","map":{"version":3,"names":["BigNumber","useEffect","useState","useMemo","BIG_ZERO","useWallet","useSushi","getMasterChefContract","log","useBalanceOf","contractAddress","undefined","autoRefresh","balance","setBalance","account","ethereum","chainId","parseInt","sushi","masterChefContract","getBalance","contract","getEthContract","getBscContract","getPolygonContract","options","address","value","methods","balanceOf","call","refreshInterval","setInterval","clearInterval"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/hooks/useBalanceOf.ts"],"sourcesContent":["import BigNumber from 'bignumber.js';\nimport { useEffect, useState, useMemo } from 'react';\nimport { BIG_ZERO } from '../utils/formatbalance';\nimport useWallet from './useWallet';\nimport useSushi from './useSushi';\nimport { getMasterChefContract } from '../sushi/utils';\nimport { log } from '../utils/logger';\n\nconst useBalanceOf = (contractAddress: string | undefined = undefined, autoRefresh = false) => {\n    const [balance, setBalance] = useState(new BigNumber(BIG_ZERO));\n    const { account, ethereum } = useWallet();\n\n    const chainId = useMemo(() => {\n        return parseInt(ethereum?.chainId, 16);\n    }, [ethereum?.chainId]);\n\n    const sushi = useSushi();\n    const masterChefContract = getMasterChefContract(sushi);\n\n    useEffect(() => {\n        if (!account || !chainId || !masterChefContract) {\n            return;\n        }\n\n        const getBalance = async () => {\n            let contract = sushi.getEthContract();\n            \n            switch (chainId) {\n                case 56: contract = sushi.getBscContract();  break;\n                case 137: contract = sushi.getPolygonContract();  break;\n            }\n\n            if (contractAddress) {\n                contract.options.address = contractAddress;\n            }\n\n            const value = await contract.methods.balanceOf(account).call();\n            if (value) {\n                log(`ðŸ”„ Balance set to ${value}`);\n                setBalance(new BigNumber(value));\n            }\n        };\n\n        getBalance();\n\n        if (autoRefresh) {\n            let refreshInterval = setInterval(getBalance, 5000);\n            return () => clearInterval(refreshInterval);\n        }\n    }, [account, chainId, masterChefContract, sushi, contractAddress, autoRefresh]);\n\n    return balance;\n};\n\nexport default useBalanceOf;\n"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,OAA9B,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,YAAY,GAAG,YAA0E;EAAA;;EAAA,IAAzEC,eAAyE,uEAAnCC,SAAmC;EAAA,IAAxBC,WAAwB,uEAAV,KAAU;EAC3F,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAIF,SAAJ,CAAcI,QAAd,CAAD,CAAtC;EACA,MAAM;IAAEW,OAAF;IAAWC;EAAX,IAAwBX,SAAS,EAAvC;EAEA,MAAMY,OAAO,GAAGd,OAAO,CAAC,MAAM;IAC1B,OAAOe,QAAQ,CAACF,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEC,OAAX,EAAoB,EAApB,CAAf;EACH,CAFsB,EAEpB,CAACD,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEC,OAAX,CAFoB,CAAvB;EAIA,MAAME,KAAK,GAAGb,QAAQ,EAAtB;EACA,MAAMc,kBAAkB,GAAGb,qBAAqB,CAACY,KAAD,CAAhD;EAEAlB,SAAS,CAAC,MAAM;IACZ,IAAI,CAACc,OAAD,IAAY,CAACE,OAAb,IAAwB,CAACG,kBAA7B,EAAiD;MAC7C;IACH;;IAED,MAAMC,UAAU,GAAG,YAAY;MAC3B,IAAIC,QAAQ,GAAGH,KAAK,CAACI,cAAN,EAAf;;MAEA,QAAQN,OAAR;QACI,KAAK,EAAL;UAASK,QAAQ,GAAGH,KAAK,CAACK,cAAN,EAAX;UAAoC;;QAC7C,KAAK,GAAL;UAAUF,QAAQ,GAAGH,KAAK,CAACM,kBAAN,EAAX;UAAwC;MAFtD;;MAKA,IAAIf,eAAJ,EAAqB;QACjBY,QAAQ,CAACI,OAAT,CAAiBC,OAAjB,GAA2BjB,eAA3B;MACH;;MAED,MAAMkB,KAAK,GAAG,MAAMN,QAAQ,CAACO,OAAT,CAAiBC,SAAjB,CAA2Bf,OAA3B,EAAoCgB,IAApC,EAApB;;MACA,IAAIH,KAAJ,EAAW;QACPpB,GAAG,CAAE,qBAAoBoB,KAAM,EAA5B,CAAH;QACAd,UAAU,CAAC,IAAId,SAAJ,CAAc4B,KAAd,CAAD,CAAV;MACH;IACJ,CAjBD;;IAmBAP,UAAU;;IAEV,IAAIT,WAAJ,EAAiB;MACb,IAAIoB,eAAe,GAAGC,WAAW,CAACZ,UAAD,EAAa,IAAb,CAAjC;MACA,OAAO,MAAMa,aAAa,CAACF,eAAD,CAA1B;IACH;EACJ,CA9BQ,EA8BN,CAACjB,OAAD,EAAUE,OAAV,EAAmBG,kBAAnB,EAAuCD,KAAvC,EAA8CT,eAA9C,EAA+DE,WAA/D,CA9BM,CAAT;EAgCA,OAAOC,OAAP;AACH,CA5CD;;GAAMJ,Y;UAE4BJ,S,EAMhBC,Q;;;AAsClB,eAAeG,YAAf"},"metadata":{},"sourceType":"module"}