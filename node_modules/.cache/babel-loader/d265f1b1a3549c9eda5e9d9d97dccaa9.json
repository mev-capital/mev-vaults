{"ast":null,"code":"var _jsxFileName = \"/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/components/WalletsModal/WalletsModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { Modal } from 'react-bootstrap';\nimport { useWallet } from 'use-wallet';\nimport './WalletsModal.scss';\nimport { log } from '../../utils/logger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LS_ACCOUNT_KEY = 'WALLET_ACCOUNT';\nexport const LS_WALLET_TYPE_KEY = 'WALLET_TYPE';\nexport const NO_METAMASK_WARNING = 'Please, install either Metamask browser extension or Metamask mobile app';\nexport function getActiveWalletName() {\n  let name = window.localStorage.getItem(LS_WALLET_TYPE_KEY);\n  return name === 'injected' ? 'metamask' : name;\n}\nexport function getActiveWalletAddress() {\n  return window.localStorage.getItem(LS_ACCOUNT_KEY);\n}\nexport const WalletsModal = props => {\n  _s();\n\n  const {\n    ethereum,\n    connect\n  } = useWallet();\n  const eth = window.ethereum || ethereum;\n  const isEth = eth && eth.chainId !== '0x1';\n\n  const onConnect = async function () {\n    let providerId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'injected';\n\n    try {\n      log(`üîë Attempt to connect wallet (provider ID is \"${providerId}\")`);\n      await connect(providerId);\n    } catch (connectionError) {\n      log(`‚ùóÔ∏è Error connecting wallet: ${connectionError.message}`);\n    }\n\n    window.localStorage.setItem(LS_WALLET_TYPE_KEY, providerId);\n    let walletAddress = '';\n\n    switch (providerId) {\n      case 'injected':\n        walletAddress = window.localStorage.getItem('LAST_ACTIVE_ACCOUNT') || '';\n        break;\n\n      case 'walletlink':\n        walletAddress = window.localStorage.getItem('-walletlink:https://www.walletlink.org:Addresses') || '';\n        break;\n\n      case 'walletconnect':\n        const wcStorage = JSON.parse(window.localStorage.getItem('walletconnect') || '{}');\n\n        if (wcStorage !== null && wcStorage !== void 0 && wcStorage.accounts && wcStorage.accounts[0]) {\n          walletAddress = wcStorage.accounts[0];\n        }\n\n        break;\n    }\n\n    window.localStorage.setItem(LS_ACCOUNT_KEY, walletAddress); // @ts-ignore\n\n    const eth = window.ethereum || ethereum;\n\n    if (!eth && providerId === 'injected') {\n      alert(NO_METAMASK_WARNING);\n    } // @ts-ignore\n\n\n    if (window.dataLayer) {\n      window.dataLayer.push({\n        event: 'login',\n        userID: getActiveWalletAddress(),\n        type: getActiveWalletName()\n      });\n    }\n\n    if (props.onWalletConnected) {\n      props.onWalletConnected({\n        type: getActiveWalletName(),\n        address: getActiveWalletAddress()\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.show,\n    onHide: props.onHide,\n    backdrop: \"static\",\n    animation: false,\n    keyboard: false,\n    centered: true,\n    className: \"WalletsModalWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Connect a wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"d-flex gap-3 flex-row justify-content-center align-items-start flex-wrap WalletsModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onConnect('injected'),\n        className: \"border-0 d-inline-flex flex-column justify-content-center align-items-center bg-transparent\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/metamask.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mt-2\",\n          children: \"Metamask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onConnect('walletconnect'),\n        className: \"border-0 d-inline-flex flex-column justify-content-center align-items-center bg-transparent\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/wallet-connect.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mt-2\",\n          children: \"Wallet Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onConnect('walletlink'),\n        className: `border-0 d-inline-flex flex-column justify-content-center align-items-center bg-transparent ${isEth ? 'disabled' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/wallet-link.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mt-2\",\n          children: \"Coinbase Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), isEth && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge bg-secondary\",\n          children: \"only Ethereum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onConnect('walletconnect'),\n        className: `border-0 d-inline-flex flex-column justify-content-center align-items-center bg-transparent ${isEth ? 'disabled' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/zerion-wallet.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mt-2\",\n          children: \"Zerion Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), isEth && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge bg-secondary\",\n          children: \"only Ethereum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WalletsModal, \"glufSKf+AtRm9WA4tx/WEx7aBhE=\", false, function () {\n  return [useWallet];\n});\n\n_c = WalletsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletsModal\");","map":{"version":3,"names":["Modal","useWallet","log","LS_ACCOUNT_KEY","LS_WALLET_TYPE_KEY","NO_METAMASK_WARNING","getActiveWalletName","name","window","localStorage","getItem","getActiveWalletAddress","WalletsModal","props","ethereum","connect","eth","isEth","chainId","onConnect","providerId","connectionError","message","setItem","walletAddress","wcStorage","JSON","parse","accounts","alert","dataLayer","push","event","userID","type","onWalletConnected","address","show","onHide"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/components/WalletsModal/WalletsModal.tsx"],"sourcesContent":["import { Modal } from 'react-bootstrap';\nimport config from '../../config';\nimport { useWallet } from 'use-wallet';\nimport './WalletsModal.scss';\nimport { log } from '../../utils/logger';\n\nexport const LS_ACCOUNT_KEY = 'WALLET_ACCOUNT';\nexport const LS_WALLET_TYPE_KEY = 'WALLET_TYPE';\n\nexport const NO_METAMASK_WARNING =\n    'Please, install either Metamask browser extension or Metamask mobile app';\n\nexport function getActiveWalletName() {\n    let name = window.localStorage.getItem(LS_WALLET_TYPE_KEY);\n\n    return name === 'injected' ? 'metamask' : name;\n}\n\nexport function getActiveWalletAddress() {\n    return window.localStorage.getItem(LS_ACCOUNT_KEY);\n}\n\ninterface WalletModalProps {\n    show: boolean;\n    onWalletConnected?: Function;\n    onHide: Function;\n}\n\nexport const WalletsModal = (props: WalletModalProps): JSX.Element => {\n    const { ethereum, connect } = useWallet();\n    const eth = window.ethereum || ethereum;\n    const isEth = eth && eth.chainId !== '0x1';\n    const onConnect = async (providerId = 'injected') => {\n        try {\n            log(`üîë Attempt to connect wallet (provider ID is \"${providerId}\")`);\n            await connect(providerId);\n        } catch (connectionError: any) {\n            log(`‚ùóÔ∏è Error connecting wallet: ${connectionError.message}`);\n        }\n\n        window.localStorage.setItem(LS_WALLET_TYPE_KEY, providerId);\n        let walletAddress = '';\n\n        switch (providerId) {\n            case 'injected':\n                walletAddress = window.localStorage.getItem('LAST_ACTIVE_ACCOUNT') || '';\n                break;\n            case 'walletlink':\n                walletAddress =\n                    window.localStorage.getItem(\n                        '-walletlink:https://www.walletlink.org:Addresses'\n                    ) || '';\n                break;\n            case 'walletconnect':\n                const wcStorage = JSON.parse(window.localStorage.getItem('walletconnect') || '{}');\n                if (wcStorage?.accounts && wcStorage.accounts[0]) {\n                    walletAddress = wcStorage.accounts[0];\n                }\n                break;\n        }\n\n        window.localStorage.setItem(LS_ACCOUNT_KEY, walletAddress);\n\n        // @ts-ignore\n        const eth = window.ethereum || ethereum;\n\n        if (!eth && providerId === 'injected') {\n            alert(NO_METAMASK_WARNING);\n        }\n\n        // @ts-ignore\n        if (window.dataLayer) {\n            window.dataLayer.push({\n                event: 'login',\n                userID: getActiveWalletAddress(),\n                type: getActiveWalletName(),\n            });\n        }\n\n        if (props.onWalletConnected) {\n            props.onWalletConnected({\n                type: getActiveWalletName(),\n                address: getActiveWalletAddress(),\n            });\n        }\n    };\n\n    return (\n        <Modal\n            show={props.show}\n            onHide={props.onHide}\n            backdrop=\"static\"\n            animation={false}\n            keyboard={false}\n            centered\n            className=\"WalletsModalWrapper\"\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Connect a wallet</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"d-flex gap-3 flex-row justify-content-center align-items-start flex-wrap WalletsModal\">\n                <button\n                    onClick={() => onConnect('injected')}\n                    className=\"border-0 d-inline-flex flex-column justify-content-center align-items-center bg-transparent\"\n                >\n                    <img src=\"/metamask.svg\" alt=\"\" />\n                    <span className=\"mt-2\">Metamask</span>\n                </button>\n                <button\n                    onClick={() => onConnect('walletconnect')}\n                    className=\"border-0 d-inline-flex flex-column justify-content-center align-items-center bg-transparent\"\n                >\n                    <img src=\"/wallet-connect.svg\" alt=\"\" />\n                    <span className=\"mt-2\">Wallet Connect</span>\n                </button>\n                <button\n                    onClick={() => onConnect('walletlink')}\n                    className={`border-0 d-inline-flex flex-column justify-content-center align-items-center bg-transparent ${\n                        isEth ? 'disabled' : ''\n                    }`}\n                >\n                    <img src=\"/wallet-link.svg\" alt=\"\" />\n                    <span className=\"mt-2\">Coinbase Wallet</span>\n                    {isEth && <span className=\"badge bg-secondary\">only Ethereum</span>}\n                </button>\n                <button\n                    onClick={() => onConnect('walletconnect')}\n                    className={`border-0 d-inline-flex flex-column justify-content-center align-items-center bg-transparent ${\n                        isEth ? 'disabled' : ''\n                    }`}\n                >\n                    <img src=\"/zerion-wallet.svg\" alt=\"\" />\n                    <span className=\"mt-2\">Zerion Wallet</span>\n                    {isEth && <span className=\"badge bg-secondary\">only Ethereum</span>}\n                </button>\n            </Modal.Body>\n        </Modal>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}