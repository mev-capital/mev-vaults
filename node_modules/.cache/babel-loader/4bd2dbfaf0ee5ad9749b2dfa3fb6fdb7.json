{"ast":null,"code":"var _jsxFileName = \"/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/components/BscMigrationModal2/BscMigrationModal2.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport '../BscMigrationModal/BscMigrationModal.scss';\nimport { InfoBlock } from '../InfoBlock/InfoBlock';\nimport { BigNumber } from 'bignumber.js';\nimport { getBalanceNumber } from '../../utils/formatbalance';\nimport { getMasterChefContract } from '../../sushi/utils';\nimport { useWallet } from 'use-wallet';\nimport useSushi from '../../hooks/useSushi';\nimport { BIG_ZERO } from '../../utils/formatbalance';\nimport { isBSC } from '../../utils/zunami';\nimport { contractAddresses } from '../../sushi/lib/constants';\nimport migratorAbi from '../../sushi/lib/abi/bsc_1.2_migrator.json';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALLOWANCE_SUM = '10000000000000000000000000';\nexport const BscMigrationModal2 = props => {\n  _s();\n\n  const [result, setResult] = useState('');\n  const [pending, setPending] = useState(false);\n  const {\n    account,\n    chainId,\n    ethereum\n  } = useWallet();\n  const sushi = useSushi();\n  const [pendingGZLP, setPendingGZLP] = useState(false);\n  const [allowance, setAllowance] = useState(BIG_ZERO);\n  const [isGZLPapproved, setGZLPapproved] = useState(false);\n  const eth = window.ethereum;\n  useEffect(() => {\n    if (!account || chainId !== 56 || !props.show) {\n      return;\n    }\n\n    const getAllowance = async () => {\n      const oldBscContract = sushi.getBscContract(account);\n      oldBscContract.options.address = contractAddresses.deprecated.v_1_1_bsc;\n      const allowanceValue = await oldBscContract.methods.allowance(account, contractAddresses.zunami_bsc_migrator.v1_1_to_1_2).call();\n      console.log(`Allowance for BSC migrator: ${allowanceValue}`);\n      const allowanceBig = new BigNumber(allowanceValue);\n      setAllowance(allowanceBig);\n      setGZLPapproved(allowanceBig.isGreaterThanOrEqualTo(new BigNumber('1000000000000000000000000')));\n    };\n\n    getAllowance();\n    let refreshInterval = setInterval(getAllowance, 5000);\n    return () => clearInterval(refreshInterval);\n  }, [chainId, account, sushi, props.show]);\n  const handleApproveGzlp = useCallback(async () => {\n    try {\n      setPendingGZLP(true);\n      const zunamiContract = getMasterChefContract(sushi, chainId);\n      zunamiContract.options.address = contractAddresses.deprecated.v_1_1_bsc;\n      const tx = zunamiContract.methods.approve(contractAddresses.zunami_bsc_migrator.v1_1_to_1_2, ALLOWANCE_SUM).send({\n        from: account\n      }).on('transactionHash', tx => {\n        return tx.transactionHash;\n      });\n\n      if (!tx) {\n        setPendingGZLP(false);\n      }\n    } catch (e) {\n      setPendingGZLP(false);\n    }\n  }, [account, chainId, sushi]);\n  const migrate = useCallback(async () => {\n    if (!account || !chainId) {\n      return;\n    }\n\n    try {\n      if (!isBSC(chainId)) {\n        alert('Switch to BSC network to continue');\n        return;\n      }\n\n      setPending(true);\n      const web3 = new Web3(ethereum);\n      const zunamiContract = new web3.eth.Contract(migratorAbi);\n      zunamiContract.options.address = contractAddresses.zunami_bsc_migrator.v1_1_to_1_2;\n      zunamiContract.options.from = account;\n      zunamiContract.defaultAccount = account;\n      await zunamiContract.methods.migrate().send({\n        from: account\n      }).on('transactionHash', transactionHash => {\n        return transactionHash;\n      });\n      setResult(`Funds successfully migrated. Page will be reloaded in 7 seconds...`);\n      setTimeout(() => {\n        window.location.reload();\n      }, 7000);\n    } catch (error) {\n      debugger;\n      setResult(`Error while withdraw: ${error.message}`);\n    }\n\n    setPending(false);\n  }, [account, chainId, props.balance, sushi]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.show,\n    backdrop: \"static\",\n    animation: false,\n    keyboard: false,\n    centered: true,\n    onHide: () => {\n      if (props.onHide) {\n        props.onHide();\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"d-flex gap-3 flex-column justify-content-center align-items-center BscMigrationModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Zunami BSC Gateway v1.1 is outdated, you need to migrate to Zunami BSC Gateway v1.2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"We apologize, but in order to continue using the protocol, you will need to migrate your funds from the outdated version and to the new one. Don\\u2019t worry! Your funds and income are saved. Funds will be migrated immediately.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoBlock, {\n        title: \"Balance\",\n        description: `$ ${getBalanceNumber(props.balance.multipliedBy(props.lpPrice)).toNumber().toLocaleString('en')}`,\n        withColor: true,\n        isStrategy: false,\n        colorfulBg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), !isGZLPapproved && isBSC(chainId) && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `zun-button ${pendingGZLP ? 'disabled' : ''}`,\n        onClick: handleApproveGzlp,\n        children: \"Approve GZLP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `zun-button ${pending ? 'disabled' : ''} ${!isGZLPapproved || !isBSC(chainId) ? 'hide' : ''}`,\n        onClick: migrate,\n        children: \"Migrate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), !isBSC(chainId) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning text-center\",\n        children: [\"Please, switch to Binance Smart Chain network.\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"zun-button mt-2\",\n          onClick: async () => {\n            await eth.request({\n              method: 'wallet_switchEthereumChain',\n              params: [{\n                chainId: '0x38'\n              }]\n            });\n            window.location.reload();\n          },\n          children: \"Switch to BSC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BscMigrationModal2, \"+DWyXP/gHXUkDlc/mOE62OeUdpc=\", false, function () {\n  return [useWallet, useSushi];\n});\n\n_c = BscMigrationModal2;\n\nvar _c;\n\n$RefreshReg$(_c, \"BscMigrationModal2\");","map":{"version":3,"names":["useState","useCallback","useEffect","Modal","InfoBlock","BigNumber","getBalanceNumber","getMasterChefContract","useWallet","useSushi","BIG_ZERO","isBSC","contractAddresses","migratorAbi","Web3","ALLOWANCE_SUM","BscMigrationModal2","props","result","setResult","pending","setPending","account","chainId","ethereum","sushi","pendingGZLP","setPendingGZLP","allowance","setAllowance","isGZLPapproved","setGZLPapproved","eth","window","show","getAllowance","oldBscContract","getBscContract","options","address","deprecated","v_1_1_bsc","allowanceValue","methods","zunami_bsc_migrator","v1_1_to_1_2","call","console","log","allowanceBig","isGreaterThanOrEqualTo","refreshInterval","setInterval","clearInterval","handleApproveGzlp","zunamiContract","tx","approve","send","from","on","transactionHash","e","migrate","alert","web3","Contract","defaultAccount","setTimeout","location","reload","error","message","balance","onHide","multipliedBy","lpPrice","toNumber","toLocaleString","request","method","params"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/components/BscMigrationModal2/BscMigrationModal2.tsx"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport '../BscMigrationModal/BscMigrationModal.scss';\nimport { InfoBlock } from '../InfoBlock/InfoBlock';\nimport { BigNumber } from 'bignumber.js';\nimport { getBalanceNumber } from '../../utils/formatbalance';\nimport { getMasterChefContract } from '../../sushi/utils';\nimport { useWallet } from 'use-wallet';\nimport useSushi from '../../hooks/useSushi';\nimport { BIG_ZERO } from '../../utils/formatbalance';\nimport { isBSC } from '../../utils/zunami';\nimport { contractAddresses } from '../../sushi/lib/constants';\nimport migratorAbi from '../../sushi/lib/abi/bsc_1.2_migrator.json';\nimport Web3 from 'web3';\n\ninterface BscMigrationModalProps {\n    balance: BigNumber;\n    lpPrice: BigNumber;\n    show: boolean;\n    onWalletConnected?: Function;\n    onHide?: Function;\n}\n\nconst ALLOWANCE_SUM = '10000000000000000000000000';\n\nexport const BscMigrationModal2 = (props: BscMigrationModalProps): JSX.Element => {\n    const [result, setResult] = useState('');\n    const [pending, setPending] = useState(false);\n    const { account, chainId, ethereum } = useWallet();\n    const sushi = useSushi();\n    const [pendingGZLP, setPendingGZLP] = useState(false);\n    const [allowance, setAllowance] = useState(BIG_ZERO);\n    const [isGZLPapproved, setGZLPapproved] = useState(false);\n    const eth = window.ethereum;\n\n    useEffect(() => {\n        if (!account || chainId !== 56 || !props.show) {\n            return;\n        }\n\n        const getAllowance = async () => {\n            const oldBscContract = sushi.getBscContract(account);\n            oldBscContract.options.address = contractAddresses.deprecated.v_1_1_bsc;\n\n            const allowanceValue = await oldBscContract.methods\n                .allowance(account, contractAddresses.zunami_bsc_migrator.v1_1_to_1_2)\n                .call();\n\n            console.log(`Allowance for BSC migrator: ${allowanceValue}`);\n\n            const allowanceBig = new BigNumber(allowanceValue);\n            setAllowance(allowanceBig);\n\n            setGZLPapproved(\n                allowanceBig.isGreaterThanOrEqualTo(new BigNumber('1000000000000000000000000'))\n            );\n        };\n\n        getAllowance();\n        let refreshInterval = setInterval(getAllowance, 5000);\n        return () => clearInterval(refreshInterval);\n    }, [chainId, account, sushi, props.show]);\n\n    const handleApproveGzlp = useCallback(async () => {\n        try {\n            setPendingGZLP(true);\n            const zunamiContract = getMasterChefContract(sushi, chainId);\n            zunamiContract.options.address = contractAddresses.deprecated.v_1_1_bsc;\n\n            const tx = zunamiContract.methods\n                .approve(contractAddresses.zunami_bsc_migrator.v1_1_to_1_2, ALLOWANCE_SUM)\n                .send({ from: account })\n                .on('transactionHash', (tx) => {\n                    return tx.transactionHash;\n                });\n            if (!tx) {\n                setPendingGZLP(false);\n            }\n        } catch (e) {\n            setPendingGZLP(false);\n        }\n    }, [account, chainId, sushi]);\n\n    const migrate = useCallback(async () => {\n        if (!account || !chainId) {\n            return;\n        }\n\n        try {\n            if (!isBSC(chainId)) {\n                alert('Switch to BSC network to continue');\n                return;\n            }\n\n            setPending(true);\n\n            const web3 = new Web3(ethereum);\n            const zunamiContract = new web3.eth.Contract(migratorAbi);\n            zunamiContract.options.address = contractAddresses.zunami_bsc_migrator.v1_1_to_1_2;\n            zunamiContract.options.from = account;\n            zunamiContract.defaultAccount = account;\n\n            await zunamiContract.methods\n                .migrate()\n                .send({ from: account })\n                .on('transactionHash', (transactionHash) => {\n                    return transactionHash;\n                });\n\n            setResult(\n                `Funds successfully migrated. Page will be reloaded in 7 seconds...`\n            );\n\n            setTimeout(() => {\n                window.location.reload();\n            }, 7000);\n        } catch (error: any) {\n            debugger;\n            setResult(`Error while withdraw: ${error.message}`);\n        }\n\n        setPending(false);\n    }, [account, chainId, props.balance, sushi]);\n\n    return (\n        <Modal\n            show={props.show}\n            backdrop=\"static\"\n            animation={false}\n            keyboard={false}\n            centered\n            onHide={() => {\n                if (props.onHide) {\n                    props.onHide();\n                }\n            }}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title></Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"d-flex gap-3 flex-column justify-content-center align-items-center BscMigrationModal\">\n                <h3 className=\"text-center\">\n                    Zunami BSC Gateway v1.1 is outdated, you need to migrate to Zunami BSC Gateway\n                    v1.2\n                </h3>\n                <p className=\"text-center\">\n                We apologize, but in order to continue using the protocol, you will need to migrate your funds\n                from the outdated version and to the new one. Don’t worry!\n                Your funds and income are saved. Funds will be migrated immediately.\n                </p>\n                <InfoBlock\n                    title=\"Balance\"\n                    description={`$ ${getBalanceNumber(props.balance.multipliedBy(props.lpPrice))\n                        .toNumber()\n                        .toLocaleString('en')}`}\n                    withColor={true}\n                    isStrategy={false}\n                    colorfulBg={true}\n                />\n                {!isGZLPapproved && isBSC(chainId) && (\n                    <button\n                        className={`zun-button ${pendingGZLP ? 'disabled' : ''}`}\n                        onClick={handleApproveGzlp}\n                    >\n                        Approve GZLP\n                    </button>\n                )}\n                <button\n                    className={`zun-button ${pending ? 'disabled' : ''} ${\n                        !isGZLPapproved || !isBSC(chainId) ? 'hide' : ''\n                    }`}\n                    onClick={migrate}\n                >\n                    Migrate\n                </button>\n                {!isBSC(chainId) && (\n                    <div className=\"alert alert-warning text-center\">\n                        Please, switch to Binance Smart Chain network.\n                        <button\n                            className=\"zun-button mt-2\"\n                            onClick={async () => {\n                                await eth.request({\n                                    method: 'wallet_switchEthereumChain',\n                                    params: [{ chainId: '0x38' }],\n                                });\n                                window.location.reload();\n                            }}\n                        >\n                            Switch to BSC\n                        </button>\n                    </div>\n                )}\n                {result && <div className=\"alert alert-info\">{result}</div>}\n            </Modal.Body>\n        </Modal>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}