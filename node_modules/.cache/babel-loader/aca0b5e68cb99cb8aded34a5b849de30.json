{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport { useEffect, useState } from 'react';\nimport { BIG_ZERO } from '../utils/formatbalance';\nimport useWallet from './useWallet';\nimport useSushi from './useSushi';\nimport { getMasterChefContract } from '../sushi/utils';\nimport Web3 from 'web3';\nimport bscAbi from '../actions/abi/zunami_bsc.json';\nimport { isETH } from '../utils/zunami';\nimport { log } from '../utils/logger';\nimport { contractAddresses } from '../sushi/lib/constants';\n\nasync function getDeprecatedBalance(address, account) {\n  const web3 = new Web3(new Web3.providers.HttpProvider('https://bscrpc.com'));\n  const contract = new web3.eth.Contract(bscAbi);\n  contract.options.from = account;\n  contract.options.address = address;\n  const value = await contract.methods.balanceOf(account).call();\n  log(`Deprecated BSC contract (${address}) balance execution. Result: ${value}`);\n  return value;\n}\n\nconst useOldBscBalance = () => {\n  _s();\n\n  const [balance, setBalance] = useState([new BigNumber(BIG_ZERO), // 1.0\n  new BigNumber(BIG_ZERO) // 1.1\n  ]);\n  const {\n    chainId,\n    account\n  } = useWallet();\n  const isEth = isETH(chainId);\n  const sushi = useSushi();\n  const masterChefContract = getMasterChefContract(sushi);\n  useEffect(() => {\n    if (!account || !chainId || !masterChefContract) {\n      setBalance([BIG_ZERO, BIG_ZERO]);\n      return;\n    }\n\n    const getBalance = async () => {\n      setBalance([new BigNumber(await getDeprecatedBalance(contractAddresses.deprecated.v_1_0_bsc, account)), new BigNumber(await getDeprecatedBalance(contractAddresses.deprecated.v_1_1_bsc, account))]);\n    };\n\n    getBalance();\n  }, [account, chainId, isEth, masterChefContract]);\n  return balance;\n};\n\n_s(useOldBscBalance, \"nh0MdxDYrQUGtPRZk1WMC45VHsM=\", false, function () {\n  return [useWallet, useSushi];\n});\n\nexport default useOldBscBalance;","map":{"version":3,"names":["BigNumber","useEffect","useState","BIG_ZERO","useWallet","useSushi","getMasterChefContract","Web3","bscAbi","isETH","log","contractAddresses","getDeprecatedBalance","address","account","web3","providers","HttpProvider","contract","eth","Contract","options","from","value","methods","balanceOf","call","useOldBscBalance","balance","setBalance","chainId","isEth","sushi","masterChefContract","getBalance","deprecated","v_1_0_bsc","v_1_1_bsc"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/hooks/useOldBscBalance.ts"],"sourcesContent":["import BigNumber from 'bignumber.js';\nimport { useEffect, useState } from 'react';\nimport { BIG_ZERO } from '../utils/formatbalance';\nimport useWallet from './useWallet';\nimport useSushi from './useSushi';\nimport { getMasterChefContract } from '../sushi/utils';\nimport Web3 from 'web3';\nimport bscAbi from '../actions/abi/zunami_bsc.json';\nimport { isETH } from '../utils/zunami';\nimport { log } from '../utils/logger';\nimport { contractAddresses } from '../sushi/lib/constants';\n\nasync function getDeprecatedBalance(address: string, account: string) : Promise<string> {\n    const web3 = new Web3(new Web3.providers.HttpProvider('https://bscrpc.com'));\n    const contract = new web3.eth.Contract(bscAbi);\n    contract.options.from = account;\n    contract.options.address = address;\n\n    const value = await contract.methods.balanceOf(account).call();\n    log(`Deprecated BSC contract (${address}) balance execution. Result: ${value}`);\n    return value;\n}\n\nconst useOldBscBalance = () => {\n    const [balance, setBalance] = useState([\n        new BigNumber(BIG_ZERO), // 1.0\n        new BigNumber(BIG_ZERO), // 1.1\n    ]);\n\n    const { chainId, account } = useWallet();\n    const isEth = isETH(chainId);\n    const sushi = useSushi();\n    const masterChefContract = getMasterChefContract(sushi);\n\n    useEffect(() => {\n        if (!account || !chainId || !masterChefContract) {\n            setBalance([\n                BIG_ZERO,\n                BIG_ZERO\n            ]);\n            return;\n        }\n\n        const getBalance = async () => {\n            setBalance([\n                new BigNumber(await getDeprecatedBalance(contractAddresses.deprecated.v_1_0_bsc, account)),\n                new BigNumber(await getDeprecatedBalance(contractAddresses.deprecated.v_1_1_bsc, account)),\n            ]);\n        };\n\n        getBalance();\n    }, [account, chainId, isEth, masterChefContract]);\n\n    return balance;\n};\n\nexport default useOldBscBalance;\n"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,iBAAT,QAAkC,wBAAlC;;AAEA,eAAeC,oBAAf,CAAoCC,OAApC,EAAqDC,OAArD,EAAwF;EACpF,MAAMC,IAAI,GAAG,IAAIR,IAAJ,CAAS,IAAIA,IAAI,CAACS,SAAL,CAAeC,YAAnB,CAAgC,oBAAhC,CAAT,CAAb;EACA,MAAMC,QAAQ,GAAG,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsBZ,MAAtB,CAAjB;EACAU,QAAQ,CAACG,OAAT,CAAiBC,IAAjB,GAAwBR,OAAxB;EACAI,QAAQ,CAACG,OAAT,CAAiBR,OAAjB,GAA2BA,OAA3B;EAEA,MAAMU,KAAK,GAAG,MAAML,QAAQ,CAACM,OAAT,CAAiBC,SAAjB,CAA2BX,OAA3B,EAAoCY,IAApC,EAApB;EACAhB,GAAG,CAAE,4BAA2BG,OAAQ,gCAA+BU,KAAM,EAA1E,CAAH;EACA,OAAOA,KAAP;AACH;;AAED,MAAMI,gBAAgB,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,CACnC,IAAIF,SAAJ,CAAcG,QAAd,CADmC,EACV;EACzB,IAAIH,SAAJ,CAAcG,QAAd,CAFmC,CAEV;EAFU,CAAD,CAAtC;EAKA,MAAM;IAAE2B,OAAF;IAAWhB;EAAX,IAAuBV,SAAS,EAAtC;EACA,MAAM2B,KAAK,GAAGtB,KAAK,CAACqB,OAAD,CAAnB;EACA,MAAME,KAAK,GAAG3B,QAAQ,EAAtB;EACA,MAAM4B,kBAAkB,GAAG3B,qBAAqB,CAAC0B,KAAD,CAAhD;EAEA/B,SAAS,CAAC,MAAM;IACZ,IAAI,CAACa,OAAD,IAAY,CAACgB,OAAb,IAAwB,CAACG,kBAA7B,EAAiD;MAC7CJ,UAAU,CAAC,CACP1B,QADO,EAEPA,QAFO,CAAD,CAAV;MAIA;IACH;;IAED,MAAM+B,UAAU,GAAG,YAAY;MAC3BL,UAAU,CAAC,CACP,IAAI7B,SAAJ,CAAc,MAAMY,oBAAoB,CAACD,iBAAiB,CAACwB,UAAlB,CAA6BC,SAA9B,EAAyCtB,OAAzC,CAAxC,CADO,EAEP,IAAId,SAAJ,CAAc,MAAMY,oBAAoB,CAACD,iBAAiB,CAACwB,UAAlB,CAA6BE,SAA9B,EAAyCvB,OAAzC,CAAxC,CAFO,CAAD,CAAV;IAIH,CALD;;IAOAoB,UAAU;EACb,CAjBQ,EAiBN,CAACpB,OAAD,EAAUgB,OAAV,EAAmBC,KAAnB,EAA0BE,kBAA1B,CAjBM,CAAT;EAmBA,OAAOL,OAAP;AACH,CA/BD;;GAAMD,gB;UAM2BvB,S,EAEfC,Q;;;AAyBlB,eAAesB,gBAAf"},"metadata":{},"sourceType":"module"}