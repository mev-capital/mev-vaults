{"ast":null,"code":"var _jsxFileName = \"/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/components/Form/Form.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useMemo, useState, useEffect } from 'react';\nimport { Input } from './Input/Input';\nimport { Preloader } from '../Preloader/Preloader';\nimport './Form.scss';\nimport { BIG_ZERO, daiAddress, getBalanceNumber, getFullDisplayBalance, usdcAddress, usdtAddress, bscUsdtAddress, busdAddress, plgUsdtAddress } from '../../utils/formatbalance';\nimport { useAllowanceStables } from '../../hooks/useAllowance';\nimport { useUserBalances } from '../../hooks/useUserBalances';\nimport useBalanceOf from '../../hooks/useBalanceOf';\nimport useApprove from '../../hooks/useApprove';\nimport useStake from '../../hooks/useStake';\nimport useUnstake from '../../hooks/useUnstake';\nimport { BigNumber } from 'bignumber.js';\nimport { Toast, ToastContainer } from 'react-bootstrap';\nimport { ActionSelector } from './ActionSelector/ActionSelector';\nimport { DirectAction } from './DirectAction/DirectAction';\nimport { getActiveWalletName, getActiveWalletAddress } from '../WalletsModal/WalletsModal';\nimport { useGzlpAllowance } from '../../hooks/useGzlpAllowance';\nimport { useWallet } from 'use-wallet';\nimport { log } from '../../utils/logger';\nimport { isBSC, isETH, isPLG } from '../../utils/zunami';\nimport { APPROVE_SUM } from '../../sushi/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getScanAddressByChainId(chainId) {\n  let address = 'etherscan.io';\n\n  switch (chainId) {\n    case 56:\n      address = 'bscscan.com';\n      break;\n\n    case 137:\n      address = 'polygonscan.com';\n      break;\n  }\n\n  return address;\n}\n\nconst getDepositValidationError = (dai, usdc, usdt, isApproved, depositExceedAmount) => {\n  let error = '';\n\n  if (dai === '' && usdc === '' && usdt === '') {\n    error = 'Please, enter the amount of stablecoins to deposit';\n  } else if (depositExceedAmount) {\n    error = \"You're trying to deposit more than you have\";\n  } else if (!isApproved) {\n    error = 'You have to approve your funds before the deposit';\n  }\n\n  return error;\n};\n\nconst getWithdrawValidationError = (dai, usdc, usdt, fullBalanceLpShare, userMaxWithdraw, lpShareToWithdraw) => {\n  let error = '';\n\n  if (dai === '' && usdc === '' && usdt === '') {\n    error = 'Please, enter the amount to withdraw';\n  } else if (userMaxWithdraw.toNumber() < lpShareToWithdraw.toNumber()) {\n    error = \"You're trying to withdraw more than you have\";\n  } else if (fullBalanceLpShare === '0' || lpShareToWithdraw.toNumber() === 0) {\n    error = 'You have zero LP shares';\n  }\n\n  return error;\n};\n\nconst getBscWithdrawValidationError = (isApproved, lpShareToWithdraw) => {\n  let error = '';\n\n  if (!isApproved) {\n    error = 'Please, approve GZLP before withdraw';\n  }\n\n  if (lpShareToWithdraw.toNumber() === 0) {\n    error = 'You have no funds';\n  }\n\n  return error;\n};\n\nexport const Form = props => {\n  _s();\n\n  const {\n    account,\n    chainId\n  } = useWallet();\n  const [action, setAction] = useState(props.operationName === 'Deposit' ? 'deposit' : 'withdraw');\n\n  const daiInputHandler = newValue => {\n    if (props.onCoinChange) {\n      props.onCoinChange('dai', newValue);\n    }\n  };\n\n  const usdcInputHandler = newValue => {\n    if (props.onCoinChange) {\n      props.onCoinChange('usdc', newValue);\n    }\n  };\n\n  const usdtInputHandler = newValue => {\n    if (props.onCoinChange) {\n      props.onCoinChange('usdt', newValue);\n    }\n  };\n\n  const busdInputHandler = newValue => {\n    if (props.onCoinChange) {\n      props.onCoinChange('busd', newValue);\n    }\n  };\n\n  const [pendingDAI, setPendingDAI] = useState(false);\n  const [pendingUSDC, setPendingUSDC] = useState(false);\n  const [pendingUSDT, setPendingUSDT] = useState(false);\n  const [pendingBUSD, setPendingBUSD] = useState(false);\n  const [pendingGZLP, setPendingGZLP] = useState(false); // wrapped in useMemo to prevent lpShareToWithdraw hook deps change on every render\n\n  const userLpAmount = useBalanceOf();\n  const userBalanceList = useUserBalances();\n  const approveList = useAllowanceStables();\n  const gzlpAllowance = useGzlpAllowance();\n  const stableInputsSum = (parseFloat(props.dai) || 0) + (parseFloat(props.usdc) || 0) + (parseFloat(props.usdt) || 0) + (parseFloat(props.busd) || 0); // user allowance\n\n  const isApprovedTokens = useMemo(() => {\n    return [approveList ? approveList[0].toNumber() > 0 : false, approveList ? approveList[1].toNumber() > 0 : false, approveList ? approveList[2].toNumber() > 0 : false, approveList ? approveList[3].toNumber() > 0 : false];\n  }, [approveList]); // max for withdraw or deposit\n\n  const userMaxWithdraw = props.lpPrice.multipliedBy(userLpAmount) || BIG_ZERO;\n  const userMaxWithdrawMinusInput = !userMaxWithdraw || userMaxWithdraw.toNumber() <= 0 || !userMaxWithdraw.toNumber() ? BIG_ZERO : new BigNumber(userMaxWithdraw.toNumber() - stableInputsSum); // max sums for deposit\n\n  const userMaxDeposit = [userBalanceList && userBalanceList[0].toNumber() > 0 && userBalanceList[0] || BIG_ZERO, userBalanceList && userBalanceList[1].toNumber() > 0 && userBalanceList[1] || BIG_ZERO, userBalanceList && userBalanceList[2].toNumber() > 0 && userBalanceList[2] || BIG_ZERO, userBalanceList && userBalanceList[3].toNumber() > 0 && userBalanceList[3] || BIG_ZERO]; // final array both for deposit and withdraw\n\n  const max = [action === 'deposit' ? userMaxDeposit[0] : userMaxWithdrawMinusInput, action === 'deposit' ? userMaxDeposit[1] : userMaxWithdrawMinusInput, action === 'deposit' ? userMaxDeposit[2] : userMaxWithdrawMinusInput, action === 'deposit' ? userMaxDeposit[3] : userMaxWithdrawMinusInput]; // approves\n\n  const {\n    onApprove,\n    onGZLPApprove\n  } = useApprove();\n  const handleApproveDai = useCallback(async () => {\n    try {\n      setPendingDAI(true);\n      const tx = onApprove(daiAddress);\n\n      if (!tx) {\n        setPendingDAI(false);\n      }\n    } catch (e) {\n      setPendingDAI(false);\n    }\n  }, [onApprove]);\n  const handleApproveUsdc = useCallback(async () => {\n    try {\n      setPendingUSDC(true);\n      const tx = onApprove(usdcAddress);\n\n      if (!tx) {\n        setPendingUSDC(false);\n      }\n    } catch (e) {\n      setPendingUSDC(false);\n    }\n  }, [onApprove]);\n  const handleApproveUsdt = useCallback(async () => {\n    setPendingUSDT(true);\n\n    try {\n      let address = usdtAddress;\n\n      if (isBSC(chainId)) {\n        address = bscUsdtAddress;\n      }\n\n      if (isPLG(chainId)) {\n        address = plgUsdtAddress;\n      }\n\n      const tx = onApprove(address);\n\n      if (!tx) {\n        setPendingUSDT(false);\n      }\n    } catch (e) {\n      setPendingUSDT(false);\n    }\n\n    setPendingUSDT(false);\n  }, [onApprove, chainId]);\n  const handleApproveGzlp = useCallback(async () => {\n    try {\n      setPendingGZLP(true);\n      const tx = onGZLPApprove();\n\n      if (!tx) {\n        setPendingGZLP(false);\n      }\n    } catch (e) {\n      setPendingGZLP(false);\n    }\n  }, [onGZLPApprove]);\n  const handleApproveBusd = useCallback(async () => {\n    setPendingBUSD(true);\n    log(`handleApproveBusd callback`);\n\n    try {\n      const tx = onApprove(busdAddress);\n\n      if (!tx) {\n        setPendingBUSD(false);\n      }\n    } catch (e) {\n      setPendingBUSD(false);\n    }\n\n    setPendingBUSD(false);\n  }, [onApprove]);\n  const fullBalanceLpShare = useMemo(() => {\n    return getFullDisplayBalance(userLpAmount);\n  }, [userLpAmount]); // caclulate lpshare to withdraw\n\n  const lpShareToWithdraw = useMemo(() => {\n    if (props.operationName !== 'withdraw') {\n      return BIG_ZERO;\n    }\n\n    const sharesAmount = new BigNumber(stableInputsSum / getBalanceNumber(props.lpPrice).toNumber());\n\n    if (sharesAmount.toNumber() === 0 || sharesAmount.toNumber() === Infinity || props.lpPrice.toNumber() === 0) {\n      return BIG_ZERO;\n    }\n\n    return sharesAmount;\n  }, [stableInputsSum, props.lpPrice, props.operationName]);\n  const fullBalancetoWithdraw = useMemo(() => {\n    const balance = getFullDisplayBalance(lpShareToWithdraw, 18);\n    return balance;\n  }, [lpShareToWithdraw, chainId]); // deposit and withdraw functions\n\n  const depositExceedAmount = parseInt(props.dai) > getBalanceNumber(userBalanceList[0]).toNumber() || parseInt(props.usdc) > getBalanceNumber(userBalanceList[1], 6).toNumber() || parseInt(props.usdt) > getBalanceNumber(userBalanceList[2], 6).toNumber();\n  const [pendingTx, setPendingTx] = useState(false);\n  const [transactionId, setTransactionId] = useState(undefined);\n  const {\n    onStake\n  } = useStake([{\n    name: 'DAI',\n    value: props.dai === '' ? '0' : props.dai\n  }, {\n    name: 'USDC',\n    value: props.usdc === '' ? '0' : props.usdc\n  }, {\n    name: 'USDT',\n    value: props.usdt === '' ? '0' : props.usdt\n  }, {\n    name: 'BUSD',\n    value: props.busd === '' ? '0' : props.busd\n  }], props.directOperation);\n  const {\n    onUnstake\n  } = useUnstake(userLpAmount, !props.directOperation, props.sharePercent, props.directOperation && props.selectedCoinIndex === -1 ? 0 : props.selectedCoinIndex); // TODO: need detect canceled tx's by user\n\n  const [transactionError, setTransactionError] = useState();\n  const emptyFunds = isETH(chainId) ? !Number(props.dai) && !Number(props.usdc) && !Number(props.usdt) : !Number(props.usdt) && !Number(props.busd);\n  const [isApproved, setIsApproved] = useState(false);\n  useEffect(() => {\n    if (chainId === 1) {\n      setIsApproved(approveList && (parseFloat(props.dai) > 0 && isApprovedTokens[0] || props.dai === '0' || props.dai === '') && (parseFloat(props.usdc) > 0 && isApprovedTokens[1] || props.usdc === '0' || props.usdc === '') && (parseFloat(props.usdt) > 0 && isApprovedTokens[2] || props.usdt === '0' || props.usdt === ''));\n    } else if (isBSC(chainId)) {\n      let approveVal = false;\n\n      if (props.operationName === 'withdraw') {\n        approveVal = gzlpAllowance.isGreaterThanOrEqualTo(new BigNumber(APPROVE_SUM));\n        log(`Withdrawal approve set to ${approveVal}, it's less than ${APPROVE_SUM}`);\n      } else {\n        if (props.busd !== '0') {\n          approveVal = isApprovedTokens[3];\n        } else {\n          approveVal = isApprovedTokens[2];\n        }\n      }\n\n      log(`Approved: ${approveVal}, GZLP allowance: ${gzlpAllowance.toNumber()}, USDT: ${parseFloat(props.usdt)}, BUSD: ${parseFloat(props.busd)}`);\n      setIsApproved(approveVal);\n    } else if (isPLG(chainId)) {\n      let approveVal = false;\n\n      if (props.operationName === 'withdraw') {\n        approveVal = gzlpAllowance.isGreaterThanOrEqualTo(new BigNumber(APPROVE_SUM));\n        log(`Withdrawal approve set to ${approveVal}, it's less than ${APPROVE_SUM}`);\n        setIsApproved(approveVal);\n        return;\n      }\n\n      setIsApproved(approveList && (parseFloat(props.dai) > 0 && isApprovedTokens[0] || props.dai === '0' || props.dai === '') && (parseFloat(props.usdc) > 0 && isApprovedTokens[1] || props.usdc === '0' || props.usdc === '') && (parseFloat(props.usdt) > 0 && isApprovedTokens[2] || props.usdt === '0' || props.usdt === ''));\n    }\n  }, [gzlpAllowance, props.operationName, chainId, approveList, props.usdc, props.dai, props.usdt, props.busd, isApprovedTokens]);\n  const validationError = action === 'deposit' ? getDepositValidationError(props.dai, props.usdc, props.usdt, isApproved, depositExceedAmount) : isETH(chainId) ? getWithdrawValidationError(props.dai, props.usdc, props.usdt, fullBalanceLpShare, userMaxWithdraw, lpShareToWithdraw) : getBscWithdrawValidationError(isApproved, lpShareToWithdraw);\n  const cantDeposit = emptyFunds || !isApproved || pendingTx || depositExceedAmount;\n\n  if (isETH(chainId)) {\n    log(`Approved stables status: DAI: ${isApprovedTokens[0].toString()}, USDT: ${isApprovedTokens[1].toString()}, USDC: ${isApprovedTokens[2].toString()}`);\n  }\n\n  if (isBSC(chainId)) {\n    log(`Approved stables status: USDT: ${isApprovedTokens[1].toString()}, BUSD: ${isApprovedTokens[2].toString()}`);\n  }\n\n  if (isPLG(chainId)) {\n    log(`Approved stables status: DAI: ${isApprovedTokens[0].toString()}, USDT: ${isApprovedTokens[1].toString()}, USDC: ${isApprovedTokens[2].toString()}`);\n  }\n\n  if (props.operationName === 'deposit') {\n    log(`Can deposit: emptyFunds: ${emptyFunds}, isApproved: ${isApproved}, pendingTx: ${pendingTx}, depositExceedAmount: ${depositExceedAmount}`);\n  }\n\n  const canWithdraw = isETH(chainId) ? !validationError : // BSC withdraw only if there is a balance and approove granted\n  userLpAmount.toNumber() > 0 && !validationError;\n\n  if (props.operationName === 'withdraw') {\n    log(`Can withdraw: ${canWithdraw}. Is approved: ${isApproved}`);\n\n    if (validationError) {\n      log(`Can't withdraw due to error: ${validationError}`);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'Form',\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: 'top-end',\n      className: 'toasts mt-3 me-3',\n      children: [transactionError && /*#__PURE__*/_jsxDEV(Toast, {\n        onClose: () => setTransactionError(undefined),\n        delay: 5000,\n        autohide: true,\n        children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: \"Sorry, we couldn't complete the transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 21\n      }, this), transactionId && /*#__PURE__*/_jsxDEV(Toast, {\n        onClose: () => setTransactionId(undefined),\n        delay: 15000,\n        autohide: true,\n        children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: [\"Success! Check out the\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            href: `https://${getScanAddressByChainId(chainId)}/tx/${transactionId}`,\n            children: \"transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: action,\n      onSubmit: async e => {\n        e.preventDefault();\n        const totalSum = parseInt(props.dai, 10) + parseInt(props.usdc, 10) + parseInt(props.usdt, 10);\n\n        switch (action) {\n          case 'withdraw':\n            setPendingTx(true);\n\n            try {\n              const tx = await onUnstake();\n              setTransactionId(tx.transactionHash); // @ts-ignore\n\n              if (window.dataLayer) {\n                window.dataLayer.push({\n                  event: 'withdrawal',\n                  userID: getActiveWalletAddress(),\n                  type: getActiveWalletName(),\n                  value: totalSum\n                });\n              }\n            } catch (error) {\n              log(`Withdraw error: ${error.message}`);\n              setTransactionError(error);\n            }\n\n            if (props.onWithdraw) {\n              props.onWithdraw();\n            }\n\n            setPendingTx(false);\n            break;\n\n          case 'deposit':\n            setPendingTx(true);\n\n            try {\n              const tx = await onStake();\n              setTransactionId(tx.transactionHash); // @ts-ignore\n\n              if (window.dataLayer) {\n                window.dataLayer.push({\n                  event: 'deposit',\n                  userID: getActiveWalletAddress(),\n                  type: getActiveWalletName(),\n                  value: totalSum\n                });\n              }\n            } catch (error) {\n              log(`Deposit error: ${error.message}`);\n              setTransactionError(error);\n            }\n\n            if (props.onDeposit) {\n              props.onDeposit();\n            }\n\n            setPendingTx(false);\n            break;\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(ActionSelector, {\n        value: action,\n        onChange: action => {\n          setAction(action);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [chainId === 1 && /*#__PURE__*/_jsxDEV(Input, {\n          action: action,\n          name: \"DAI\",\n          value: props.dai,\n          handler: daiInputHandler,\n          max: max[0],\n          disabled: action === 'withdraw',\n          chainId: chainId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 25\n        }, this), chainId === 1 && /*#__PURE__*/_jsxDEV(Input, {\n          action: action,\n          name: \"USDC\",\n          value: props.usdc,\n          handler: usdcInputHandler,\n          max: max[1],\n          disabled: action === 'withdraw',\n          chainId: chainId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          action: action,\n          name: \"USDT\",\n          value: props.usdt,\n          handler: usdtInputHandler,\n          max: max[2],\n          disabled: action === 'withdraw' || chainId === 56 && action === 'deposit' && Number(props.busd) > 0,\n          chainId: chainId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 21\n        }, this), chainId === 56 && action === 'deposit' && /*#__PURE__*/_jsxDEV(Input, {\n          action: action,\n          name: \"BUSD\",\n          value: props.busd,\n          handler: busdInputHandler,\n          max: max[3],\n          chainId: chainId,\n          disabled: Number(props.usdt) > 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 25\n        }, this), action === 'deposit' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deposit-action flex-wrap d-flex flex-row flex-wrap buttons align-items-center\",\n          children: [account && parseFloat(props.dai) > 0 && !isApprovedTokens[0] && chainId === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: pendingDAI || depositExceedAmount,\n            onClick: handleApproveDai,\n            type: \"button\",\n            className: \"mb-2\",\n            children: [\"Approve DAI\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 37\n          }, this), account && parseFloat(props.usdc) > 0 && !isApprovedTokens[1] && chainId === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: pendingUSDC || depositExceedAmount,\n            onClick: handleApproveUsdc,\n            type: \"button\",\n            className: \"mb-2\",\n            children: [\"Approve USDC\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 37\n          }, this), account && parseFloat(props.usdt) > 0 && !isApprovedTokens[2] && /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: pendingUSDT || depositExceedAmount,\n            onClick: handleApproveUsdt,\n            type: \"button\",\n            className: \"mb-2\",\n            children: [\"Approve USDT\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 33\n          }, this), account && parseFloat(props.busd) > 0 && !isApprovedTokens[3] && /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: pendingBUSD || depositExceedAmount,\n            onClick: handleApproveBusd,\n            type: \"button\",\n            className: \"mb-2\",\n            children: [\"Approve BUSD\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 33\n          }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deposit-button-wrapper flex-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: cantDeposit,\n              children: \"Deposit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 37\n            }, this), !pendingTx && /*#__PURE__*/_jsxDEV(DirectAction, {\n              actionName: \"deposit\",\n              checked: !props.directOperation,\n              disabled: chainId !== 1,\n              hint: `${chainId === 1 ? 'When using optimized deposit funds will be deposited within 24 hours and many times cheaper' : 'When using deposit funds will be deposited within 24 hours, because users’ funds accumulate in one batch and distribute to the ETH network in Zunami App.'}`,\n              onChange: state => {\n                if (props.onOperationModeChange) {\n                  props.onOperationModeChange(state);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 41\n            }, this), pendingTx && /*#__PURE__*/_jsxDEV(Preloader, {\n              className: \"ms-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 51\n            }, this), props.slippage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel Slippage\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"panel-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Slippage: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-${Number(props.slippage) >= 0.4 ? 'danger' : 'success'}`,\n                  children: [props.slippage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 33\n          }, this), validationError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'mt-2 text-danger error',\n            children: validationError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 25\n        }, this), action === 'withdraw' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: account && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deposit-button-wrapper flex-wrap\",\n            children: [account && !isApproved && Number(fullBalancetoWithdraw) > 0 && chainId !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: pendingGZLP,\n              onClick: handleApproveGzlp,\n              className: \"me-2\",\n              children: \"Approve GZLP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: `${!canWithdraw ? 'disabled' : ''}`,\n              children: \"Withdraw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 37\n            }, this), !pendingTx && /*#__PURE__*/_jsxDEV(DirectAction, {\n              actionName: \"withdraw\",\n              disabled: props.directOperationDisabled || chainId !== 1,\n              checked: !props.directOperation,\n              hint: \"When using optimized withdrawal funds will be withdrawn within 24 hours and many times cheaper. Optimized withdraw available only in all coins.\",\n              onChange: state => {\n                if (props.onOperationModeChange) {\n                  props.onOperationModeChange(state);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 41\n            }, this), pendingTx && /*#__PURE__*/_jsxDEV(Preloader, {\n              className: \"ms-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 51\n            }, this), props.slippage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `panel Slippage network-${chainId}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"panel-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Slippage: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-${Number(props.slippage) < -0.4 ? 'danger' : 'success'}`,\n                  children: [props.slippage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 25\n        }, this), validationError && props.operationName === 'withdraw' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'mt-2 text-danger error withdraw-error',\n          children: validationError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 472,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"lCJiu5Ll6vpUEw6qyMEAQNhljqE=\", false, function () {\n  return [useWallet, useBalanceOf, useUserBalances, useAllowanceStables, useGzlpAllowance, useApprove, useStake, useUnstake];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useCallback","useMemo","useState","useEffect","Input","Preloader","BIG_ZERO","daiAddress","getBalanceNumber","getFullDisplayBalance","usdcAddress","usdtAddress","bscUsdtAddress","busdAddress","plgUsdtAddress","useAllowanceStables","useUserBalances","useBalanceOf","useApprove","useStake","useUnstake","BigNumber","Toast","ToastContainer","ActionSelector","DirectAction","getActiveWalletName","getActiveWalletAddress","useGzlpAllowance","useWallet","log","isBSC","isETH","isPLG","APPROVE_SUM","getScanAddressByChainId","chainId","address","getDepositValidationError","dai","usdc","usdt","isApproved","depositExceedAmount","error","getWithdrawValidationError","fullBalanceLpShare","userMaxWithdraw","lpShareToWithdraw","toNumber","getBscWithdrawValidationError","Form","props","account","action","setAction","operationName","daiInputHandler","newValue","onCoinChange","usdcInputHandler","usdtInputHandler","busdInputHandler","pendingDAI","setPendingDAI","pendingUSDC","setPendingUSDC","pendingUSDT","setPendingUSDT","pendingBUSD","setPendingBUSD","pendingGZLP","setPendingGZLP","userLpAmount","userBalanceList","approveList","gzlpAllowance","stableInputsSum","parseFloat","busd","isApprovedTokens","lpPrice","multipliedBy","userMaxWithdrawMinusInput","userMaxDeposit","max","onApprove","onGZLPApprove","handleApproveDai","tx","e","handleApproveUsdc","handleApproveUsdt","handleApproveGzlp","handleApproveBusd","sharesAmount","Infinity","fullBalancetoWithdraw","balance","parseInt","pendingTx","setPendingTx","transactionId","setTransactionId","undefined","onStake","name","value","directOperation","onUnstake","sharePercent","selectedCoinIndex","transactionError","setTransactionError","emptyFunds","Number","setIsApproved","approveVal","isGreaterThanOrEqualTo","validationError","cantDeposit","toString","canWithdraw","preventDefault","totalSum","transactionHash","window","dataLayer","push","event","userID","type","message","onWithdraw","onDeposit","state","onOperationModeChange","slippage","directOperationDisabled"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/components/Form/Form.tsx"],"sourcesContent":["import { useCallback, useMemo, useState, useEffect } from 'react';\nimport { Input } from './Input/Input';\nimport { Preloader } from '../Preloader/Preloader';\nimport './Form.scss';\nimport {\n    BIG_ZERO,\n    daiAddress,\n    getBalanceNumber,\n    getFullDisplayBalance,\n    usdcAddress,\n    usdtAddress,\n    bscUsdtAddress,\n    busdAddress,\n    plgUsdtAddress,\n} from '../../utils/formatbalance';\nimport { useAllowanceStables } from '../../hooks/useAllowance';\nimport { useUserBalances } from '../../hooks/useUserBalances';\nimport useBalanceOf from '../../hooks/useBalanceOf';\nimport useApprove from '../../hooks/useApprove';\nimport useStake from '../../hooks/useStake';\nimport useUnstake from '../../hooks/useUnstake';\nimport { BigNumber } from 'bignumber.js';\nimport { Toast, ToastContainer } from 'react-bootstrap';\nimport { ActionSelector } from './ActionSelector/ActionSelector';\nimport { DirectAction } from './DirectAction/DirectAction';\nimport { getActiveWalletName, getActiveWalletAddress } from '../WalletsModal/WalletsModal';\nimport { useGzlpAllowance } from '../../hooks/useGzlpAllowance';\nimport { FormProps, TransactionError } from './Form.types';\nimport { useWallet } from 'use-wallet';\nimport { log } from '../../utils/logger';\nimport { isBSC, isETH, isPLG } from '../../utils/zunami';\nimport { APPROVE_SUM } from '../../sushi/utils';\n\nfunction getScanAddressByChainId(chainId: number) {\n    let address = 'etherscan.io';\n\n    switch (chainId) {\n        case 56:\n            address = 'bscscan.com';\n            break;\n        case 137:\n            address = 'polygonscan.com';\n            break;\n    }\n\n    return address;\n}\n\nconst getDepositValidationError = (\n    dai: String,\n    usdc: String,\n    usdt: String,\n    isApproved: Boolean,\n    depositExceedAmount: Boolean\n) => {\n    let error = '';\n\n    if (dai === '' && usdc === '' && usdt === '') {\n        error = 'Please, enter the amount of stablecoins to deposit';\n    } else if (depositExceedAmount) {\n        error = \"You're trying to deposit more than you have\";\n    } else if (!isApproved) {\n        error = 'You have to approve your funds before the deposit';\n    }\n\n    return error;\n};\n\nconst getWithdrawValidationError = (\n    dai: String,\n    usdc: String,\n    usdt: String,\n    fullBalanceLpShare: String,\n    userMaxWithdraw: BigNumber,\n    lpShareToWithdraw: BigNumber\n) => {\n    let error = '';\n    if (dai === '' && usdc === '' && usdt === '') {\n        error = 'Please, enter the amount to withdraw';\n    } else if (userMaxWithdraw.toNumber() < lpShareToWithdraw.toNumber()) {\n        error = \"You're trying to withdraw more than you have\";\n    } else if (fullBalanceLpShare === '0' || lpShareToWithdraw.toNumber() === 0) {\n        error = 'You have zero LP shares';\n    }\n\n    return error;\n};\n\nconst getBscWithdrawValidationError = (\n    isApproved: Boolean,\n    lpShareToWithdraw: BigNumber\n) => {\n    let error = '';\n\n    if (!isApproved) {\n        error = 'Please, approve GZLP before withdraw';\n    }\n\n    if (lpShareToWithdraw.toNumber() === 0) {\n        error = 'You have no funds';\n    }\n\n    return error;\n};\n\nexport const Form = (props: FormProps): JSX.Element => {\n    const { account, chainId } = useWallet();\n\n    const [action, setAction] = useState(\n        props.operationName === 'Deposit' ? 'deposit' : 'withdraw'\n    );\n\n    const daiInputHandler = (newValue: string) => {\n        if (props.onCoinChange) {\n            props.onCoinChange('dai', newValue);\n        }\n    };\n\n    const usdcInputHandler = (newValue: string) => {\n        if (props.onCoinChange) {\n            props.onCoinChange('usdc', newValue);\n        }\n    };\n\n    const usdtInputHandler = (newValue: string) => {\n        if (props.onCoinChange) {\n            props.onCoinChange('usdt', newValue);\n        }\n    };\n\n    const busdInputHandler = (newValue: string) => {\n        if (props.onCoinChange) {\n            props.onCoinChange('busd', newValue);\n        }\n    };\n\n    const [pendingDAI, setPendingDAI] = useState(false);\n    const [pendingUSDC, setPendingUSDC] = useState(false);\n    const [pendingUSDT, setPendingUSDT] = useState(false);\n    const [pendingBUSD, setPendingBUSD] = useState(false);\n    const [pendingGZLP, setPendingGZLP] = useState(false);\n\n    // wrapped in useMemo to prevent lpShareToWithdraw hook deps change on every render\n    const userLpAmount = useBalanceOf();\n    const userBalanceList = useUserBalances();\n    const approveList = useAllowanceStables();\n    const gzlpAllowance = useGzlpAllowance();\n\n    const stableInputsSum =\n        (parseFloat(props.dai) || 0) +\n        (parseFloat(props.usdc) || 0) +\n        (parseFloat(props.usdt) || 0) +\n        (parseFloat(props.busd) || 0);\n    // user allowance\n    const isApprovedTokens = useMemo(() => {\n        return [\n            approveList ? approveList[0].toNumber() > 0 : false,\n            approveList ? approveList[1].toNumber() > 0 : false,\n            approveList ? approveList[2].toNumber() > 0 : false,\n            approveList ? approveList[3].toNumber() > 0 : false,\n        ];\n    }, [approveList]);\n\n    // max for withdraw or deposit\n    const userMaxWithdraw = props.lpPrice.multipliedBy(userLpAmount) || BIG_ZERO;\n\n    const userMaxWithdrawMinusInput =\n        !userMaxWithdraw || userMaxWithdraw.toNumber() <= 0 || !userMaxWithdraw.toNumber()\n            ? BIG_ZERO\n            : new BigNumber(userMaxWithdraw.toNumber() - stableInputsSum);\n\n    // max sums for deposit\n    const userMaxDeposit = [\n        (userBalanceList && userBalanceList[0].toNumber() > 0 && userBalanceList[0]) || BIG_ZERO,\n        (userBalanceList && userBalanceList[1].toNumber() > 0 && userBalanceList[1]) || BIG_ZERO,\n        (userBalanceList && userBalanceList[2].toNumber() > 0 && userBalanceList[2]) || BIG_ZERO,\n        (userBalanceList && userBalanceList[3].toNumber() > 0 && userBalanceList[3]) || BIG_ZERO,\n    ];\n\n    // final array both for deposit and withdraw\n    const max = [\n        action === 'deposit' ? userMaxDeposit[0] : userMaxWithdrawMinusInput,\n        action === 'deposit' ? userMaxDeposit[1] : userMaxWithdrawMinusInput,\n        action === 'deposit' ? userMaxDeposit[2] : userMaxWithdrawMinusInput,\n        action === 'deposit' ? userMaxDeposit[3] : userMaxWithdrawMinusInput,\n    ];\n\n    // approves\n    const { onApprove, onGZLPApprove } = useApprove();\n    const handleApproveDai = useCallback(async () => {\n        try {\n            setPendingDAI(true);\n            const tx = onApprove(daiAddress);\n            if (!tx) {\n                setPendingDAI(false);\n            }\n        } catch (e) {\n            setPendingDAI(false);\n        }\n    }, [onApprove]);\n    const handleApproveUsdc = useCallback(async () => {\n        try {\n            setPendingUSDC(true);\n            const tx = onApprove(usdcAddress);\n            if (!tx) {\n                setPendingUSDC(false);\n            }\n        } catch (e) {\n            setPendingUSDC(false);\n        }\n    }, [onApprove]);\n    const handleApproveUsdt = useCallback(async () => {\n        setPendingUSDT(true);\n\n        try {\n            let address = usdtAddress;\n            if (isBSC(chainId)) {\n                address = bscUsdtAddress;\n            }\n            if (isPLG(chainId)) {\n                address = plgUsdtAddress;\n            }\n\n            const tx = onApprove(address);\n            if (!tx) {\n                setPendingUSDT(false);\n            }\n        } catch (e) {\n            setPendingUSDT(false);\n        }\n\n        setPendingUSDT(false);\n    }, [onApprove, chainId]);\n    const handleApproveGzlp = useCallback(async () => {\n        try {\n            setPendingGZLP(true);\n            const tx = onGZLPApprove();\n            if (!tx) {\n                setPendingGZLP(false);\n            }\n        } catch (e) {\n            setPendingGZLP(false);\n        }\n    }, [onGZLPApprove]);\n\n    const handleApproveBusd = useCallback(async () => {\n        setPendingBUSD(true);\n        log(`handleApproveBusd callback`);\n\n        try {\n            const tx = onApprove(busdAddress);\n            if (!tx) {\n                setPendingBUSD(false);\n            }\n        } catch (e) {\n            setPendingBUSD(false);\n        }\n\n        setPendingBUSD(false);\n    }, [onApprove]);\n\n    const fullBalanceLpShare = useMemo(() => {\n        return getFullDisplayBalance(userLpAmount);\n    }, [userLpAmount]);\n\n    // caclulate lpshare to withdraw\n    const lpShareToWithdraw = useMemo(() => {\n        if (props.operationName !== 'withdraw') {\n            return BIG_ZERO;\n        }\n\n        const sharesAmount = new BigNumber(\n            stableInputsSum / getBalanceNumber(props.lpPrice).toNumber()\n        );\n\n        if (\n            sharesAmount.toNumber() === 0 ||\n            sharesAmount.toNumber() === Infinity ||\n            props.lpPrice.toNumber() === 0\n        ) {\n            return BIG_ZERO;\n        }\n\n        return sharesAmount;\n    }, [stableInputsSum, props.lpPrice, props.operationName]);\n\n    const fullBalancetoWithdraw = useMemo(() => {\n        const balance = getFullDisplayBalance(lpShareToWithdraw, 18);\n        return balance;\n    }, [lpShareToWithdraw, chainId]);\n\n    // deposit and withdraw functions\n    const depositExceedAmount =\n        parseInt(props.dai) > getBalanceNumber(userBalanceList[0]).toNumber() ||\n        parseInt(props.usdc) > getBalanceNumber(userBalanceList[1], 6).toNumber() ||\n        parseInt(props.usdt) > getBalanceNumber(userBalanceList[2], 6).toNumber();\n\n    const [pendingTx, setPendingTx] = useState(false);\n    const [transactionId, setTransactionId] = useState(undefined);\n\n    const { onStake } = useStake(\n        [\n            {\n                name: 'DAI',\n                value: props.dai === '' ? '0' : props.dai,\n            },\n            {\n                name: 'USDC',\n                value: props.usdc === '' ? '0' : props.usdc,\n            },\n            {\n                name: 'USDT',\n                value: props.usdt === '' ? '0' : props.usdt,\n            },\n            {\n                name: 'BUSD',\n                value: props.busd === '' ? '0' : props.busd,\n            },\n        ],\n        props.directOperation\n    );\n\n    const { onUnstake } = useUnstake(\n        userLpAmount,\n        !props.directOperation,\n        props.sharePercent,\n        props.directOperation && props.selectedCoinIndex === -1 ? 0 : props.selectedCoinIndex\n    );\n\n    // TODO: need detect canceled tx's by user\n    const [transactionError, setTransactionError] = useState<TransactionError>();\n    const emptyFunds = isETH(chainId)\n        ? !Number(props.dai) && !Number(props.usdc) && !Number(props.usdt)\n        : !Number(props.usdt) && !Number(props.busd);\n\n    const [isApproved, setIsApproved] = useState(false);\n\n    useEffect(() => {\n        if (chainId === 1) {\n            setIsApproved(\n                approveList &&\n                    ((parseFloat(props.dai) > 0 && isApprovedTokens[0]) ||\n                        props.dai === '0' ||\n                        props.dai === '') &&\n                    ((parseFloat(props.usdc) > 0 && isApprovedTokens[1]) ||\n                        props.usdc === '0' ||\n                        props.usdc === '') &&\n                    ((parseFloat(props.usdt) > 0 && isApprovedTokens[2]) ||\n                        props.usdt === '0' ||\n                        props.usdt === '')\n            );\n        } else if (isBSC(chainId)) {\n            let approveVal = false;\n\n            if (props.operationName === 'withdraw') {\n                approveVal = gzlpAllowance.isGreaterThanOrEqualTo(\n                    new BigNumber(APPROVE_SUM)\n                );\n\n                log(`Withdrawal approve set to ${approveVal}, it's less than ${APPROVE_SUM}`);\n            } else {\n                if (props.busd !== '0') {\n                    approveVal = isApprovedTokens[3];\n                } else {\n                    approveVal = isApprovedTokens[2];\n                }\n            }\n\n            log(\n                `Approved: ${approveVal}, GZLP allowance: ${gzlpAllowance.toNumber()}, USDT: ${parseFloat(\n                    props.usdt\n                )}, BUSD: ${parseFloat(props.busd)}`\n            );\n\n            setIsApproved(approveVal);\n        } else if (isPLG(chainId)) {\n            let approveVal = false;\n\n            if (props.operationName === 'withdraw') {\n                approveVal = gzlpAllowance.isGreaterThanOrEqualTo(\n                    new BigNumber(APPROVE_SUM)\n                );\n\n                log(`Withdrawal approve set to ${approveVal}, it's less than ${APPROVE_SUM}`);\n                setIsApproved(approveVal);\n                return;\n            } \n\n            setIsApproved(\n                approveList &&\n                    ((parseFloat(props.dai) > 0 && isApprovedTokens[0]) ||\n                        props.dai === '0' ||\n                        props.dai === '') &&\n                    ((parseFloat(props.usdc) > 0 && isApprovedTokens[1]) ||\n                        props.usdc === '0' ||\n                        props.usdc === '') &&\n                    ((parseFloat(props.usdt) > 0 && isApprovedTokens[2]) ||\n                        props.usdt === '0' ||\n                        props.usdt === '')\n            );\n        }\n    }, [\n        gzlpAllowance,\n        props.operationName,\n        chainId,\n        approveList,\n        props.usdc,\n        props.dai,\n        props.usdt,\n        props.busd,\n        isApprovedTokens,\n    ]);\n\n    const validationError =\n        action === 'deposit'\n            ? getDepositValidationError(\n                  props.dai,\n                  props.usdc,\n                  props.usdt,\n                  isApproved,\n                  depositExceedAmount\n              )\n            : isETH(chainId) ? getWithdrawValidationError(\n                  props.dai,\n                  props.usdc,\n                  props.usdt,\n                  fullBalanceLpShare,\n                  userMaxWithdraw,\n                  lpShareToWithdraw\n              ) : getBscWithdrawValidationError(isApproved, lpShareToWithdraw);\n\n    const cantDeposit = emptyFunds || !isApproved || pendingTx || depositExceedAmount;\n\n    if (isETH(chainId)) {\n        log(\n            `Approved stables status: DAI: ${isApprovedTokens[0].toString()}, USDT: ${isApprovedTokens[1].toString()}, USDC: ${isApprovedTokens[2].toString()}`\n        );\n    }\n\n    if (isBSC(chainId)) {\n        log(\n            `Approved stables status: USDT: ${isApprovedTokens[1].toString()}, BUSD: ${isApprovedTokens[2].toString()}`\n        );\n    }\n\n    if (isPLG(chainId)) {\n        log(\n            `Approved stables status: DAI: ${isApprovedTokens[0].toString()}, USDT: ${isApprovedTokens[1].toString()}, USDC: ${isApprovedTokens[2].toString()}`\n        );\n    }\n\n    if (props.operationName === 'deposit') {\n        log(\n            `Can deposit: emptyFunds: ${emptyFunds}, isApproved: ${isApproved}, pendingTx: ${pendingTx}, depositExceedAmount: ${depositExceedAmount}`\n        );\n    }\n\n    const canWithdraw = isETH(chainId) ?\n        !validationError :\n        // BSC withdraw only if there is a balance and approove granted\n        userLpAmount.toNumber() > 0 && !validationError;\n\n    if (props.operationName === 'withdraw') {\n        log(`Can withdraw: ${canWithdraw}. Is approved: ${isApproved}`);\n\n        if (validationError) {\n            log(`Can't withdraw due to error: ${validationError}`);\n        }\n    }\n\n    return (\n        <div className={'Form'}>\n            <ToastContainer position={'top-end'} className={'toasts mt-3 me-3'}>\n                {transactionError && (\n                    <Toast onClose={() => setTransactionError(undefined)} delay={5000} autohide>\n                        <Toast.Body>Sorry, we couldn't complete the transaction</Toast.Body>\n                    </Toast>\n                )}\n                {transactionId && (\n                    <Toast onClose={() => setTransactionId(undefined)} delay={15000} autohide>\n                        <Toast.Body>\n                            Success! Check out the{' '}\n                            <a\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                href={`https://${\n                                    getScanAddressByChainId(chainId)\n                                }/tx/${transactionId}`}\n                            >\n                                transaction\n                            </a>\n                        </Toast.Body>\n                    </Toast>\n                )}\n            </ToastContainer>\n            <form\n                id={action}\n                onSubmit={async (e) => {\n                    e.preventDefault();\n\n                    const totalSum =\n                        parseInt(props.dai, 10) +\n                        parseInt(props.usdc, 10) +\n                        parseInt(props.usdt, 10);\n\n                    switch (action) {\n                        case 'withdraw':\n                            setPendingTx(true);\n\n                            try {\n                                const tx = await onUnstake();\n\n                                setTransactionId(tx.transactionHash);\n\n                                // @ts-ignore\n                                if (window.dataLayer) {\n                                    window.dataLayer.push({\n                                        event: 'withdrawal',\n                                        userID: getActiveWalletAddress(),\n                                        type: getActiveWalletName(),\n                                        value: totalSum,\n                                    });\n                                }\n                            } catch (error: any) {\n                                log(`Withdraw error: ${error.message}`);\n                                setTransactionError(error);\n                            }\n\n                            if (props.onWithdraw) {\n                                props.onWithdraw();\n                            }\n\n                            setPendingTx(false);\n                            break;\n                        case 'deposit':\n                            setPendingTx(true);\n\n                            try {\n                                const tx = await onStake();\n                                setTransactionId(tx.transactionHash);\n                                // @ts-ignore\n                                if (window.dataLayer) {\n                                    window.dataLayer.push({\n                                        event: 'deposit',\n                                        userID: getActiveWalletAddress(),\n                                        type: getActiveWalletName(),\n                                        value: totalSum,\n                                    });\n                                }\n                            } catch (error: any) {\n                                log(`Deposit error: ${error.message}`);\n                                setTransactionError(error);\n                            }\n\n                            if (props.onDeposit) {\n                                props.onDeposit();\n                            }\n\n                            setPendingTx(false);\n                            break;\n                    }\n                }}\n            >\n                <ActionSelector\n                    value={action}\n                    onChange={(action: string) => {\n                        setAction(action);\n                    }}\n                />\n                <div className=\"inner\">\n                    {chainId === 1 && (\n                        <Input\n                            action={action}\n                            name=\"DAI\"\n                            value={props.dai}\n                            handler={daiInputHandler}\n                            max={max[0]}\n                            disabled={action === 'withdraw'}\n                            chainId={chainId}\n                        />\n                    )}\n                    {chainId === 1 && (\n                        <Input\n                            action={action}\n                            name=\"USDC\"\n                            value={props.usdc}\n                            handler={usdcInputHandler}\n                            max={max[1]}\n                            disabled={action === 'withdraw'}\n                            chainId={chainId}\n                        />\n                    )}\n                    <Input\n                        action={action}\n                        name=\"USDT\"\n                        value={props.usdt}\n                        handler={usdtInputHandler}\n                        max={max[2]}\n                        disabled={\n                            action === 'withdraw' ||\n                            (chainId === 56 && action === 'deposit' && Number(props.busd) > 0)\n                        }\n                        chainId={chainId}\n                    />\n                    {chainId === 56 && action === 'deposit' && (\n                        <Input\n                            action={action}\n                            name=\"BUSD\"\n                            value={props.busd}\n                            handler={busdInputHandler}\n                            max={max[3]}\n                            chainId={chainId}\n                            disabled={Number(props.usdt) > 0}\n                        />\n                    )}\n                    {action === 'deposit' && (\n                        <div className=\"deposit-action flex-wrap d-flex flex-row flex-wrap buttons align-items-center\">\n                            {account &&\n                                parseFloat(props.dai) > 0 &&\n                                !isApprovedTokens[0] &&\n                                chainId === 1 && (\n                                    <button\n                                        disabled={pendingDAI || depositExceedAmount}\n                                        onClick={handleApproveDai}\n                                        type=\"button\"\n                                        className=\"mb-2\"\n                                    >\n                                        Approve DAI{' '}\n                                    </button>\n                                )}\n                            {account &&\n                                parseFloat(props.usdc) > 0 &&\n                                !isApprovedTokens[1] &&\n                                chainId === 1 && (\n                                    <button\n                                        disabled={pendingUSDC || depositExceedAmount}\n                                        onClick={handleApproveUsdc}\n                                        type=\"button\"\n                                        className=\"mb-2\"\n                                    >\n                                        Approve USDC{' '}\n                                    </button>\n                                )}\n                            {account && parseFloat(props.usdt) > 0 && !isApprovedTokens[2] && (\n                                <button\n                                    disabled={pendingUSDT || depositExceedAmount}\n                                    onClick={handleApproveUsdt}\n                                    type=\"button\"\n                                    className=\"mb-2\"\n                                >\n                                    Approve USDT{' '}\n                                </button>\n                            )}\n                            {account && parseFloat(props.busd) > 0 && !isApprovedTokens[3] && (\n                                <button\n                                    disabled={pendingBUSD || depositExceedAmount}\n                                    onClick={handleApproveBusd}\n                                    type=\"button\"\n                                    className=\"mb-2\"\n                                >\n                                    Approve BUSD{' '}\n                                </button>\n                            )}\n                            {account && (\n                                <div className=\"deposit-button-wrapper flex-wrap\">\n                                    <button type=\"submit\" disabled={cantDeposit}>\n                                        Deposit\n                                    </button>\n                                    {!pendingTx && (\n                                        <DirectAction\n                                            actionName=\"deposit\"\n                                            checked={!props.directOperation}\n                                            disabled={chainId !== 1}\n                                            hint={`${\n                                                chainId === 1\n                                                    ? 'When using optimized deposit funds will be deposited within 24 hours and many times cheaper'\n                                                    : 'When using deposit funds will be deposited within 24 hours, because users’ funds accumulate in one batch and distribute to the ETH network in Zunami App.'\n                                            }`}\n                                            onChange={(state: boolean) => {\n                                                if (props.onOperationModeChange) {\n                                                    props.onOperationModeChange(state);\n                                                }\n                                            }}\n                                        />\n                                    )}\n                                    {pendingTx && <Preloader className=\"ms-2\" />}\n                                    {props.slippage && (\n                                        <div className=\"panel Slippage\">\n                                            <div className=\"panel-body\">\n                                                <span>Slippage: </span>\n                                                <span\n                                                    className={`text-${\n                                                        Number(props.slippage) >= 0.4\n                                                            ? 'danger'\n                                                            : 'success'\n                                                    }`}\n                                                >\n                                                    {props.slippage}%\n                                                </span>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                            {validationError && (\n                                <div className={'mt-2 text-danger error'}>{validationError}</div>\n                            )}\n                        </div>\n                    )}\n\n                    {action === 'withdraw' && (\n                        <div>\n                            {account && (\n                                <div className=\"deposit-button-wrapper flex-wrap\">\n                                    {account &&\n                                        !isApproved &&\n                                        Number(fullBalancetoWithdraw) > 0 &&\n                                        chainId !== 1 && (\n                                            <button\n                                                disabled={pendingGZLP}\n                                                onClick={handleApproveGzlp}\n                                                className=\"me-2\"\n                                            >\n                                                Approve GZLP\n                                            </button>\n                                        )}\n                                    <button\n                                        type=\"submit\"\n                                        className={`${!canWithdraw ? 'disabled' : ''}`}\n                                    >\n                                        Withdraw\n                                    </button>\n                                    {!pendingTx && (\n                                        <DirectAction\n                                            actionName=\"withdraw\"\n                                            disabled={\n                                                props.directOperationDisabled || chainId !== 1\n                                            }\n                                            checked={!props.directOperation}\n                                            hint=\"When using optimized withdrawal funds will be withdrawn within 24 hours and many times cheaper. Optimized withdraw available only in all coins.\"\n                                            onChange={(state: boolean) => {\n                                                if (props.onOperationModeChange) {\n                                                    props.onOperationModeChange(state);\n                                                }\n                                            }}\n                                        />\n                                    )}\n                                    {pendingTx && <Preloader className=\"ms-2\" />}\n                                    {props.slippage && (\n                                        <div className={`panel Slippage network-${chainId}`}>\n                                            <div className=\"panel-body\">\n                                                <span>Slippage: </span>\n                                                <span\n                                                    className={`text-${\n                                                        Number(props.slippage) < -0.4\n                                                            ? 'danger'\n                                                            : 'success'\n                                                    }`}\n                                                >\n                                                    {props.slippage}%\n                                                </span>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        </div>\n                    )}\n                    {\n                        validationError && props.operationName === 'withdraw' && (\n                            <div className={'mt-2 text-danger error withdraw-error'}>{validationError}</div>\n                        )\n                    }\n                </div>\n            </form>\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}