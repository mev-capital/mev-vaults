{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport { useEffect, useState } from 'react';\nimport { BIG_ZERO } from '../utils/formatbalance';\nimport { useWallet } from 'use-wallet';\nimport useSushi from './useSushi';\nimport { getMasterChefContract } from '../sushi/utils';\nimport Web3 from 'web3';\nimport ethAbi from '../actions/abi/Zunami.json';\nimport { log } from '../utils/logger';\n\nconst useLpPrice = () => {\n  _s();\n\n  const {\n    chainId,\n    account\n  } = useWallet();\n  const sushi = useSushi();\n  const masterChefContract = getMasterChefContract(sushi, chainId);\n  const [price, setPrice] = useState(new BigNumber(BIG_ZERO));\n  useEffect(() => {\n    if (!account || !chainId || !masterChefContract || !sushi) {\n      return;\n    }\n\n    const getLpPrice = async () => {\n      const ethProvider = new Web3.providers.HttpProvider('https://eth-mainnet.alchemyapi.io/v2/Yh5zNTgJkqrOIqLtfkZBGIPecNPDQ1ON', {\n        autoGasMultiplier: 1.5,\n        defaultAccount: account,\n        defaultConfirmations: 1,\n        defaultGas: '6000000',\n        defaultGasPrice: '1000000000000',\n        ethereumNodeTimeout: 10000,\n        testing: false\n      });\n      const web3 = new Web3(ethProvider);\n      const contract = new web3.eth.Contract(ethAbi);\n      contract.options.from = account;\n      contract.options.address = '0x2ffCC661011beC72e1A9524E12060983E74D14ce';\n      const value = await contract.methods.lpPrice().call();\n      log(`lpPrice execution (${chainId}). Result: ${value}`);\n\n      if (value) {\n        setPrice(new BigNumber(value).dividedBy(new BigNumber(10).pow(18)));\n      }\n    };\n\n    getLpPrice();\n    let refreshInterval = setInterval(getLpPrice, 5000);\n    return () => clearInterval(refreshInterval);\n  }, [account, chainId, masterChefContract, sushi]);\n  return price;\n};\n\n_s(useLpPrice, \"KAqUyfGudyyC7rI6/O9MDnkyjKo=\", false, function () {\n  return [useWallet, useSushi];\n});\n\nexport default useLpPrice;","map":{"version":3,"names":["BigNumber","useEffect","useState","BIG_ZERO","useWallet","useSushi","getMasterChefContract","Web3","ethAbi","log","useLpPrice","chainId","account","sushi","masterChefContract","price","setPrice","getLpPrice","ethProvider","providers","HttpProvider","autoGasMultiplier","defaultAccount","defaultConfirmations","defaultGas","defaultGasPrice","ethereumNodeTimeout","testing","web3","contract","eth","Contract","options","from","address","value","methods","lpPrice","call","dividedBy","pow","refreshInterval","setInterval","clearInterval"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/hooks/useLpPrice.ts"],"sourcesContent":["import BigNumber from 'bignumber.js';\nimport { useEffect, useState } from 'react';\nimport { BIG_ZERO } from '../utils/formatbalance';\nimport { useWallet } from 'use-wallet';\nimport useSushi from './useSushi';\nimport { getMasterChefContract } from '../sushi/utils';\nimport Web3 from 'web3';\nimport ethAbi from '../actions/abi/Zunami.json';\nimport { log } from '../utils/logger';\n\nconst useLpPrice = () => {\n    const { chainId, account } = useWallet();\n    const sushi = useSushi();\n    const masterChefContract = getMasterChefContract(sushi, chainId);\n\n    const [price, setPrice] = useState(new BigNumber(BIG_ZERO));\n\n    useEffect(() => {\n        if (!account || !chainId || !masterChefContract || !sushi) {\n            return;\n        }\n\n        const getLpPrice = async () => {\n            const ethProvider = new Web3.providers.HttpProvider(\n                'https://eth-mainnet.alchemyapi.io/v2/Yh5zNTgJkqrOIqLtfkZBGIPecNPDQ1ON',\n                {\n                    autoGasMultiplier: 1.5,\n                    defaultAccount: account,\n                    defaultConfirmations: 1,\n                    defaultGas: '6000000',\n                    defaultGasPrice: '1000000000000',\n                    ethereumNodeTimeout: 10000,\n                    testing: false,\n                }\n            );\n\n            const web3 = new Web3(ethProvider);\n            const contract = new web3.eth.Contract(ethAbi);\n            contract.options.from = account;\n            contract.options.address = '0x2ffCC661011beC72e1A9524E12060983E74D14ce';\n\n            const value = await contract.methods.lpPrice().call();\n            log(`lpPrice execution (${chainId}). Result: ${value}`);\n\n            if (value) {\n                setPrice(new BigNumber(value).dividedBy(new BigNumber(10).pow(18)));\n            }\n        };\n\n        getLpPrice();\n\n        let refreshInterval = setInterval(getLpPrice, 5000);\n        return () => clearInterval(refreshInterval);\n    }, [account, chainId, masterChefContract, sushi]);\n\n    return price;\n};\n\nexport default useLpPrice;\n"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAuBR,SAAS,EAAtC;EACA,MAAMS,KAAK,GAAGR,QAAQ,EAAtB;EACA,MAAMS,kBAAkB,GAAGR,qBAAqB,CAACO,KAAD,EAAQF,OAAR,CAAhD;EAEA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAIF,SAAJ,CAAcG,QAAd,CAAD,CAAlC;EAEAF,SAAS,CAAC,MAAM;IACZ,IAAI,CAACW,OAAD,IAAY,CAACD,OAAb,IAAwB,CAACG,kBAAzB,IAA+C,CAACD,KAApD,EAA2D;MACvD;IACH;;IAED,MAAMI,UAAU,GAAG,YAAY;MAC3B,MAAMC,WAAW,GAAG,IAAIX,IAAI,CAACY,SAAL,CAAeC,YAAnB,CAChB,uEADgB,EAEhB;QACIC,iBAAiB,EAAE,GADvB;QAEIC,cAAc,EAAEV,OAFpB;QAGIW,oBAAoB,EAAE,CAH1B;QAIIC,UAAU,EAAE,SAJhB;QAKIC,eAAe,EAAE,eALrB;QAMIC,mBAAmB,EAAE,KANzB;QAOIC,OAAO,EAAE;MAPb,CAFgB,CAApB;MAaA,MAAMC,IAAI,GAAG,IAAIrB,IAAJ,CAASW,WAAT,CAAb;MACA,MAAMW,QAAQ,GAAG,IAAID,IAAI,CAACE,GAAL,CAASC,QAAb,CAAsBvB,MAAtB,CAAjB;MACAqB,QAAQ,CAACG,OAAT,CAAiBC,IAAjB,GAAwBrB,OAAxB;MACAiB,QAAQ,CAACG,OAAT,CAAiBE,OAAjB,GAA2B,4CAA3B;MAEA,MAAMC,KAAK,GAAG,MAAMN,QAAQ,CAACO,OAAT,CAAiBC,OAAjB,GAA2BC,IAA3B,EAApB;MACA7B,GAAG,CAAE,sBAAqBE,OAAQ,cAAawB,KAAM,EAAlD,CAAH;;MAEA,IAAIA,KAAJ,EAAW;QACPnB,QAAQ,CAAC,IAAIhB,SAAJ,CAAcmC,KAAd,EAAqBI,SAArB,CAA+B,IAAIvC,SAAJ,CAAc,EAAd,EAAkBwC,GAAlB,CAAsB,EAAtB,CAA/B,CAAD,CAAR;MACH;IACJ,CAzBD;;IA2BAvB,UAAU;IAEV,IAAIwB,eAAe,GAAGC,WAAW,CAACzB,UAAD,EAAa,IAAb,CAAjC;IACA,OAAO,MAAM0B,aAAa,CAACF,eAAD,CAA1B;EACH,CApCQ,EAoCN,CAAC7B,OAAD,EAAUD,OAAV,EAAmBG,kBAAnB,EAAuCD,KAAvC,CApCM,CAAT;EAsCA,OAAOE,KAAP;AACH,CA9CD;;GAAML,U;UAC2BN,S,EACfC,Q;;;AA8ClB,eAAeK,UAAf"},"metadata":{},"sourceType":"module"}