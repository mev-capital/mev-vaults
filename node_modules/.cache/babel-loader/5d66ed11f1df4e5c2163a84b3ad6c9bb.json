{"ast":null,"code":"var _jsxFileName = \"/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/components/ApyChart/ApyChart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport './ApyChart.scss';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nChartJS.defaults.font.size = 10;\n\nfunction onRangeChange(e, handler) {\n  const range = e.target.dataset.range;\n\n  if (handler) {\n    handler(range);\n  }\n}\n\nfunction renderRanges(items, currentState, onChangeHandler) {\n  return items.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: currentState === item.value ? 'active' : '',\n    \"data-range\": item.value,\n    onClick: e => {\n      onRangeChange(e, onChangeHandler);\n    },\n    children: item.title\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this));\n}\n\nconst ranges = [{\n  value: 'week',\n  title: '1 week'\n}, {\n  value: 'month',\n  title: '1 month'\n}, {\n  value: 'all',\n  title: 'All time'\n}];\nlet paddings = {\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\n\nif (document.body.clientWidth > 1024) {\n  paddings.top = 20;\n  paddings.bottom = 20;\n}\n\nconst chartOptions = {\n  responsive: true,\n  layout: {\n    padding: paddings\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        label: function (context) {\n          return `APY: ${context.dataset.data[context.dataIndex].toFixed(2)}%` || '';\n        }\n      }\n    },\n    legend: {\n      display: false,\n      labels: {\n        font: {\n          size: 10\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      grid: {\n        display: false\n      }\n    },\n    y: {\n      grid: {\n        display: false\n      },\n      min: 0,\n      ticks: {\n        //@ts-ignore\n        callback: function (val) {\n          return `${val}%`;\n        },\n        stepSize: 3\n      }\n    }\n  }\n};\nexport const ApyChart = props => {\n  _s();\n\n  const [currentRange, setCurrentRange] = useState('week');\n  const chartRef = useRef(null);\n  const data = {\n    labels: props.data.map(item => {\n      return format(item.timestamp * 1000, 'dd MMM');\n    }),\n    datasets: [{\n      label: 'APY',\n      data: props.data.map(item => item.apy),\n      borderColor: '#FA5B06'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'ApyChart',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ApyChart__Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ApyChart__Title\",\n        children: \"Historical Realised APY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ApyChart__Selector\",\n        children: renderRanges(ranges, currentRange, e => {\n          setCurrentRange(e);\n\n          if (props.onRangeChange) {\n            props.onRangeChange(e);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      ref: chartRef,\n      className: \"ApyChart__Chart\",\n      options: chartOptions,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ApyChart, \"k/Gv2fxXTRWtwm27WDBO0RW9tqg=\");\n\n_c = ApyChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApyChart\");","map":{"version":3,"names":["useRef","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","format","register","defaults","font","size","onRangeChange","e","handler","range","target","dataset","renderRanges","items","currentState","onChangeHandler","map","item","index","value","title","ranges","paddings","left","right","top","bottom","document","body","clientWidth","chartOptions","responsive","layout","padding","plugins","tooltip","callbacks","label","context","data","dataIndex","toFixed","legend","display","labels","scales","x","grid","y","min","ticks","callback","val","stepSize","ApyChart","props","currentRange","setCurrentRange","chartRef","timestamp","datasets","apy","borderColor"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/components/ApyChart/ApyChart.tsx"],"sourcesContent":["import { useRef, useState } from 'react';\nimport './ApyChart.scss';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { format } from 'date-fns';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nChartJS.defaults.font.size = 10;\n\ninterface ChartProps {\n    data: Array<any>;\n    onRangeChange?: Function;\n}\n\ninterface RangeItem {\n    value: String;\n    title: String;\n}\n\nfunction onRangeChange(e: any, handler: Function | undefined) {\n    const range = e.target.dataset.range;\n\n    if (handler) {\n        handler(range);\n    }\n}\n\nfunction renderRanges(\n    items: Array<RangeItem>,\n    currentState: string,\n    onChangeHandler: Function | undefined\n) {\n    return items.map((item: RangeItem, index: number) => (\n        <span\n            key={index}\n            className={currentState === item.value ? 'active' : ''}\n            data-range={item.value}\n            onClick={(e) => {\n                onRangeChange(e, onChangeHandler);\n            }}\n        >\n            {item.title}\n        </span>\n    ));\n}\n\nconst ranges = [\n    { value: 'week', title: '1 week' },\n    { value: 'month', title: '1 month' },\n    { value: 'all', title: 'All time' },\n];\n\nlet paddings = {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n};\n\nif (document.body.clientWidth > 1024) {\n    paddings.top = 20;\n    paddings.bottom = 20;\n}\n\nconst chartOptions = {\n    responsive: true,\n    layout: {\n        padding: paddings,\n    },\n    plugins: {\n        tooltip: {\n            callbacks: {\n                label: function (context: any) {\n                    return `APY: ${context.dataset.data[context.dataIndex].toFixed(2)}%` || '';\n                },\n            },\n        },\n        legend: {\n            display: false,\n            labels: {\n                font: {\n                    size: 10,\n                },\n            },\n        },\n    },\n    scales: {\n        x: {\n            grid: {\n                display: false,\n            },\n        },\n        y: {\n            grid: {\n                display: false,\n            },\n            min: 0,\n            ticks: {\n                //@ts-ignore\n                callback: function (val) {\n                    return `${val}%`;\n                },\n                stepSize: 3,\n            },\n        },\n    },\n};\n\nexport const ApyChart = (props: ChartProps): JSX.Element => {\n    const [currentRange, setCurrentRange] = useState('week');\n    const chartRef = useRef(null);\n\n    const data = {\n        labels: props.data.map((item) => {\n            return format(item.timestamp * 1000, 'dd MMM');\n        }),\n        datasets: [\n            {\n                label: 'APY',\n                data: props.data.map((item) => item.apy),\n                borderColor: '#FA5B06',\n            },\n        ],\n    };\n\n    return (\n        <div className={'ApyChart'}>\n            <div className=\"ApyChart__Header\">\n                <div className=\"ApyChart__Title\">Historical Realised APY</div>\n                <div className=\"ApyChart__Selector\">\n                    {renderRanges(ranges, currentRange, (e: string) => {\n                        setCurrentRange(e);\n\n                        if (props.onRangeChange) {\n                            props.onRangeChange(e);\n                        }\n                    })}\n                </div>\n            </div>\n            <Line ref={chartRef} className=\"ApyChart__Chart\" options={chartOptions} data={data} />\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}