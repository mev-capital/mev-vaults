{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { useWallet } from 'use-wallet';\nimport useSushi from './useSushi';\nimport { getMasterChefContract, unstake } from '../sushi/utils';\nimport { log } from '../utils/logger';\n\nconst useUnstake = (balance, optimized, sharePercent, coinIndex) => {\n  _s();\n\n  var _ethereum$walletMeta;\n\n  const {\n    account,\n    chainId,\n    ethereum\n  } = useWallet();\n  const sushi = useSushi();\n  const isZerionWallet = (ethereum === null || ethereum === void 0 ? void 0 : (_ethereum$walletMeta = ethereum.walletMeta) === null || _ethereum$walletMeta === void 0 ? void 0 : _ethereum$walletMeta.name) === 'Zerion';\n  const handleUnstake = useCallback(async () => {\n    if (!account) {\n      return;\n    }\n\n    let zunamiContract = getMasterChefContract(sushi, chainId);\n    const balanceToWithdraw = balance.multipliedBy(sharePercent / 100).toFixed(0).toString();\n    log(`Raw balance: ${balance.toString()}, percent (${sharePercent}) - ${balanceToWithdraw.toString()}`);\n\n    if (optimized) {\n      return await unstake(zunamiContract, account, balanceToWithdraw, 0, 0, 0, true, coinIndex, chainId, isZerionWallet);\n    } else {\n      return await unstake(zunamiContract, account, balanceToWithdraw, 0, 0, 0, false, coinIndex, chainId, isZerionWallet);\n    }\n  }, [account, sushi, optimized, sharePercent, coinIndex, balance, chainId, isZerionWallet]);\n  return {\n    onUnstake: handleUnstake\n  };\n};\n\n_s(useUnstake, \"DOnL62kzChhMnEus7rXKOCyld0A=\", false, function () {\n  return [useWallet, useSushi];\n});\n\nexport default useUnstake;","map":{"version":3,"names":["useCallback","useWallet","useSushi","getMasterChefContract","unstake","log","useUnstake","balance","optimized","sharePercent","coinIndex","account","chainId","ethereum","sushi","isZerionWallet","walletMeta","name","handleUnstake","zunamiContract","balanceToWithdraw","multipliedBy","toFixed","toString","onUnstake"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/hooks/useUnstake.ts"],"sourcesContent":["import { useCallback } from 'react';\nimport { useWallet } from 'use-wallet';\nimport useSushi from './useSushi';\nimport { getMasterChefContract, unstake } from '../sushi/utils';\nimport BigNumber from 'bignumber.js';\nimport { log } from '../utils/logger';\n\nconst useUnstake = (\n    balance: BigNumber,\n    optimized: boolean,\n    sharePercent: number,\n    coinIndex: number\n) => {\n    const { account, chainId, ethereum } = useWallet();\n    const sushi = useSushi();\n    const isZerionWallet = ethereum?.walletMeta?.name === 'Zerion';\n\n    const handleUnstake = useCallback(async () => {\n        if (!account) {\n            return;\n        }\n\n        let zunamiContract = getMasterChefContract(sushi, chainId);\n\n        const balanceToWithdraw = balance\n            .multipliedBy(sharePercent / 100)\n            .toFixed(0)\n            .toString();\n\n        log(\n            `Raw balance: ${balance.toString()}, percent (${sharePercent}) - ${balanceToWithdraw.toString()}`\n        );\n\n        if (optimized) {\n            return await unstake(\n                zunamiContract,\n                account,\n                balanceToWithdraw,\n                0,\n                0,\n                0,\n                true,\n                coinIndex,\n                chainId,\n                isZerionWallet\n            );\n        } else {\n            return await unstake(\n                zunamiContract,\n                account,\n                balanceToWithdraw,\n                0,\n                0,\n                0,\n                false,\n                coinIndex,\n                chainId,\n                isZerionWallet\n            );\n        }\n    }, [\n        account,\n        sushi,\n        optimized,\n        sharePercent,\n        coinIndex,\n        balance,\n        chainId,\n        isZerionWallet,\n    ]);\n\n    return { onUnstake: handleUnstake };\n};\n\nexport default useUnstake;\n"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,qBAAT,EAAgCC,OAAhC,QAA+C,gBAA/C;AAEA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,UAAU,GAAG,CACfC,OADe,EAEfC,SAFe,EAGfC,YAHe,EAIfC,SAJe,KAKd;EAAA;;EAAA;;EACD,MAAM;IAAEC,OAAF;IAAWC,OAAX;IAAoBC;EAApB,IAAiCZ,SAAS,EAAhD;EACA,MAAMa,KAAK,GAAGZ,QAAQ,EAAtB;EACA,MAAMa,cAAc,GAAG,CAAAF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,oCAAAA,QAAQ,CAAEG,UAAV,8EAAsBC,IAAtB,MAA+B,QAAtD;EAEA,MAAMC,aAAa,GAAGlB,WAAW,CAAC,YAAY;IAC1C,IAAI,CAACW,OAAL,EAAc;MACV;IACH;;IAED,IAAIQ,cAAc,GAAGhB,qBAAqB,CAACW,KAAD,EAAQF,OAAR,CAA1C;IAEA,MAAMQ,iBAAiB,GAAGb,OAAO,CAC5Bc,YADqB,CACRZ,YAAY,GAAG,GADP,EAErBa,OAFqB,CAEb,CAFa,EAGrBC,QAHqB,EAA1B;IAKAlB,GAAG,CACE,gBAAeE,OAAO,CAACgB,QAAR,EAAmB,cAAad,YAAa,OAAMW,iBAAiB,CAACG,QAAlB,EAA6B,EADjG,CAAH;;IAIA,IAAIf,SAAJ,EAAe;MACX,OAAO,MAAMJ,OAAO,CAChBe,cADgB,EAEhBR,OAFgB,EAGhBS,iBAHgB,EAIhB,CAJgB,EAKhB,CALgB,EAMhB,CANgB,EAOhB,IAPgB,EAQhBV,SARgB,EAShBE,OATgB,EAUhBG,cAVgB,CAApB;IAYH,CAbD,MAaO;MACH,OAAO,MAAMX,OAAO,CAChBe,cADgB,EAEhBR,OAFgB,EAGhBS,iBAHgB,EAIhB,CAJgB,EAKhB,CALgB,EAMhB,CANgB,EAOhB,KAPgB,EAQhBV,SARgB,EAShBE,OATgB,EAUhBG,cAVgB,CAApB;IAYH;EACJ,CA3CgC,EA2C9B,CACCJ,OADD,EAECG,KAFD,EAGCN,SAHD,EAICC,YAJD,EAKCC,SALD,EAMCH,OAND,EAOCK,OAPD,EAQCG,cARD,CA3C8B,CAAjC;EAsDA,OAAO;IAAES,SAAS,EAAEN;EAAb,CAAP;AACH,CAjED;;GAAMZ,U;UAMqCL,S,EACzBC,Q;;;AA4DlB,eAAeI,UAAf"},"metadata":{},"sourceType":"module"}