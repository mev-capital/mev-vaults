{"ast":null,"code":"const ADD_TRANSACTION = 'ADD_TRANSACTION';\nconst RECEIVE_TX_RECEIPT = 'RECEIVE_TX_RECEIPT';\nconst SET_TRANSACTIONS = 'SET_TRANSACTIONS';\nexport const addTransaction = transaction => ({\n  type: ADD_TRANSACTION,\n  transaction\n});\nexport const receiveTxReceipt = (txHash, receipt) => ({\n  type: RECEIVE_TX_RECEIPT,\n  txHash,\n  receipt\n});\nexport const setTransactions = transactions => ({\n  type: SET_TRANSACTIONS,\n  transactions\n});\nexport const initialState = {\n  initialized: false,\n  transactions: {}\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_TRANSACTION:\n      return { ...state,\n        transactions: { ...state.transactions,\n          [action.transaction.hash]: action.transaction\n        }\n      };\n\n    case RECEIVE_TX_RECEIPT:\n      return { ...state,\n        transactions: { ...state.transactions,\n          [action.txHash]: { ...state.transactions[action.txHash],\n            receipt: action.receipt\n          }\n        }\n      };\n\n    case SET_TRANSACTIONS:\n      return { ...state,\n        transactions: action.transactions,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["ADD_TRANSACTION","RECEIVE_TX_RECEIPT","SET_TRANSACTIONS","addTransaction","transaction","type","receiveTxReceipt","txHash","receipt","setTransactions","transactions","initialState","initialized","reducer","state","action","hash"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/contexts/Transactions/reducer.ts"],"sourcesContent":["import { TransactionReceipt } from 'web3-core';\nimport { Transaction, TransactionsMap } from './types';\n\nconst ADD_TRANSACTION = 'ADD_TRANSACTION';\nconst RECEIVE_TX_RECEIPT = 'RECEIVE_TX_RECEIPT';\nconst SET_TRANSACTIONS = 'SET_TRANSACTIONS';\n\ninterface AddTransactionAction {\n    type: typeof ADD_TRANSACTION;\n    transaction: Transaction;\n}\n\ninterface ReceiveTxReceiptAction {\n    type: typeof RECEIVE_TX_RECEIPT;\n    txHash: string;\n    receipt: TransactionReceipt;\n}\n\ninterface SetTransactionsAction {\n    type: typeof SET_TRANSACTIONS;\n    transactions: TransactionsMap;\n}\n\ntype TransactionsActions = AddTransactionAction | ReceiveTxReceiptAction | SetTransactionsAction;\n\nexport interface TransactionsState {\n    initialized: boolean;\n    transactions: TransactionsMap;\n}\n\nexport const addTransaction = (transaction: Transaction): AddTransactionAction => ({\n    type: ADD_TRANSACTION,\n    transaction,\n});\n\nexport const receiveTxReceipt = (\n    txHash: string,\n    receipt: TransactionReceipt\n): ReceiveTxReceiptAction => ({\n    type: RECEIVE_TX_RECEIPT,\n    txHash,\n    receipt,\n});\n\nexport const setTransactions = (transactions: TransactionsMap): SetTransactionsAction => ({\n    type: SET_TRANSACTIONS,\n    transactions,\n});\n\nexport const initialState: TransactionsState = {\n    initialized: false,\n    transactions: {},\n};\n\nconst reducer = (state: TransactionsState, action: TransactionsActions): TransactionsState => {\n    switch (action.type) {\n        case ADD_TRANSACTION:\n            return {\n                ...state,\n                transactions: {\n                    ...state.transactions,\n                    [action.transaction.hash]: action.transaction,\n                },\n            };\n        case RECEIVE_TX_RECEIPT:\n            return {\n                ...state,\n                transactions: {\n                    ...state.transactions,\n                    [action.txHash]: {\n                        ...state.transactions[action.txHash],\n                        receipt: action.receipt,\n                    },\n                },\n            };\n        case SET_TRANSACTIONS:\n            return {\n                ...state,\n                transactions: action.transactions,\n                initialized: true,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"],"mappings":"AAGA,MAAMA,eAAe,GAAG,iBAAxB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAyBA,OAAO,MAAMC,cAAc,GAAIC,WAAD,KAAqD;EAC/EC,IAAI,EAAEL,eADyE;EAE/EI;AAF+E,CAArD,CAAvB;AAKP,OAAO,MAAME,gBAAgB,GAAG,CAC5BC,MAD4B,EAE5BC,OAF4B,MAGF;EAC1BH,IAAI,EAAEJ,kBADoB;EAE1BM,MAF0B;EAG1BC;AAH0B,CAHE,CAAzB;AASP,OAAO,MAAMC,eAAe,GAAIC,YAAD,KAA2D;EACtFL,IAAI,EAAEH,gBADgF;EAEtFQ;AAFsF,CAA3D,CAAxB;AAKP,OAAO,MAAMC,YAA+B,GAAG;EAC3CC,WAAW,EAAE,KAD8B;EAE3CF,YAAY,EAAE;AAF6B,CAAxC;;AAKP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAA2BC,MAA3B,KAA8E;EAC1F,QAAQA,MAAM,CAACV,IAAf;IACI,KAAKL,eAAL;MACI,OAAO,EACH,GAAGc,KADA;QAEHJ,YAAY,EAAE,EACV,GAAGI,KAAK,CAACJ,YADC;UAEV,CAACK,MAAM,CAACX,WAAP,CAAmBY,IAApB,GAA2BD,MAAM,CAACX;QAFxB;MAFX,CAAP;;IAOJ,KAAKH,kBAAL;MACI,OAAO,EACH,GAAGa,KADA;QAEHJ,YAAY,EAAE,EACV,GAAGI,KAAK,CAACJ,YADC;UAEV,CAACK,MAAM,CAACR,MAAR,GAAiB,EACb,GAAGO,KAAK,CAACJ,YAAN,CAAmBK,MAAM,CAACR,MAA1B,CADU;YAEbC,OAAO,EAAEO,MAAM,CAACP;UAFH;QAFP;MAFX,CAAP;;IAUJ,KAAKN,gBAAL;MACI,OAAO,EACH,GAAGY,KADA;QAEHJ,YAAY,EAAEK,MAAM,CAACL,YAFlB;QAGHE,WAAW,EAAE;MAHV,CAAP;;IAKJ;MACI,OAAOE,KAAP;EA3BR;AA6BH,CA9BD;;AAgCA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}