{"ast":null,"code":"const logs = [];\nconst STORAGE_KEY = 'ZUNAMI_LOGS';\n/**\n * Logs message to the console or any other destination\n * @param message\n */\n\nexport function log(message) {\n  if (logs.indexOf(message) === -1) {\n    logs.push(message);\n    appendLogs(message);\n\n    if (process.env.NODE_ENV === 'development' || window.location.hostname === 'test.zunami.io') {\n      console.log(message);\n    }\n  }\n}\n/**\n * Append logs to permanent storage\n * @param message \n */\n\nfunction appendLogs(message) {\n  const data = JSON.parse(window.localStorage.getItem(STORAGE_KEY) || '[]');\n  data.push(message);\n  window.localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n}\n\nexport function copyLogs() {\n  const data = JSON.parse(window.localStorage.getItem(STORAGE_KEY) || '[]');\n  navigator.clipboard.writeText(data.join(`\\n`)).then(() => {\n    alert('Logs copied to clipboard');\n  });\n}","map":{"version":3,"names":["logs","STORAGE_KEY","log","message","indexOf","push","appendLogs","process","env","NODE_ENV","window","location","hostname","console","data","JSON","parse","localStorage","getItem","setItem","stringify","copyLogs","navigator","clipboard","writeText","join","then","alert"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/utils/logger.ts"],"sourcesContent":["const logs: Array<string> = [];\nconst STORAGE_KEY = 'ZUNAMI_LOGS';\n\n/**\n * Logs message to the console or any other destination\n * @param message\n */\nexport function log(message: string): void {\n    if (logs.indexOf(message) === -1) {\n        logs.push(message);\n        appendLogs(message);\n\n        if (process.env.NODE_ENV === 'development' || window.location.hostname === 'test.zunami.io') {\n            console.log(message);\n        }\n    }\n}\n\n/**\n * Append logs to permanent storage\n * @param message \n */\nfunction appendLogs(message: string) {\n    const data = JSON.parse(window.localStorage.getItem(STORAGE_KEY) || '[]');\n    data.push(message);\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n}\n\nexport function copyLogs() {\n    const data = JSON.parse(window.localStorage.getItem(STORAGE_KEY) || '[]');\n\n    navigator.clipboard.writeText(data.join(`\\n`)).then(() => {\n        alert('Logs copied to clipboard');\n    });\n}\n"],"mappings":"AAAA,MAAMA,IAAmB,GAAG,EAA5B;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,GAAT,CAAaC,OAAb,EAAoC;EACvC,IAAIH,IAAI,CAACI,OAAL,CAAaD,OAAb,MAA0B,CAAC,CAA/B,EAAkC;IAC9BH,IAAI,CAACK,IAAL,CAAUF,OAAV;IACAG,UAAU,CAACH,OAAD,CAAV;;IAEA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,gBAA3E,EAA6F;MACzFC,OAAO,CAACX,GAAR,CAAYC,OAAZ;IACH;EACJ;AACJ;AAED;AACA;AACA;AACA;;AACA,SAASG,UAAT,CAAoBH,OAApB,EAAqC;EACjC,MAAMW,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACO,YAAP,CAAoBC,OAApB,CAA4BjB,WAA5B,KAA4C,IAAvD,CAAb;EACAa,IAAI,CAACT,IAAL,CAAUF,OAAV;EACAO,MAAM,CAACO,YAAP,CAAoBE,OAApB,CAA4BlB,WAA5B,EAAyCc,IAAI,CAACK,SAAL,CAAeN,IAAf,CAAzC;AACH;;AAED,OAAO,SAASO,QAAT,GAAoB;EACvB,MAAMP,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACO,YAAP,CAAoBC,OAApB,CAA4BjB,WAA5B,KAA4C,IAAvD,CAAb;EAEAqB,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BV,IAAI,CAACW,IAAL,CAAW,IAAX,CAA9B,EAA+CC,IAA/C,CAAoD,MAAM;IACtDC,KAAK,CAAC,0BAAD,CAAL;EACH,CAFD;AAGH"},"metadata":{},"sourceType":"module"}