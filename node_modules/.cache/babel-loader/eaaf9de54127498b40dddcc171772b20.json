{"ast":null,"code":"var _jsxFileName = \"/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/containers/FinanceOperations.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Header } from '../components/Header/Header';\nimport { Form } from '../components/Form/Form';\nimport './FinanceOperations.scss';\nimport { Container, Row, Col, ToastContainer, Toast } from 'react-bootstrap';\nimport { WelcomeCarousel } from '../components/WelcomeCarousel/WelcomeCarousel';\nimport { WithdrawOptions } from '../components/Form/WithdrawOptions/WithdrawOptions';\nimport { MobileSidebar } from '../components/SideBar/MobileSidebar/MobileSidebar';\nimport { BigNumber } from 'bignumber.js';\nimport { BIG_ZERO, getBalanceNumber, getFullDisplayBalance } from '../utils/formatbalance';\nimport { ReactComponent as FinIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../components/Form/deposit-withdraw.svg\";\nimport useLpPrice from '../hooks/useLpPrice';\nimport { useUserBalances } from '../hooks/useUserBalances';\nimport { TransactionHistory } from '../components/TransactionHistory/TransactionHistory';\nimport { getTransHistoryUrl, getBackendSlippage } from '../api/api';\nimport useBalanceOf from '../hooks/useBalanceOf';\nimport { useWallet } from 'use-wallet';\nimport useEagerConnect from '../hooks/useEagerConnect';\nimport { calcWithdrawOneCoin } from '../utils/erc20';\nimport useSushi from '../hooks/useSushi';\nimport { getMasterChefContract } from '../sushi/utils';\nimport { isBSC, isETH, isPLG } from '../utils/zunami';\nimport { log } from '../utils/logger';\nimport { useSlippage } from '../hooks/useSlippage';\nimport { UnsupportedChain } from '../components/UnsupportedChain/UnsupportedChain';\nimport useSupportedChain from '../hooks/useSupportedChain';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst calculateStables = async (coinIndex, balance, lpPrice, sharePercent, zunamiContract, setError, account) => {\n  if (!zunamiContract || coinIndex === -1 || balance.toNumber() === 0) {\n    return '0';\n  }\n\n  let result = '';\n  const balanceToWithdraw = balance.dividedBy(lpPrice).multipliedBy(sharePercent / 100).toFixed(0).toString();\n\n  if (balanceToWithdraw === '0') {\n    return '0';\n  }\n\n  setError('');\n\n  try {\n    result = await calcWithdrawOneCoin(balanceToWithdraw, coinIndex, account);\n  } catch (error) {\n    setError(`Error: ${error.message}. Params - coinIndex: ${coinIndex}, lpShares: ${balanceToWithdraw}`);\n    return error;\n  }\n\n  return result;\n};\n\nexport const FinanceOperations = props => {\n  _s();\n\n  const {\n    account,\n    connect,\n    ethereum,\n    chainId\n  } = useWallet();\n  const {\n    getSlippage\n  } = useSlippage();\n  useEagerConnect(account ? account : '', connect, ethereum);\n  const lpPrice = useLpPrice();\n  const balance = useBalanceOf().multipliedBy(lpPrice);\n  const sushi = useSushi();\n  const zunamiContract = getMasterChefContract(sushi);\n  const [directOperation, setDirectOperation] = useState(false);\n  const [daiChecked, setDaiChecked] = useState(false);\n  const [usdcChecked, setUsdcChecked] = useState(false);\n  const [usdtChecked, setUsdtChecked] = useState(false);\n  const [sharePercent, setSharePercent] = useState(100);\n  const [selectedCoin, setSelectedCoin] = useState('all');\n  const userBalanceList = useUserBalances();\n  const [selectedCoinIndex, setSelectedCoinIndex] = useState(isBSC(chainId) && props.operationName === 'withdraw' ? 2 : -1);\n  const [dai, setDai] = useState('0');\n  const [usdc, setUsdc] = useState('0');\n  const [usdt, setUsdt] = useState('0');\n  const [busd, setBusd] = useState('0');\n  const [calcError, setCalcError] = useState('');\n  const [transactionList, setTransactionList] = useState([]);\n  const [showMobileTransHistory, setShowMobileTransHistory] = useState(false);\n  const [transHistoryPage, setTransHistoryPage] = useState(0);\n  const [slippage, setSlippage] = useState(''); // refetch transaction history if account/chain changes\n\n  useEffect(() => {\n    setTransHistoryPage(0);\n    setTransactionList([]);\n  }, [account, chainId]);\n  useEffect(() => {\n    if (isBSC(chainId) && props.operationName === 'withdraw') {\n      setSelectedCoinIndex(2);\n      setSelectedCoin('usdt');\n    }\n\n    if (isPLG(chainId) && props.operationName === 'withdraw') {\n      setSelectedCoinIndex(2);\n      setSelectedCoin('usdt');\n    }\n\n    if (isETH(chainId)) {\n      setSelectedCoinIndex(-1);\n      setSelectedCoin('all');\n    }\n  }, [props.operationName, chainId]); // withdraw max balance default set\n\n  useEffect(() => {\n    if (selectedCoinIndex === -1 && balance !== BIG_ZERO && !isNaN(sharePercent) && props.operationName === 'withdraw') {\n      const oneThird = getBalanceNumber(balance).multipliedBy(sharePercent / 100).dividedBy(3).toFixed(2, 1).toString();\n      setDai(oneThird);\n      setUsdc(oneThird);\n      setUsdt(oneThird);\n\n      if (chainId === 56) {\n        setUsdt(getFullDisplayBalance(balance.multipliedBy(sharePercent / 100), 18));\n      }\n    }\n  }, [balance, sharePercent, selectedCoinIndex, chainId, userBalanceList, props.operationName]); // calculate stables to withdraw\n\n  useEffect(() => {\n    const setCalculatedStables = async () => {\n      if (balance === BIG_ZERO || selectedCoinIndex === -1 && !isNaN(sharePercent) || props.operationName !== 'withdraw' || !chainId) {\n        return false;\n      }\n\n      log('setCalculatedStables');\n      const stablesToWithdraw = await calculateStables(selectedCoinIndex, balance, lpPrice, sharePercent, zunamiContract, setCalcError, account);\n      setDai('0');\n      setUsdc('0');\n      setUsdt('0');\n      const percentOfBalance = balance.multipliedBy(sharePercent / 100);\n\n      if (selectedCoinIndex === 0) {\n        const coinValue = getBalanceNumber(new BigNumber(stablesToWithdraw)).toFixed(2, 1).toString();\n        setDai(coinValue);\n        const slippage = await getBackendSlippage(percentOfBalance.decimalPlaces(0).toString(), 0);\n        setSlippage(slippage);\n        log(`DAI slippage is ${slippage}`);\n      } else if (selectedCoinIndex === 1) {\n        const coinValue = getBalanceNumber(new BigNumber(stablesToWithdraw), 6).toFixed(2, 1).toString();\n        setUsdc(coinValue);\n        const slippage = await getBackendSlippage(percentOfBalance.decimalPlaces(0).toString(), 1);\n        setSlippage(slippage);\n        log(`USDC slippage is ${slippage}`);\n      } else if (selectedCoinIndex === 2) {\n        const coinValue = getBalanceNumber(new BigNumber(stablesToWithdraw), 6).toFixed(2, 1).toString();\n        setUsdt(coinValue);\n        const slippage = await getBackendSlippage(percentOfBalance.decimalPlaces(0).toString(), 2);\n        setSlippage(slippage);\n        log(`USDT slippage is ${slippage}`);\n      }\n    };\n\n    setCalculatedStables();\n  }, [balance.toNumber(), lpPrice, selectedCoinIndex, sharePercent, account, props.operationName, chainId, zunamiContract]); // load transaction list\n\n  useEffect(() => {\n    if (!account || transHistoryPage === -1) {\n      return;\n    }\n\n    const getTransactionHistory = async () => {\n      const response = await fetch(getTransHistoryUrl(account, props.operationName.toUpperCase(), transHistoryPage, 10, chainId));\n      const data = await response.json();\n\n      if (!data.userTransfers.length) {\n        setTransHistoryPage(-1);\n        return;\n      }\n\n      setTransactionList(transactionList.concat(data.userTransfers));\n    };\n\n    getTransactionHistory();\n  }, [account, props.operationName, transHistoryPage, chainId]);\n  const supportedChain = useSupportedChain();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MobileSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: 'h-100 d-flex justify-content-between flex-column',\n      children: [!supportedChain && /*#__PURE__*/_jsxDEV(UnsupportedChain, {\n        text: \"You're using unsupported chain. Please, switch either to Ethereum or Binance network.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: 'h-100 main-row',\n        children: [!account && /*#__PURE__*/_jsxDEV(Col, {\n          className: 'content-col',\n          children: /*#__PURE__*/_jsxDEV(WelcomeCarousel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), account && /*#__PURE__*/_jsxDEV(Col, {\n          className: 'content-col',\n          children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n            position: 'top-end',\n            id: \"toasts\",\n            className: 'toasts mt-3 me-3',\n            children: calcError && /*#__PURE__*/_jsxDEV(Toast, {\n              onClose: () => setCalcError(''),\n              delay: 10000,\n              autohide: true,\n              children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n                children: calcError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: 'zun-rounded zun-shadow h-100 operation-col',\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: 'ps-0 pe-0',\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'DepositBlock',\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: 'DepositContent',\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"DepositContent__Title\",\n                    children: [/*#__PURE__*/_jsxDEV(FinIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 49\n                    }, this), \"Deposit & Withdraw\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"trans-story-mobile-btn\",\n                    className: showMobileTransHistory ? 'active' : '',\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"11\",\n                      height: \"12\",\n                      viewBox: \"0 0 11 12\",\n                      fill: \"none\",\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M10.6236 11.0138L10.6235 11.0138C10.5976 11.2374 10.4136 11.3805 10.1869 11.3902C10.1667 11.391 10.1459 11.3909 10.1279 11.3909C10.123 11.3908 10.1183 11.3908 10.114 11.3908L2.49809 11.3911C2.49809 11.3911 2.49808 11.3911 2.49807 11.3911C1.96381 11.3913 1.52468 11.2042 1.19989 10.8133C1.0116 10.5867 0.920792 10.3272 0.903542 10.0497C0.901005 10.009 0.900685 9.9687 0.900683 9.93081C0.900571 7.33663 0.900343 4.74246 0.9 2.14829L10.6236 11.0138ZM10.6236 11.0138L10.6239 11.0102M10.6236 11.0138L10.6239 11.0102M10.6239 11.0102C10.6274 10.9661 10.6284 10.9218 10.6269 10.8776L10.627 6.04986L10.6269 1.19128C10.6283 1.15043 10.6273 1.10954 10.6239 1.06878L10.624 1.06878M10.6239 11.0102L10.624 1.06878M10.624 1.06878L10.6236 1.06535M10.624 1.06878L10.6236 1.06535M10.6236 1.06535C10.5976 0.84203 10.4137 0.698423 10.1869 0.689019C10.159 0.687865 10.1302 0.688044 10.1043 0.688205C10.0957 0.688258 10.0874 0.688309 10.0797 0.688309L2.54395 0.688324C2.53469 0.688324 2.52518 0.68829 2.51546 0.688254C2.47938 0.688122 2.44056 0.68798 2.40235 0.689581C1.93356 0.709233 1.54287 0.882505 1.24394 1.21359C0.996923 1.48718 0.899867 1.80616 0.9 2.14826L10.6236 1.06535ZM2.61757 8.5966C2.33832 8.59635 2.05604 8.61933 1.78983 8.73226L1.7898 2.15232C1.7898 1.99286 1.82418 1.85564 1.92744 1.73816C2.05563 1.59232 2.22521 1.51791 2.43986 1.50615C2.46633 1.5047 2.49228 1.50482 2.52151 1.50495C2.5303 1.50499 2.53939 1.50503 2.54887 1.50503L9.69493 1.50498H9.72903L9.72902 8.59777H9.72874H9.72845H9.72817H9.72789H9.7276H9.72732H9.72704H9.72675H9.72647H9.72618H9.7259H9.72562H9.72533H9.72505H9.72477H9.72448H9.7242H9.72392H9.72363H9.72335H9.72306H9.72278H9.7225H9.72221H9.72193H9.72165H9.72136H9.72108H9.72079H9.72051H9.72023H9.71994H9.71966H9.71938H9.71909H9.71881H9.71853H9.71824H9.71796H9.71768H9.71739H9.71711H9.71682H9.71654H9.71626H9.71597H9.71569H9.71541H9.71512H9.71484H9.71456H9.71427H9.71399H9.71371H9.71342H9.71314H9.71285H9.71257H9.71229H9.712H9.71172H9.71144H9.71115H9.71087H9.71059H9.7103H9.71002H9.70973H9.70945H9.70917H9.70888H9.7086H9.70832H9.70803H9.70775H9.70747H9.70718H9.7069H9.70662H9.70633H9.70605H9.70577H9.70548H9.7052H9.70492H9.70463H9.70435H9.70406H9.70378H9.7035H9.70321H9.70293H9.70265H9.70236H9.70208H9.7018H9.70151H9.70123H9.70095H9.70066H9.70038H9.7001H9.69981H9.69953H9.69925H9.69896H9.69868H9.69839H9.69811H9.69783H9.69754H9.69726H9.69698H9.69669H9.69641H9.69613H9.69584H9.69556H9.69528H9.69499H9.69471H9.69443H9.69414H9.69386H9.69358H9.69329H9.69301H9.69273H9.69244H9.69216H9.69187H9.69159H9.69131H9.69102H9.69074H9.69046H9.69017H9.68989H9.68961H9.68932H9.68904H9.68876H9.68847H9.68819H9.68791H9.68762H9.68734H9.68706H9.68677H9.68649H9.68621H9.68592H9.68564H9.68536H9.68507H9.68479H9.68451H9.68422H9.68394H9.68365H9.68337H9.68331C7.32806 8.59912 4.97282 8.59873 2.61757 8.5966ZM9.68885 9.4155H9.73194V10.5738C9.72634 10.5739 9.72074 10.574 9.71504 10.574C7.31369 10.5738 4.91235 10.574 2.51101 10.5744C2.20736 10.5744 1.99072 10.4707 1.85943 10.2416C1.66543 9.90292 1.92332 9.451 2.38845 9.4209C2.44314 9.41736 2.49831 9.41574 2.55357 9.41574L9.68885 9.4155Z\",\n                        fill: \"#808080\",\n                        stroke: \"#808080\",\n                        strokeWidth: \"0.2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      onClick: () => {\n                        setShowMobileTransHistory(!showMobileTransHistory);\n                        document.body.classList.toggle('overflow');\n                      },\n                      children: \"Transaction Story\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"trans-history-mobile\",\n                    className: `TransactionHisoryMobile ${showMobileTransHistory ? 'active' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"TransactionHisoryMobile__Title\",\n                      children: props.operationName === 'withdraw' ? 'My withdrawals' : 'My deposits'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"TransactionHisoryMobile__Content\",\n                      children: /*#__PURE__*/_jsxDEV(TransactionHistory, {\n                        title: \"\",\n                        section: props.operationName,\n                        items: transactionList,\n                        onPageEnd: () => {\n                          if (transHistoryPage !== -1) {\n                            setTransHistoryPage(transHistoryPage + 1);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 45\n                  }, this), !showMobileTransHistory && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-wrap d-flex justify-content-start\",\n                    children: [/*#__PURE__*/_jsxDEV(Form, {\n                      operationName: props.operationName,\n                      directOperation: directOperation,\n                      directOperationDisabled: false,\n                      lpPrice: lpPrice,\n                      sharePercent: sharePercent,\n                      selectedCoinIndex: selectedCoinIndex,\n                      dai: dai,\n                      usdc: usdc,\n                      usdt: usdt,\n                      busd: busd,\n                      slippage: slippage,\n                      onCoinChange: async (coinType, coinValue) => {\n                        if (coinType === 'dai') {\n                          setDai(Number(coinValue).toString());\n                        } else if (coinType === 'usdc') {\n                          setUsdc(Number(coinValue).toString());\n                        } else if (coinType === 'usdt') {\n                          setUsdt(Number(coinValue).toString());\n                        } else if (coinType === 'busd') {\n                          setBusd(Number(coinValue).toString());\n\n                          if (!Number(coinValue)) {\n                            setSlippage('');\n                            return;\n                          }\n\n                          const slippage = await getSlippage(coinValue.toString());\n                          const usdtValue = getFullDisplayBalance(new BigNumber(slippage), 18);\n                          log(`For ${coinValue} BUSD you'll get ${usdtValue} USDT`);\n                          const slippageValue = Number(coinValue) - Number(usdtValue);\n                          const finalSlippage = (slippageValue / coinValue * 100).toPrecision(2);\n                          log(`Final slippage is: ${finalSlippage}`);\n                          setSlippage(finalSlippage);\n                        }\n                      },\n                      onOperationModeChange: direct => {\n                        setDirectOperation(!direct);\n\n                        if (direct && props.operationName === 'withdraw') {\n                          setSelectedCoin('all');\n                          setSelectedCoinIndex(-1);\n                          setDaiChecked(false);\n                          setUsdcChecked(false);\n                          setUsdtChecked(false);\n                        } else {\n                          setSharePercent(100);\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 53\n                    }, this), props.operationName === 'withdraw' && /*#__PURE__*/_jsxDEV(WithdrawOptions, {\n                      chainId: chainId,\n                      disabled: chainId === 56,\n                      sharePercent: sharePercent,\n                      daiChecked: daiChecked,\n                      usdcChecked: usdcChecked,\n                      usdtChecked: usdtChecked,\n                      coinsSelectionEnabled: !directOperation,\n                      selectedCoin: selectedCoin,\n                      balance: balance,\n                      lpPrice: lpPrice,\n                      onCoinSelect: coin => {\n                        if (!coin) {\n                          return;\n                        }\n\n                        setSelectedCoin(coin);\n\n                        if (coin === 'all') {\n                          const sum = Number(dai) + Number(usdc) + Number(usdt);\n                          const oneThird = (sum / 3).toFixed(2).toString();\n                          setDai(oneThird);\n                          setUsdc(oneThird);\n                          setUsdt(oneThird);\n                          setDirectOperation(false);\n                          setSlippage('');\n                        } else {\n                          setDirectOperation(true);\n                        }\n\n                        const coins = ['dai', 'usdc', 'usdt']; // -1 for \"all\"\n\n                        setSelectedCoinIndex(coins.indexOf(coin));\n                      },\n                      onShareSelect: percent => {\n                        setSharePercent(percent);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 57\n                    }, this), props.operationName === 'Deposit' && /*#__PURE__*/_jsxDEV(TransactionHistory, {\n                      title: \"My deposits history\",\n                      section: props.operationName,\n                      items: transactionList,\n                      onPageEnd: () => {\n                        if (transHistoryPage !== -1) {\n                          setTransHistoryPage(transHistoryPage + 1);\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 57\n                    }, this), props.operationName === 'withdraw' && /*#__PURE__*/_jsxDEV(TransactionHistory, {\n                      title: \"My withdrawals history\",\n                      section: props.operationName,\n                      items: transactionList,\n                      onPageEnd: () => {\n                        if (transHistoryPage !== -1) {\n                          setTransHistoryPage(transHistoryPage + 1);\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://zunamilab.gitbook.io/product-docs/activity/liquidity-providing\",\n          children: \"View docs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.zunami.io/#faq-main\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"FAQ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"copyright\",\n        children: [\"\\xA9 2022 Zunami Protocol. \", `Version: ${process.env.REACT_APP_VERSION}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FinanceOperations, \"JxT/2YTzSGrm17ATvFnD6qB/3KI=\", false, function () {\n  return [useWallet, useSlippage, useEagerConnect, useLpPrice, useBalanceOf, useSushi, useUserBalances, useSupportedChain];\n});\n\n_c = FinanceOperations;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinanceOperations\");","map":{"version":3,"names":["React","useState","useEffect","Header","Form","Container","Row","Col","ToastContainer","Toast","WelcomeCarousel","WithdrawOptions","MobileSidebar","BigNumber","BIG_ZERO","getBalanceNumber","getFullDisplayBalance","useLpPrice","useUserBalances","TransactionHistory","getTransHistoryUrl","getBackendSlippage","useBalanceOf","useWallet","useEagerConnect","calcWithdrawOneCoin","useSushi","getMasterChefContract","isBSC","isETH","isPLG","log","useSlippage","UnsupportedChain","useSupportedChain","calculateStables","coinIndex","balance","lpPrice","sharePercent","zunamiContract","setError","account","toNumber","result","balanceToWithdraw","dividedBy","multipliedBy","toFixed","toString","error","message","FinanceOperations","props","connect","ethereum","chainId","getSlippage","sushi","directOperation","setDirectOperation","daiChecked","setDaiChecked","usdcChecked","setUsdcChecked","usdtChecked","setUsdtChecked","setSharePercent","selectedCoin","setSelectedCoin","userBalanceList","selectedCoinIndex","setSelectedCoinIndex","operationName","dai","setDai","usdc","setUsdc","usdt","setUsdt","busd","setBusd","calcError","setCalcError","transactionList","setTransactionList","showMobileTransHistory","setShowMobileTransHistory","transHistoryPage","setTransHistoryPage","slippage","setSlippage","isNaN","oneThird","setCalculatedStables","stablesToWithdraw","percentOfBalance","coinValue","decimalPlaces","getTransactionHistory","response","fetch","toUpperCase","data","json","userTransfers","length","concat","supportedChain","document","body","classList","toggle","coinType","Number","usdtValue","slippageValue","finalSlippage","toPrecision","direct","coin","sum","coins","indexOf","percent","process","env","REACT_APP_VERSION"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/containers/FinanceOperations.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Header } from '../components/Header/Header';\nimport { Form } from '../components/Form/Form';\nimport './FinanceOperations.scss';\nimport { Container, Row, Col, ToastContainer, Toast } from 'react-bootstrap';\nimport { WelcomeCarousel } from '../components/WelcomeCarousel/WelcomeCarousel';\nimport { WithdrawOptions } from '../components/Form/WithdrawOptions/WithdrawOptions';\nimport { MobileSidebar } from '../components/SideBar/MobileSidebar/MobileSidebar';\nimport { BigNumber } from 'bignumber.js';\nimport { BIG_ZERO, getBalanceNumber, getFullDisplayBalance } from '../utils/formatbalance';\nimport { ReactComponent as FinIcon } from '../components/Form/deposit-withdraw.svg';\nimport useLpPrice from '../hooks/useLpPrice';\nimport { useUserBalances } from '../hooks/useUserBalances';\nimport { TransactionHistory } from '../components/TransactionHistory/TransactionHistory';\nimport { getTransHistoryUrl, getBackendSlippage } from '../api/api';\nimport useBalanceOf from '../hooks/useBalanceOf';\nimport { useWallet } from 'use-wallet';\nimport useEagerConnect from '../hooks/useEagerConnect';\nimport { Contract } from 'web3-eth-contract';\nimport { calcWithdrawOneCoin } from '../utils/erc20';\nimport useSushi from '../hooks/useSushi';\nimport { getMasterChefContract } from '../sushi/utils';\nimport { isBSC, isETH, isPLG } from '../utils/zunami';\nimport { log } from '../utils/logger';\nimport { useSlippage } from '../hooks/useSlippage';\nimport { UnsupportedChain } from '../components/UnsupportedChain/UnsupportedChain';\nimport useSupportedChain from '../hooks/useSupportedChain';\n\ninterface FinanceOperationsProps {\n    operationName: string;\n}\n\nconst calculateStables = async (\n    coinIndex: number,\n    balance: BigNumber,\n    lpPrice: BigNumber,\n    sharePercent: number,\n    zunamiContract: Contract,\n    setError: Function,\n    account: string | null\n) => {\n    if (!zunamiContract || coinIndex === -1 || balance.toNumber() === 0) {\n        return '0';\n    }\n\n    let result = '';\n\n    const balanceToWithdraw = balance\n        .dividedBy(lpPrice)\n        .multipliedBy(sharePercent / 100)\n        .toFixed(0)\n        .toString();\n\n    if (balanceToWithdraw === '0') {\n        return '0';\n    }\n\n    setError('');\n\n    try {\n        result = await calcWithdrawOneCoin(balanceToWithdraw, coinIndex, account);\n    } catch (error: any) {\n        setError(\n            `Error: ${error.message}. Params - coinIndex: ${coinIndex}, lpShares: ${balanceToWithdraw}`\n        );\n        return error;\n    }\n\n    return result;\n};\n\nexport const FinanceOperations = (props: FinanceOperationsProps): JSX.Element => {\n    const { account, connect, ethereum, chainId } = useWallet();\n    const { getSlippage } = useSlippage();\n\n    useEagerConnect(account ? account : '', connect, ethereum);\n\n    const lpPrice = useLpPrice();\n    const balance = useBalanceOf().multipliedBy(lpPrice);\n    const sushi = useSushi();\n    const zunamiContract = getMasterChefContract(sushi);\n\n    const [directOperation, setDirectOperation] = useState(false);\n    const [daiChecked, setDaiChecked] = useState(false);\n    const [usdcChecked, setUsdcChecked] = useState(false);\n    const [usdtChecked, setUsdtChecked] = useState(false);\n    const [sharePercent, setSharePercent] = useState(100);\n    const [selectedCoin, setSelectedCoin] = useState<string>('all');\n    const userBalanceList = useUserBalances();\n    const [selectedCoinIndex, setSelectedCoinIndex] = useState(\n        isBSC(chainId) && props.operationName === 'withdraw' ? 2 : -1\n    );\n    const [dai, setDai] = useState('0');\n    const [usdc, setUsdc] = useState('0');\n    const [usdt, setUsdt] = useState('0');\n    const [busd, setBusd] = useState('0');\n    const [calcError, setCalcError] = useState('');\n    const [transactionList, setTransactionList] = useState([]);\n    const [showMobileTransHistory, setShowMobileTransHistory] = useState(false);\n    const [transHistoryPage, setTransHistoryPage] = useState(0);\n    const [slippage, setSlippage] = useState('');\n\n    // refetch transaction history if account/chain changes\n    useEffect(() => {\n        setTransHistoryPage(0);\n        setTransactionList([]);\n    }, [account, chainId]);\n\n    useEffect(() => {\n        if (isBSC(chainId) && props.operationName === 'withdraw') {\n            setSelectedCoinIndex(2);\n            setSelectedCoin('usdt');\n        }\n\n        if (isPLG(chainId) && props.operationName === 'withdraw') {\n            setSelectedCoinIndex(2);\n            setSelectedCoin('usdt');\n        }\n\n        if (isETH(chainId)) {\n            setSelectedCoinIndex(-1);\n            setSelectedCoin('all');\n        }\n    }, [props.operationName, chainId]);\n\n    // withdraw max balance default set\n    useEffect(() => {\n        if (\n            selectedCoinIndex === -1 &&\n            balance !== BIG_ZERO &&\n            !isNaN(sharePercent) &&\n            props.operationName === 'withdraw'\n        ) {\n            const oneThird = getBalanceNumber(balance)\n                .multipliedBy(sharePercent / 100)\n                .dividedBy(3)\n                .toFixed(2, 1)\n                .toString();\n\n            setDai(oneThird);\n            setUsdc(oneThird);\n            setUsdt(oneThird);\n\n            if (chainId === 56) {\n                setUsdt(getFullDisplayBalance(balance.multipliedBy(sharePercent / 100), 18));\n            }\n        }\n    }, [balance, sharePercent, selectedCoinIndex, chainId, userBalanceList, props.operationName]);\n\n    // calculate stables to withdraw\n    useEffect(() => {\n        const setCalculatedStables = async () => {\n            if (\n                balance === BIG_ZERO ||\n                (selectedCoinIndex === -1 && !isNaN(sharePercent)) ||\n                props.operationName !== 'withdraw' ||\n                !chainId\n            ) {\n                return false;\n            }\n\n            log('setCalculatedStables');\n\n            const stablesToWithdraw = await calculateStables(\n                selectedCoinIndex,\n                balance,\n                lpPrice,\n                sharePercent,\n                zunamiContract,\n                setCalcError,\n                account\n            );\n\n            setDai('0');\n            setUsdc('0');\n            setUsdt('0');\n\n            const percentOfBalance = balance.multipliedBy(sharePercent / 100);\n\n            if (selectedCoinIndex === 0) {\n                const coinValue = getBalanceNumber(new BigNumber(stablesToWithdraw))\n                    .toFixed(2, 1)\n                    .toString();\n                setDai(coinValue);\n\n                const slippage = await getBackendSlippage(\n                    percentOfBalance.decimalPlaces(0).toString(),\n                    0\n                );\n\n                setSlippage(slippage);\n\n                log(`DAI slippage is ${slippage}`);\n            } else if (selectedCoinIndex === 1) {\n                const coinValue = getBalanceNumber(new BigNumber(stablesToWithdraw), 6)\n                    .toFixed(2, 1)\n                    .toString();\n                setUsdc(coinValue);\n\n                const slippage = await getBackendSlippage(\n                    percentOfBalance.decimalPlaces(0).toString(),\n                    1\n                );\n\n                setSlippage(slippage);\n\n                log(`USDC slippage is ${slippage}`);\n            } else if (selectedCoinIndex === 2) {\n                const coinValue = getBalanceNumber(new BigNumber(stablesToWithdraw), 6)\n                    .toFixed(2, 1)\n                    .toString();\n                setUsdt(coinValue);\n\n                const slippage = await getBackendSlippage(\n                    percentOfBalance.decimalPlaces(0).toString(),\n                    2\n                );\n\n                setSlippage(slippage);\n\n                log(`USDT slippage is ${slippage}`);\n            }\n        };\n\n        setCalculatedStables();\n    }, [\n        balance.toNumber(),\n        lpPrice,\n        selectedCoinIndex,\n        sharePercent,\n        account,\n        props.operationName,\n        chainId,\n        zunamiContract,\n    ]);\n\n    // load transaction list\n    useEffect(() => {\n        if (!account || transHistoryPage === -1) {\n            return;\n        }\n\n        const getTransactionHistory = async () => {\n            const response = await fetch(\n                getTransHistoryUrl(\n                    account,\n                    props.operationName.toUpperCase(),\n                    transHistoryPage,\n                    10,\n                    chainId\n                )\n            );\n\n            const data = await response.json();\n\n            if (!data.userTransfers.length) {\n                setTransHistoryPage(-1);\n                return;\n            }\n\n            setTransactionList(transactionList.concat(data.userTransfers));\n        };\n\n        getTransactionHistory();\n    }, [account, props.operationName, transHistoryPage, chainId]);\n\n    const supportedChain = useSupportedChain();\n\n    return (\n        <React.Fragment>\n            <Header />\n            <MobileSidebar />\n            <Container className={'h-100 d-flex justify-content-between flex-column'}>\n                {!supportedChain && (\n                    <UnsupportedChain text=\"You're using unsupported chain. Please, switch either to Ethereum or Binance network.\" />\n                )}\n                <Row className={'h-100 main-row'}>\n                    {!account && (\n                        <Col className={'content-col'}>\n                            <WelcomeCarousel />\n                        </Col>\n                    )}\n                    {account && (\n                        <Col className={'content-col'}>\n                            <ToastContainer\n                                position={'top-end'}\n                                id=\"toasts\"\n                                className={'toasts mt-3 me-3'}\n                            >\n                                {calcError && (\n                                    <Toast onClose={() => setCalcError('')} delay={10000} autohide>\n                                        <Toast.Body>{calcError}</Toast.Body>\n                                    </Toast>\n                                )}\n                            </ToastContainer>\n                            <Row className={'zun-rounded zun-shadow h-100 operation-col'}>\n                                <Col className={'ps-0 pe-0'}>\n                                    <div className={'DepositBlock'}>\n                                        <div className={'DepositContent'}>\n                                            <h3 className=\"DepositContent__Title\">\n                                                <FinIcon />\n                                                Deposit & Withdraw\n                                            </h3>\n                                            <div\n                                                id=\"trans-story-mobile-btn\"\n                                                className={showMobileTransHistory ? 'active' : ''}\n                                            >\n                                                <svg\n                                                    width=\"11\"\n                                                    height=\"12\"\n                                                    viewBox=\"0 0 11 12\"\n                                                    fill=\"none\"\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                >\n                                                    <path\n                                                        d=\"M10.6236 11.0138L10.6235 11.0138C10.5976 11.2374 10.4136 11.3805 10.1869 11.3902C10.1667 11.391 10.1459 11.3909 10.1279 11.3909C10.123 11.3908 10.1183 11.3908 10.114 11.3908L2.49809 11.3911C2.49809 11.3911 2.49808 11.3911 2.49807 11.3911C1.96381 11.3913 1.52468 11.2042 1.19989 10.8133C1.0116 10.5867 0.920792 10.3272 0.903542 10.0497C0.901005 10.009 0.900685 9.9687 0.900683 9.93081C0.900571 7.33663 0.900343 4.74246 0.9 2.14829L10.6236 11.0138ZM10.6236 11.0138L10.6239 11.0102M10.6236 11.0138L10.6239 11.0102M10.6239 11.0102C10.6274 10.9661 10.6284 10.9218 10.6269 10.8776L10.627 6.04986L10.6269 1.19128C10.6283 1.15043 10.6273 1.10954 10.6239 1.06878L10.624 1.06878M10.6239 11.0102L10.624 1.06878M10.624 1.06878L10.6236 1.06535M10.624 1.06878L10.6236 1.06535M10.6236 1.06535C10.5976 0.84203 10.4137 0.698423 10.1869 0.689019C10.159 0.687865 10.1302 0.688044 10.1043 0.688205C10.0957 0.688258 10.0874 0.688309 10.0797 0.688309L2.54395 0.688324C2.53469 0.688324 2.52518 0.68829 2.51546 0.688254C2.47938 0.688122 2.44056 0.68798 2.40235 0.689581C1.93356 0.709233 1.54287 0.882505 1.24394 1.21359C0.996923 1.48718 0.899867 1.80616 0.9 2.14826L10.6236 1.06535ZM2.61757 8.5966C2.33832 8.59635 2.05604 8.61933 1.78983 8.73226L1.7898 2.15232C1.7898 1.99286 1.82418 1.85564 1.92744 1.73816C2.05563 1.59232 2.22521 1.51791 2.43986 1.50615C2.46633 1.5047 2.49228 1.50482 2.52151 1.50495C2.5303 1.50499 2.53939 1.50503 2.54887 1.50503L9.69493 1.50498H9.72903L9.72902 8.59777H9.72874H9.72845H9.72817H9.72789H9.7276H9.72732H9.72704H9.72675H9.72647H9.72618H9.7259H9.72562H9.72533H9.72505H9.72477H9.72448H9.7242H9.72392H9.72363H9.72335H9.72306H9.72278H9.7225H9.72221H9.72193H9.72165H9.72136H9.72108H9.72079H9.72051H9.72023H9.71994H9.71966H9.71938H9.71909H9.71881H9.71853H9.71824H9.71796H9.71768H9.71739H9.71711H9.71682H9.71654H9.71626H9.71597H9.71569H9.71541H9.71512H9.71484H9.71456H9.71427H9.71399H9.71371H9.71342H9.71314H9.71285H9.71257H9.71229H9.712H9.71172H9.71144H9.71115H9.71087H9.71059H9.7103H9.71002H9.70973H9.70945H9.70917H9.70888H9.7086H9.70832H9.70803H9.70775H9.70747H9.70718H9.7069H9.70662H9.70633H9.70605H9.70577H9.70548H9.7052H9.70492H9.70463H9.70435H9.70406H9.70378H9.7035H9.70321H9.70293H9.70265H9.70236H9.70208H9.7018H9.70151H9.70123H9.70095H9.70066H9.70038H9.7001H9.69981H9.69953H9.69925H9.69896H9.69868H9.69839H9.69811H9.69783H9.69754H9.69726H9.69698H9.69669H9.69641H9.69613H9.69584H9.69556H9.69528H9.69499H9.69471H9.69443H9.69414H9.69386H9.69358H9.69329H9.69301H9.69273H9.69244H9.69216H9.69187H9.69159H9.69131H9.69102H9.69074H9.69046H9.69017H9.68989H9.68961H9.68932H9.68904H9.68876H9.68847H9.68819H9.68791H9.68762H9.68734H9.68706H9.68677H9.68649H9.68621H9.68592H9.68564H9.68536H9.68507H9.68479H9.68451H9.68422H9.68394H9.68365H9.68337H9.68331C7.32806 8.59912 4.97282 8.59873 2.61757 8.5966ZM9.68885 9.4155H9.73194V10.5738C9.72634 10.5739 9.72074 10.574 9.71504 10.574C7.31369 10.5738 4.91235 10.574 2.51101 10.5744C2.20736 10.5744 1.99072 10.4707 1.85943 10.2416C1.66543 9.90292 1.92332 9.451 2.38845 9.4209C2.44314 9.41736 2.49831 9.41574 2.55357 9.41574L9.68885 9.4155Z\"\n                                                        fill=\"#808080\"\n                                                        stroke=\"#808080\"\n                                                        strokeWidth=\"0.2\"\n                                                    />\n                                                </svg>\n                                                <span\n                                                    onClick={() => {\n                                                        setShowMobileTransHistory(\n                                                            !showMobileTransHistory\n                                                        );\n\n                                                        document.body.classList.toggle('overflow');\n                                                    }}\n                                                >\n                                                    Transaction Story\n                                                </span>\n                                            </div>\n                                            <div\n                                                id=\"trans-history-mobile\"\n                                                className={`TransactionHisoryMobile ${\n                                                    showMobileTransHistory ? 'active' : ''\n                                                }`}\n                                            >\n                                                <div className=\"TransactionHisoryMobile__Title\">\n                                                    {props.operationName === 'withdraw'\n                                                        ? 'My withdrawals'\n                                                        : 'My deposits'}\n                                                </div>\n                                                <div className=\"TransactionHisoryMobile__Content\">\n                                                    <TransactionHistory\n                                                        title=\"\"\n                                                        section={props.operationName}\n                                                        items={transactionList}\n                                                        onPageEnd={() => {\n                                                            if (transHistoryPage !== -1) {\n                                                                setTransHistoryPage(\n                                                                    transHistoryPage + 1\n                                                                );\n                                                            }\n                                                        }}\n                                                    />\n                                                </div>\n                                            </div>\n                                            {!showMobileTransHistory && (\n                                                <div className=\"flex-wrap d-flex justify-content-start\">\n                                                    <Form\n                                                        operationName={props.operationName}\n                                                        directOperation={directOperation}\n                                                        directOperationDisabled={false}\n                                                        lpPrice={lpPrice}\n                                                        sharePercent={sharePercent}\n                                                        selectedCoinIndex={selectedCoinIndex}\n                                                        dai={dai}\n                                                        usdc={usdc}\n                                                        usdt={usdt}\n                                                        busd={busd}\n                                                        slippage={slippage}\n                                                        onCoinChange={async (\n                                                            coinType: string,\n                                                            coinValue: number\n                                                        ) => {\n                                                            if (coinType === 'dai') {\n                                                                setDai(\n                                                                    Number(coinValue).toString()\n                                                                );\n                                                            } else if (coinType === 'usdc') {\n                                                                setUsdc(\n                                                                    Number(coinValue).toString()\n                                                                );\n                                                            } else if (coinType === 'usdt') {\n                                                                setUsdt(\n                                                                    Number(coinValue).toString()\n                                                                );\n                                                            } else if (coinType === 'busd') {\n                                                                setBusd(\n                                                                    Number(coinValue).toString()\n                                                                );\n\n                                                                if (!Number(coinValue)) {\n                                                                    setSlippage('');\n                                                                    return;\n                                                                }\n\n                                                                const slippage = await getSlippage(\n                                                                    coinValue.toString()\n                                                                );\n\n                                                                const usdtValue =\n                                                                    getFullDisplayBalance(\n                                                                        new BigNumber(slippage),\n                                                                        18\n                                                                    );\n\n                                                                log(\n                                                                    `For ${coinValue} BUSD you'll get ${usdtValue} USDT`\n                                                                );\n\n                                                                const slippageValue =\n                                                                    Number(coinValue) -\n                                                                    Number(usdtValue);\n\n                                                                const finalSlippage = (\n                                                                    (slippageValue / coinValue) *\n                                                                    100\n                                                                ).toPrecision(2);\n\n                                                                log(\n                                                                    `Final slippage is: ${finalSlippage}`\n                                                                );\n\n                                                                setSlippage(finalSlippage);\n                                                            }\n                                                        }}\n                                                        onOperationModeChange={(direct: any) => {\n                                                            setDirectOperation(!direct);\n\n                                                            if (\n                                                                direct &&\n                                                                props.operationName === 'withdraw'\n                                                            ) {\n                                                                setSelectedCoin('all');\n                                                                setSelectedCoinIndex(-1);\n                                                                setDaiChecked(false);\n                                                                setUsdcChecked(false);\n                                                                setUsdtChecked(false);\n                                                            } else {\n                                                                setSharePercent(100);\n                                                            }\n                                                        }}\n                                                    />\n                                                    {props.operationName === 'withdraw' && (\n                                                        <WithdrawOptions\n                                                            chainId={chainId}\n                                                            disabled={chainId === 56}\n                                                            sharePercent={sharePercent}\n                                                            daiChecked={daiChecked}\n                                                            usdcChecked={usdcChecked}\n                                                            usdtChecked={usdtChecked}\n                                                            coinsSelectionEnabled={!directOperation}\n                                                            selectedCoin={selectedCoin}\n                                                            balance={balance}\n                                                            lpPrice={lpPrice}\n                                                            onCoinSelect={(coin: string) => {\n                                                                if (!coin) {\n                                                                    return;\n                                                                }\n\n                                                                setSelectedCoin(coin);\n\n                                                                if (coin === 'all') {\n                                                                    const sum =\n                                                                        Number(dai) +\n                                                                        Number(usdc) +\n                                                                        Number(usdt);\n\n                                                                    const oneThird = (sum / 3)\n                                                                        .toFixed(2)\n                                                                        .toString();\n\n                                                                    setDai(oneThird);\n                                                                    setUsdc(oneThird);\n                                                                    setUsdt(oneThird);\n                                                                    setDirectOperation(false);\n                                                                    setSlippage('');\n                                                                } else {\n                                                                    setDirectOperation(true);\n                                                                }\n\n                                                                const coins = [\n                                                                    'dai',\n                                                                    'usdc',\n                                                                    'usdt',\n                                                                ];\n\n                                                                // -1 for \"all\"\n                                                                setSelectedCoinIndex(\n                                                                    coins.indexOf(coin)\n                                                                );\n                                                            }}\n                                                            onShareSelect={(percent: any) => {\n                                                                setSharePercent(percent);\n                                                            }}\n                                                        />\n                                                    )}\n                                                    {props.operationName === 'Deposit' && (\n                                                        <TransactionHistory\n                                                            title=\"My deposits history\"\n                                                            section={props.operationName}\n                                                            items={transactionList}\n                                                            onPageEnd={() => {\n                                                                if (transHistoryPage !== -1) {\n                                                                    setTransHistoryPage(\n                                                                        transHistoryPage + 1\n                                                                    );\n                                                                }\n                                                            }}\n                                                        />\n                                                    )}\n                                                    {props.operationName === 'withdraw' && (\n                                                        <TransactionHistory\n                                                            title=\"My withdrawals history\"\n                                                            section={props.operationName}\n                                                            items={transactionList}\n                                                            onPageEnd={() => {\n                                                                if (transHistoryPage !== -1) {\n                                                                    setTransHistoryPage(\n                                                                        transHistoryPage + 1\n                                                                    );\n                                                                }\n                                                            }}\n                                                        />\n                                                    )}\n                                                </div>\n                                            )}\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>\n                    )}\n                </Row>\n            </Container>\n            <footer>\n                <div className=\"mobile\">\n                    <a href=\"https://zunamilab.gitbook.io/product-docs/activity/liquidity-providing\">\n                        View docs\n                    </a>\n                    <a href=\"https://www.zunami.io/#faq-main\" target=\"_blank\" rel=\"noreferrer\">\n                        FAQ\n                    </a>\n                </div>\n                <span className=\"copyright\">\n                    © 2022 Zunami Protocol. {`Version: ${process.env.REACT_APP_VERSION}`}\n                </span>\n            </footer>\n        </React.Fragment>\n    );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,OAAO,0BAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,cAA9B,EAA8CC,KAA9C,QAA2D,iBAA3D;AACA,SAASC,eAAT,QAAgC,+CAAhC;AACA,SAASC,eAAT,QAAgC,oDAAhC;AACA,SAASC,aAAT,QAA8B,mDAA9B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,qBAArC,QAAkE,wBAAlE;;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,kBAAT,QAAmC,qDAAnC;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,YAAvD;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,SAASC,mBAAT,QAAoC,gBAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,gBAAT,QAAiC,iDAAjC;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;;;AAMA,MAAMC,gBAAgB,GAAG,OACrBC,SADqB,EAErBC,OAFqB,EAGrBC,OAHqB,EAIrBC,YAJqB,EAKrBC,cALqB,EAMrBC,QANqB,EAOrBC,OAPqB,KAQpB;EACD,IAAI,CAACF,cAAD,IAAmBJ,SAAS,KAAK,CAAC,CAAlC,IAAuCC,OAAO,CAACM,QAAR,OAAuB,CAAlE,EAAqE;IACjE,OAAO,GAAP;EACH;;EAED,IAAIC,MAAM,GAAG,EAAb;EAEA,MAAMC,iBAAiB,GAAGR,OAAO,CAC5BS,SADqB,CACXR,OADW,EAErBS,YAFqB,CAERR,YAAY,GAAG,GAFP,EAGrBS,OAHqB,CAGb,CAHa,EAIrBC,QAJqB,EAA1B;;EAMA,IAAIJ,iBAAiB,KAAK,GAA1B,EAA+B;IAC3B,OAAO,GAAP;EACH;;EAEDJ,QAAQ,CAAC,EAAD,CAAR;;EAEA,IAAI;IACAG,MAAM,GAAG,MAAMnB,mBAAmB,CAACoB,iBAAD,EAAoBT,SAApB,EAA+BM,OAA/B,CAAlC;EACH,CAFD,CAEE,OAAOQ,KAAP,EAAmB;IACjBT,QAAQ,CACH,UAASS,KAAK,CAACC,OAAQ,yBAAwBf,SAAU,eAAcS,iBAAkB,EADtF,CAAR;IAGA,OAAOK,KAAP;EACH;;EAED,OAAON,MAAP;AACH,CArCD;;AAuCA,OAAO,MAAMQ,iBAAiB,GAAIC,KAAD,IAAgD;EAAA;;EAC7E,MAAM;IAAEX,OAAF;IAAWY,OAAX;IAAoBC,QAApB;IAA8BC;EAA9B,IAA0CjC,SAAS,EAAzD;EACA,MAAM;IAAEkC;EAAF,IAAkBzB,WAAW,EAAnC;EAEAR,eAAe,CAACkB,OAAO,GAAGA,OAAH,GAAa,EAArB,EAAyBY,OAAzB,EAAkCC,QAAlC,CAAf;EAEA,MAAMjB,OAAO,GAAGrB,UAAU,EAA1B;EACA,MAAMoB,OAAO,GAAGf,YAAY,GAAGyB,YAAf,CAA4BT,OAA5B,CAAhB;EACA,MAAMoB,KAAK,GAAGhC,QAAQ,EAAtB;EACA,MAAMc,cAAc,GAAGb,qBAAqB,CAAC+B,KAAD,CAA5C;EAEA,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwC3D,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAM,CAAC4D,UAAD,EAAaC,aAAb,IAA8B7D,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAAC8D,WAAD,EAAcC,cAAd,IAAgC/D,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACgE,WAAD,EAAcC,cAAd,IAAgCjE,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACsC,YAAD,EAAe4B,eAAf,IAAkClE,QAAQ,CAAC,GAAD,CAAhD;EACA,MAAM,CAACmE,YAAD,EAAeC,eAAf,IAAkCpE,QAAQ,CAAS,KAAT,CAAhD;EACA,MAAMqE,eAAe,GAAGpD,eAAe,EAAvC;EACA,MAAM,CAACqD,iBAAD,EAAoBC,oBAApB,IAA4CvE,QAAQ,CACtD2B,KAAK,CAAC4B,OAAD,CAAL,IAAkBH,KAAK,CAACoB,aAAN,KAAwB,UAA1C,GAAuD,CAAvD,GAA2D,CAAC,CADN,CAA1D;EAGA,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgB1E,QAAQ,CAAC,GAAD,CAA9B;EACA,MAAM,CAAC2E,IAAD,EAAOC,OAAP,IAAkB5E,QAAQ,CAAC,GAAD,CAAhC;EACA,MAAM,CAAC6E,IAAD,EAAOC,OAAP,IAAkB9E,QAAQ,CAAC,GAAD,CAAhC;EACA,MAAM,CAAC+E,IAAD,EAAOC,OAAP,IAAkBhF,QAAQ,CAAC,GAAD,CAAhC;EACA,MAAM,CAACiF,SAAD,EAAYC,YAAZ,IAA4BlF,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACmF,eAAD,EAAkBC,kBAAlB,IAAwCpF,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACqF,sBAAD,EAAyBC,yBAAzB,IAAsDtF,QAAQ,CAAC,KAAD,CAApE;EACA,MAAM,CAACuF,gBAAD,EAAmBC,mBAAnB,IAA0CxF,QAAQ,CAAC,CAAD,CAAxD;EACA,MAAM,CAACyF,QAAD,EAAWC,WAAX,IAA0B1F,QAAQ,CAAC,EAAD,CAAxC,CA7B6E,CA+B7E;;EACAC,SAAS,CAAC,MAAM;IACZuF,mBAAmB,CAAC,CAAD,CAAnB;IACAJ,kBAAkB,CAAC,EAAD,CAAlB;EACH,CAHQ,EAGN,CAAC3C,OAAD,EAAUc,OAAV,CAHM,CAAT;EAKAtD,SAAS,CAAC,MAAM;IACZ,IAAI0B,KAAK,CAAC4B,OAAD,CAAL,IAAkBH,KAAK,CAACoB,aAAN,KAAwB,UAA9C,EAA0D;MACtDD,oBAAoB,CAAC,CAAD,CAApB;MACAH,eAAe,CAAC,MAAD,CAAf;IACH;;IAED,IAAIvC,KAAK,CAAC0B,OAAD,CAAL,IAAkBH,KAAK,CAACoB,aAAN,KAAwB,UAA9C,EAA0D;MACtDD,oBAAoB,CAAC,CAAD,CAApB;MACAH,eAAe,CAAC,MAAD,CAAf;IACH;;IAED,IAAIxC,KAAK,CAAC2B,OAAD,CAAT,EAAoB;MAChBgB,oBAAoB,CAAC,CAAC,CAAF,CAApB;MACAH,eAAe,CAAC,KAAD,CAAf;IACH;EACJ,CAfQ,EAeN,CAAChB,KAAK,CAACoB,aAAP,EAAsBjB,OAAtB,CAfM,CAAT,CArC6E,CAsD7E;;EACAtD,SAAS,CAAC,MAAM;IACZ,IACIqE,iBAAiB,KAAK,CAAC,CAAvB,IACAlC,OAAO,KAAKvB,QADZ,IAEA,CAAC8E,KAAK,CAACrD,YAAD,CAFN,IAGAc,KAAK,CAACoB,aAAN,KAAwB,UAJ5B,EAKE;MACE,MAAMoB,QAAQ,GAAG9E,gBAAgB,CAACsB,OAAD,CAAhB,CACZU,YADY,CACCR,YAAY,GAAG,GADhB,EAEZO,SAFY,CAEF,CAFE,EAGZE,OAHY,CAGJ,CAHI,EAGD,CAHC,EAIZC,QAJY,EAAjB;MAMA0B,MAAM,CAACkB,QAAD,CAAN;MACAhB,OAAO,CAACgB,QAAD,CAAP;MACAd,OAAO,CAACc,QAAD,CAAP;;MAEA,IAAIrC,OAAO,KAAK,EAAhB,EAAoB;QAChBuB,OAAO,CAAC/D,qBAAqB,CAACqB,OAAO,CAACU,YAAR,CAAqBR,YAAY,GAAG,GAApC,CAAD,EAA2C,EAA3C,CAAtB,CAAP;MACH;IACJ;EACJ,CArBQ,EAqBN,CAACF,OAAD,EAAUE,YAAV,EAAwBgC,iBAAxB,EAA2Cf,OAA3C,EAAoDc,eAApD,EAAqEjB,KAAK,CAACoB,aAA3E,CArBM,CAAT,CAvD6E,CA8E7E;;EACAvE,SAAS,CAAC,MAAM;IACZ,MAAM4F,oBAAoB,GAAG,YAAY;MACrC,IACIzD,OAAO,KAAKvB,QAAZ,IACCyD,iBAAiB,KAAK,CAAC,CAAvB,IAA4B,CAACqB,KAAK,CAACrD,YAAD,CADnC,IAEAc,KAAK,CAACoB,aAAN,KAAwB,UAFxB,IAGA,CAACjB,OAJL,EAKE;QACE,OAAO,KAAP;MACH;;MAEDzB,GAAG,CAAC,sBAAD,CAAH;MAEA,MAAMgE,iBAAiB,GAAG,MAAM5D,gBAAgB,CAC5CoC,iBAD4C,EAE5ClC,OAF4C,EAG5CC,OAH4C,EAI5CC,YAJ4C,EAK5CC,cAL4C,EAM5C2C,YAN4C,EAO5CzC,OAP4C,CAAhD;MAUAiC,MAAM,CAAC,GAAD,CAAN;MACAE,OAAO,CAAC,GAAD,CAAP;MACAE,OAAO,CAAC,GAAD,CAAP;MAEA,MAAMiB,gBAAgB,GAAG3D,OAAO,CAACU,YAAR,CAAqBR,YAAY,GAAG,GAApC,CAAzB;;MAEA,IAAIgC,iBAAiB,KAAK,CAA1B,EAA6B;QACzB,MAAM0B,SAAS,GAAGlF,gBAAgB,CAAC,IAAIF,SAAJ,CAAckF,iBAAd,CAAD,CAAhB,CACb/C,OADa,CACL,CADK,EACF,CADE,EAEbC,QAFa,EAAlB;QAGA0B,MAAM,CAACsB,SAAD,CAAN;QAEA,MAAMP,QAAQ,GAAG,MAAMrE,kBAAkB,CACrC2E,gBAAgB,CAACE,aAAjB,CAA+B,CAA/B,EAAkCjD,QAAlC,EADqC,EAErC,CAFqC,CAAzC;QAKA0C,WAAW,CAACD,QAAD,CAAX;QAEA3D,GAAG,CAAE,mBAAkB2D,QAAS,EAA7B,CAAH;MACH,CAdD,MAcO,IAAInB,iBAAiB,KAAK,CAA1B,EAA6B;QAChC,MAAM0B,SAAS,GAAGlF,gBAAgB,CAAC,IAAIF,SAAJ,CAAckF,iBAAd,CAAD,EAAmC,CAAnC,CAAhB,CACb/C,OADa,CACL,CADK,EACF,CADE,EAEbC,QAFa,EAAlB;QAGA4B,OAAO,CAACoB,SAAD,CAAP;QAEA,MAAMP,QAAQ,GAAG,MAAMrE,kBAAkB,CACrC2E,gBAAgB,CAACE,aAAjB,CAA+B,CAA/B,EAAkCjD,QAAlC,EADqC,EAErC,CAFqC,CAAzC;QAKA0C,WAAW,CAACD,QAAD,CAAX;QAEA3D,GAAG,CAAE,oBAAmB2D,QAAS,EAA9B,CAAH;MACH,CAdM,MAcA,IAAInB,iBAAiB,KAAK,CAA1B,EAA6B;QAChC,MAAM0B,SAAS,GAAGlF,gBAAgB,CAAC,IAAIF,SAAJ,CAAckF,iBAAd,CAAD,EAAmC,CAAnC,CAAhB,CACb/C,OADa,CACL,CADK,EACF,CADE,EAEbC,QAFa,EAAlB;QAGA8B,OAAO,CAACkB,SAAD,CAAP;QAEA,MAAMP,QAAQ,GAAG,MAAMrE,kBAAkB,CACrC2E,gBAAgB,CAACE,aAAjB,CAA+B,CAA/B,EAAkCjD,QAAlC,EADqC,EAErC,CAFqC,CAAzC;QAKA0C,WAAW,CAACD,QAAD,CAAX;QAEA3D,GAAG,CAAE,oBAAmB2D,QAAS,EAA9B,CAAH;MACH;IACJ,CAvED;;IAyEAI,oBAAoB;EACvB,CA3EQ,EA2EN,CACCzD,OAAO,CAACM,QAAR,EADD,EAECL,OAFD,EAGCiC,iBAHD,EAIChC,YAJD,EAKCG,OALD,EAMCW,KAAK,CAACoB,aANP,EAOCjB,OAPD,EAQChB,cARD,CA3EM,CAAT,CA/E6E,CAqK7E;;EACAtC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACwC,OAAD,IAAY8C,gBAAgB,KAAK,CAAC,CAAtC,EAAyC;MACrC;IACH;;IAED,MAAMW,qBAAqB,GAAG,YAAY;MACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxBjF,kBAAkB,CACdsB,OADc,EAEdW,KAAK,CAACoB,aAAN,CAAoB6B,WAApB,EAFc,EAGdd,gBAHc,EAId,EAJc,EAKdhC,OALc,CADM,CAA5B;MAUA,MAAM+C,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;;MAEA,IAAI,CAACD,IAAI,CAACE,aAAL,CAAmBC,MAAxB,EAAgC;QAC5BjB,mBAAmB,CAAC,CAAC,CAAF,CAAnB;QACA;MACH;;MAEDJ,kBAAkB,CAACD,eAAe,CAACuB,MAAhB,CAAuBJ,IAAI,CAACE,aAA5B,CAAD,CAAlB;IACH,CAnBD;;IAqBAN,qBAAqB;EACxB,CA3BQ,EA2BN,CAACzD,OAAD,EAAUW,KAAK,CAACoB,aAAhB,EAA+Be,gBAA/B,EAAiDhC,OAAjD,CA3BM,CAAT;EA6BA,MAAMoD,cAAc,GAAG1E,iBAAiB,EAAxC;EAEA,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,SAAD;MAAW,SAAS,EAAE,kDAAtB;MAAA,WACK,CAAC0E,cAAD,iBACG,QAAC,gBAAD;QAAkB,IAAI,EAAC;MAAvB;QAAA;QAAA;QAAA;MAAA,QAFR,eAII,QAAC,GAAD;QAAK,SAAS,EAAE,gBAAhB;QAAA,WACK,CAAClE,OAAD,iBACG,QAAC,GAAD;UAAK,SAAS,EAAE,aAAhB;UAAA,uBACI,QAAC,eAAD;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAFR,EAMKA,OAAO,iBACJ,QAAC,GAAD;UAAK,SAAS,EAAE,aAAhB;UAAA,wBACI,QAAC,cAAD;YACI,QAAQ,EAAE,SADd;YAEI,EAAE,EAAC,QAFP;YAGI,SAAS,EAAE,kBAHf;YAAA,UAKKwC,SAAS,iBACN,QAAC,KAAD;cAAO,OAAO,EAAE,MAAMC,YAAY,CAAC,EAAD,CAAlC;cAAwC,KAAK,EAAE,KAA/C;cAAsD,QAAQ,MAA9D;cAAA,uBACI,QAAC,KAAD,CAAO,IAAP;gBAAA,UAAaD;cAAb;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA;UANR;YAAA;YAAA;YAAA;UAAA,QADJ,eAYI,QAAC,GAAD;YAAK,SAAS,EAAE,4CAAhB;YAAA,uBACI,QAAC,GAAD;cAAK,SAAS,EAAE,WAAhB;cAAA,uBACI;gBAAK,SAAS,EAAE,cAAhB;gBAAA,uBACI;kBAAK,SAAS,EAAE,gBAAhB;kBAAA,wBACI;oBAAI,SAAS,EAAC,uBAAd;oBAAA,wBACI,QAAC,OAAD;sBAAA;sBAAA;sBAAA;oBAAA,QADJ;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAKI;oBACI,EAAE,EAAC,wBADP;oBAEI,SAAS,EAAEI,sBAAsB,GAAG,QAAH,GAAc,EAFnD;oBAAA,wBAII;sBACI,KAAK,EAAC,IADV;sBAEI,MAAM,EAAC,IAFX;sBAGI,OAAO,EAAC,WAHZ;sBAII,IAAI,EAAC,MAJT;sBAKI,KAAK,EAAC,4BALV;sBAAA,uBAOI;wBACI,CAAC,EAAC,ugGADN;wBAEI,IAAI,EAAC,SAFT;wBAGI,MAAM,EAAC,SAHX;wBAII,WAAW,EAAC;sBAJhB;wBAAA;wBAAA;wBAAA;sBAAA;oBAPJ;sBAAA;sBAAA;sBAAA;oBAAA,QAJJ,eAkBI;sBACI,OAAO,EAAE,MAAM;wBACXC,yBAAyB,CACrB,CAACD,sBADoB,CAAzB;wBAIAuB,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,UAA/B;sBACH,CAPL;sBAAA;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA,QAlBJ;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QALJ,eAmCI;oBACI,EAAE,EAAC,sBADP;oBAEI,SAAS,EAAG,2BACR1B,sBAAsB,GAAG,QAAH,GAAc,EACvC,EAJL;oBAAA,wBAMI;sBAAK,SAAS,EAAC,gCAAf;sBAAA,UACKjC,KAAK,CAACoB,aAAN,KAAwB,UAAxB,GACK,gBADL,GAEK;oBAHV;sBAAA;sBAAA;sBAAA;oBAAA,QANJ,eAWI;sBAAK,SAAS,EAAC,kCAAf;sBAAA,uBACI,QAAC,kBAAD;wBACI,KAAK,EAAC,EADV;wBAEI,OAAO,EAAEpB,KAAK,CAACoB,aAFnB;wBAGI,KAAK,EAAEW,eAHX;wBAII,SAAS,EAAE,MAAM;0BACb,IAAII,gBAAgB,KAAK,CAAC,CAA1B,EAA6B;4BACzBC,mBAAmB,CACfD,gBAAgB,GAAG,CADJ,CAAnB;0BAGH;wBACJ;sBAVL;wBAAA;wBAAA;wBAAA;sBAAA;oBADJ;sBAAA;sBAAA;sBAAA;oBAAA,QAXJ;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAnCJ,EA6DK,CAACF,sBAAD,iBACG;oBAAK,SAAS,EAAC,wCAAf;oBAAA,wBACI,QAAC,IAAD;sBACI,aAAa,EAAEjC,KAAK,CAACoB,aADzB;sBAEI,eAAe,EAAEd,eAFrB;sBAGI,uBAAuB,EAAE,KAH7B;sBAII,OAAO,EAAErB,OAJb;sBAKI,YAAY,EAAEC,YALlB;sBAMI,iBAAiB,EAAEgC,iBANvB;sBAOI,GAAG,EAAEG,GAPT;sBAQI,IAAI,EAAEE,IARV;sBASI,IAAI,EAAEE,IATV;sBAUI,IAAI,EAAEE,IAVV;sBAWI,QAAQ,EAAEU,QAXd;sBAYI,YAAY,EAAE,OACVuB,QADU,EAEVhB,SAFU,KAGT;wBACD,IAAIgB,QAAQ,KAAK,KAAjB,EAAwB;0BACpBtC,MAAM,CACFuC,MAAM,CAACjB,SAAD,CAAN,CAAkBhD,QAAlB,EADE,CAAN;wBAGH,CAJD,MAIO,IAAIgE,QAAQ,KAAK,MAAjB,EAAyB;0BAC5BpC,OAAO,CACHqC,MAAM,CAACjB,SAAD,CAAN,CAAkBhD,QAAlB,EADG,CAAP;wBAGH,CAJM,MAIA,IAAIgE,QAAQ,KAAK,MAAjB,EAAyB;0BAC5BlC,OAAO,CACHmC,MAAM,CAACjB,SAAD,CAAN,CAAkBhD,QAAlB,EADG,CAAP;wBAGH,CAJM,MAIA,IAAIgE,QAAQ,KAAK,MAAjB,EAAyB;0BAC5BhC,OAAO,CACHiC,MAAM,CAACjB,SAAD,CAAN,CAAkBhD,QAAlB,EADG,CAAP;;0BAIA,IAAI,CAACiE,MAAM,CAACjB,SAAD,CAAX,EAAwB;4BACpBN,WAAW,CAAC,EAAD,CAAX;4BACA;0BACH;;0BAED,MAAMD,QAAQ,GAAG,MAAMjC,WAAW,CAC9BwC,SAAS,CAAChD,QAAV,EAD8B,CAAlC;0BAIA,MAAMkE,SAAS,GACXnG,qBAAqB,CACjB,IAAIH,SAAJ,CAAc6E,QAAd,CADiB,EAEjB,EAFiB,CADzB;0BAMA3D,GAAG,CACE,OAAMkE,SAAU,oBAAmBkB,SAAU,OAD/C,CAAH;0BAIA,MAAMC,aAAa,GACfF,MAAM,CAACjB,SAAD,CAAN,GACAiB,MAAM,CAACC,SAAD,CAFV;0BAIA,MAAME,aAAa,GAAG,CACjBD,aAAa,GAAGnB,SAAjB,GACA,GAFkB,EAGpBqB,WAHoB,CAGR,CAHQ,CAAtB;0BAKAvF,GAAG,CACE,sBAAqBsF,aAAc,EADrC,CAAH;0BAIA1B,WAAW,CAAC0B,aAAD,CAAX;wBACH;sBACJ,CAnEL;sBAoEI,qBAAqB,EAAGE,MAAD,IAAiB;wBACpC3D,kBAAkB,CAAC,CAAC2D,MAAF,CAAlB;;wBAEA,IACIA,MAAM,IACNlE,KAAK,CAACoB,aAAN,KAAwB,UAF5B,EAGE;0BACEJ,eAAe,CAAC,KAAD,CAAf;0BACAG,oBAAoB,CAAC,CAAC,CAAF,CAApB;0BACAV,aAAa,CAAC,KAAD,CAAb;0BACAE,cAAc,CAAC,KAAD,CAAd;0BACAE,cAAc,CAAC,KAAD,CAAd;wBACH,CATD,MASO;0BACHC,eAAe,CAAC,GAAD,CAAf;wBACH;sBACJ;oBAnFL;sBAAA;sBAAA;sBAAA;oBAAA,QADJ,EAsFKd,KAAK,CAACoB,aAAN,KAAwB,UAAxB,iBACG,QAAC,eAAD;sBACI,OAAO,EAAEjB,OADb;sBAEI,QAAQ,EAAEA,OAAO,KAAK,EAF1B;sBAGI,YAAY,EAAEjB,YAHlB;sBAII,UAAU,EAAEsB,UAJhB;sBAKI,WAAW,EAAEE,WALjB;sBAMI,WAAW,EAAEE,WANjB;sBAOI,qBAAqB,EAAE,CAACN,eAP5B;sBAQI,YAAY,EAAES,YARlB;sBASI,OAAO,EAAE/B,OATb;sBAUI,OAAO,EAAEC,OAVb;sBAWI,YAAY,EAAGkF,IAAD,IAAkB;wBAC5B,IAAI,CAACA,IAAL,EAAW;0BACP;wBACH;;wBAEDnD,eAAe,CAACmD,IAAD,CAAf;;wBAEA,IAAIA,IAAI,KAAK,KAAb,EAAoB;0BAChB,MAAMC,GAAG,GACLP,MAAM,CAACxC,GAAD,CAAN,GACAwC,MAAM,CAACtC,IAAD,CADN,GAEAsC,MAAM,CAACpC,IAAD,CAHV;0BAKA,MAAMe,QAAQ,GAAG,CAAC4B,GAAG,GAAG,CAAP,EACZzE,OADY,CACJ,CADI,EAEZC,QAFY,EAAjB;0BAIA0B,MAAM,CAACkB,QAAD,CAAN;0BACAhB,OAAO,CAACgB,QAAD,CAAP;0BACAd,OAAO,CAACc,QAAD,CAAP;0BACAjC,kBAAkB,CAAC,KAAD,CAAlB;0BACA+B,WAAW,CAAC,EAAD,CAAX;wBACH,CAfD,MAeO;0BACH/B,kBAAkB,CAAC,IAAD,CAAlB;wBACH;;wBAED,MAAM8D,KAAK,GAAG,CACV,KADU,EAEV,MAFU,EAGV,MAHU,CAAd,CA1B4B,CAgC5B;;wBACAlD,oBAAoB,CAChBkD,KAAK,CAACC,OAAN,CAAcH,IAAd,CADgB,CAApB;sBAGH,CA/CL;sBAgDI,aAAa,EAAGI,OAAD,IAAkB;wBAC7BzD,eAAe,CAACyD,OAAD,CAAf;sBACH;oBAlDL;sBAAA;sBAAA;sBAAA;oBAAA,QAvFR,EA4IKvE,KAAK,CAACoB,aAAN,KAAwB,SAAxB,iBACG,QAAC,kBAAD;sBACI,KAAK,EAAC,qBADV;sBAEI,OAAO,EAAEpB,KAAK,CAACoB,aAFnB;sBAGI,KAAK,EAAEW,eAHX;sBAII,SAAS,EAAE,MAAM;wBACb,IAAII,gBAAgB,KAAK,CAAC,CAA1B,EAA6B;0BACzBC,mBAAmB,CACfD,gBAAgB,GAAG,CADJ,CAAnB;wBAGH;sBACJ;oBAVL;sBAAA;sBAAA;sBAAA;oBAAA,QA7IR,EA0JKnC,KAAK,CAACoB,aAAN,KAAwB,UAAxB,iBACG,QAAC,kBAAD;sBACI,KAAK,EAAC,wBADV;sBAEI,OAAO,EAAEpB,KAAK,CAACoB,aAFnB;sBAGI,KAAK,EAAEW,eAHX;sBAII,SAAS,EAAE,MAAM;wBACb,IAAII,gBAAgB,KAAK,CAAC,CAA1B,EAA6B;0BACzBC,mBAAmB,CACfD,gBAAgB,GAAG,CADJ,CAAnB;wBAGH;sBACJ;oBAVL;sBAAA;sBAAA;sBAAA;oBAAA,QA3JR;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QA9DR;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADJ;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAZJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAPR;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eA6QI;MAAA,wBACI;QAAK,SAAS,EAAC,QAAf;QAAA,wBACI;UAAG,IAAI,EAAC,wEAAR;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAII;UAAG,IAAI,EAAC,iCAAR;UAA0C,MAAM,EAAC,QAAjD;UAA0D,GAAG,EAAC,YAA9D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAM,SAAS,EAAC,WAAhB;QAAA,0CAC8B,YAAWqC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,EADvE;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QA7QJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA6RH,CAleM;;GAAM3E,iB;UACuC7B,S,EACxBS,W,EAExBR,e,EAEgBP,U,EACAK,Y,EACFI,Q,EASUR,e,EAkLDgB,iB;;;KAnMdkB,iB"},"metadata":{},"sourceType":"module"}