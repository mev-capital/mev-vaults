{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport { useState, useEffect } from 'react';\nimport { BIG_ZERO } from '../utils/formatbalance';\nimport { useWallet } from 'use-wallet';\nimport { getAllowance } from '../utils/erc20';\nimport useSushi from './useSushi';\nimport { getZunamiAddress, isBSC, isPLG } from '../utils/zunami';\nimport { getMasterChefContract } from '../sushi/utils';\nimport { log } from '../utils/logger';\nexport const useGzlpAllowance = () => {\n  _s();\n\n  const [allowance, setAllowance] = useState(BIG_ZERO);\n  const {\n    account,\n    ethereum,\n    chainId\n  } = useWallet();\n  const sushi = useSushi();\n  const masterChefContract = getMasterChefContract(sushi);\n  useEffect(() => {\n    let refreshInterval = undefined;\n\n    if (!account || !isBSC(chainId) && !isPLG(chainId)) {\n      return;\n    }\n\n    const fetchAllowance = async () => {\n      const allowance = new BigNumber(await getAllowance(ethereum, getZunamiAddress(chainId), masterChefContract, // @ts-ignore\n      account));\n      log(`Allowance (GZLP): ${allowance.toString()}`);\n      setAllowance(allowance);\n    };\n\n    if (account && masterChefContract) {\n      fetchAllowance();\n    }\n\n    refreshInterval = setInterval(fetchAllowance, 10000);\n    return () => clearInterval(refreshInterval);\n  }, [chainId, account, ethereum, masterChefContract]);\n  return allowance;\n};\n\n_s(useGzlpAllowance, \"oK1yEBfIbmQv7tnwODueg5wSb9E=\", false, function () {\n  return [useWallet, useSushi];\n});","map":{"version":3,"names":["BigNumber","useState","useEffect","BIG_ZERO","useWallet","getAllowance","useSushi","getZunamiAddress","isBSC","isPLG","getMasterChefContract","log","useGzlpAllowance","allowance","setAllowance","account","ethereum","chainId","sushi","masterChefContract","refreshInterval","undefined","fetchAllowance","toString","setInterval","clearInterval"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/hooks/useGzlpAllowance.ts"],"sourcesContent":["import BigNumber from 'bignumber.js';\nimport { useState, useEffect } from 'react';\nimport { BIG_ZERO } from '../utils/formatbalance';\nimport { useWallet } from 'use-wallet';\nimport { getAllowance } from '../utils/erc20';\nimport useSushi from './useSushi';\nimport { getZunamiAddress, isBSC, isPLG } from '../utils/zunami';\nimport { getMasterChefContract } from '../sushi/utils';\nimport { log } from '../utils/logger';\n\nexport const useGzlpAllowance = () => {\n    const [allowance, setAllowance] = useState(BIG_ZERO);\n    const { account, ethereum, chainId } = useWallet();\n    const sushi = useSushi();\n    const masterChefContract = getMasterChefContract(sushi);\n\n    useEffect(() => {\n        let refreshInterval: NodeJS.Timeout | undefined = undefined;\n        if (!account || (!isBSC(chainId) && !isPLG(chainId))) {\n            return;\n        }\n\n        const fetchAllowance = async () => {\n            const allowance = new BigNumber(\n                await getAllowance(\n                    ethereum,\n                    getZunamiAddress(chainId),\n                    masterChefContract,\n                    // @ts-ignore\n                    account\n                )\n            );\n\n            log(`Allowance (GZLP): ${allowance.toString()}`);\n            setAllowance(allowance);\n        };\n\n        if (account && masterChefContract) {\n            fetchAllowance();\n        }\n\n        refreshInterval = setInterval(fetchAllowance, 10000);\n        return () => clearInterval(refreshInterval);\n    }, [chainId, account, ethereum, masterChefContract]);\n\n    return allowance;\n};\n"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,gBAAT,EAA2BC,KAA3B,EAAkCC,KAAlC,QAA+C,iBAA/C;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAClC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAACE,QAAD,CAA1C;EACA,MAAM;IAAEY,OAAF;IAAWC,QAAX;IAAqBC;EAArB,IAAiCb,SAAS,EAAhD;EACA,MAAMc,KAAK,GAAGZ,QAAQ,EAAtB;EACA,MAAMa,kBAAkB,GAAGT,qBAAqB,CAACQ,KAAD,CAAhD;EAEAhB,SAAS,CAAC,MAAM;IACZ,IAAIkB,eAA2C,GAAGC,SAAlD;;IACA,IAAI,CAACN,OAAD,IAAa,CAACP,KAAK,CAACS,OAAD,CAAN,IAAmB,CAACR,KAAK,CAACQ,OAAD,CAA1C,EAAsD;MAClD;IACH;;IAED,MAAMK,cAAc,GAAG,YAAY;MAC/B,MAAMT,SAAS,GAAG,IAAIb,SAAJ,CACd,MAAMK,YAAY,CACdW,QADc,EAEdT,gBAAgB,CAACU,OAAD,CAFF,EAGdE,kBAHc,EAId;MACAJ,OALc,CADJ,CAAlB;MAUAJ,GAAG,CAAE,qBAAoBE,SAAS,CAACU,QAAV,EAAqB,EAA3C,CAAH;MACAT,YAAY,CAACD,SAAD,CAAZ;IACH,CAbD;;IAeA,IAAIE,OAAO,IAAII,kBAAf,EAAmC;MAC/BG,cAAc;IACjB;;IAEDF,eAAe,GAAGI,WAAW,CAACF,cAAD,EAAiB,KAAjB,CAA7B;IACA,OAAO,MAAMG,aAAa,CAACL,eAAD,CAA1B;EACH,CA3BQ,EA2BN,CAACH,OAAD,EAAUF,OAAV,EAAmBC,QAAnB,EAA6BG,kBAA7B,CA3BM,CAAT;EA6BA,OAAON,SAAP;AACH,CApCM;;GAAMD,gB;UAE8BR,S,EACzBE,Q"},"metadata":{},"sourceType":"module"}