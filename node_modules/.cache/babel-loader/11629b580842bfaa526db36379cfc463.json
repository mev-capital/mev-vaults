{"ast":null,"code":"const getProtocol = location => {\n  if (location === 'injected') return 'injected';\n  if (location.endsWith('.ipc')) return 'ipc';\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws';\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http';\n  return '';\n};\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({\n        type: provider,\n        location,\n        protocol: getProtocol(location)\n      }));\n    } else {\n      return {\n        type: 'custom',\n        location: provider,\n        protocol: getProtocol(provider)\n      };\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true;\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"');\n      return false;\n    }\n  });\n};","map":{"version":3,"names":["getProtocol","location","endsWith","startsWith","module","exports","targets","presets","concat","map","provider","type","protocol","filter","console","log"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/node_modules/eth-provider/resolve/index.js"],"sourcesContent":["const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,QAAQ,IAAI;EAC9B,IAAIA,QAAQ,KAAK,UAAjB,EAA6B,OAAO,UAAP;EAC7B,IAAIA,QAAQ,CAACC,QAAT,CAAkB,MAAlB,CAAJ,EAA+B,OAAO,KAAP;EAC/B,IAAID,QAAQ,CAACE,UAAT,CAAoB,QAApB,KAAiCF,QAAQ,CAACE,UAAT,CAAoB,OAApB,CAArC,EAAmE,OAAO,IAAP;EACnE,IAAIF,QAAQ,CAACE,UAAT,CAAoB,UAApB,KAAmCF,QAAQ,CAACE,UAAT,CAAoB,SAApB,CAAvC,EAAuE,OAAO,MAAP;EACvE,OAAO,EAAP;AACD,CAND;;AAQAC,MAAM,CAACC,OAAP,GAAiB,CAACC,OAAD,EAAUC,OAAV,KAAsB;EACrC,OAAO,GAAGC,MAAH,CAAU,GAAG,GAAGA,MAAH,CAAUF,OAAV,EAAmBG,GAAnB,CAAuBC,QAAQ,IAAI;IACrD,IAAIH,OAAO,CAACG,QAAD,CAAX,EAAuB;MACrB,OAAOH,OAAO,CAACG,QAAD,CAAP,CAAkBD,GAAlB,CAAsBR,QAAQ,KAAK;QAAEU,IAAI,EAAED,QAAR;QAAkBT,QAAlB;QAA4BW,QAAQ,EAAEZ,WAAW,CAACC,QAAD;MAAjD,CAAL,CAA9B,CAAP;IACD,CAFD,MAEO;MACL,OAAO;QAAEU,IAAI,EAAE,QAAR;QAAkBV,QAAQ,EAAES,QAA5B;QAAsCE,QAAQ,EAAEZ,WAAW,CAACU,QAAD;MAA3D,CAAP;IACD;EACF,CANmB,CAAb,EAMHG,MANG,CAMIH,QAAQ,IAAI;IACrB,IAAIA,QAAQ,CAACE,QAAT,IAAqBF,QAAQ,CAACC,IAAT,KAAkB,UAA3C,EAAuD;MACrD,OAAO,IAAP;IACD,CAFD,MAEO;MACLG,OAAO,CAACC,GAAR,CAAY,uDAAuDL,QAAQ,CAACT,QAAhE,GAA2E,GAAvF;MACA,OAAO,KAAP;IACD;EACF,CAbM,CAAP;AAcD,CAfD"},"metadata":{},"sourceType":"script"}