{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { log } from '../utils/logger';\nimport { useWallet } from 'use-wallet';\nconst ETH_CHAIN_ID = 1;\nconst BSC_CHAIN_ID = 56;\nconst PLG_CHAIN_ID = 137;\nconst SUPPORTED_CHAIN_IDS = [ETH_CHAIN_ID, BSC_CHAIN_ID, PLG_CHAIN_ID];\n\nconst useSupportedChain = () => {\n  _s();\n\n  const [supportedChain, setSupportedChain] = useState(true);\n  const {\n    isConnected,\n    account,\n    ethereum\n  } = useWallet();\n  useEffect(() => {\n    var _window$ethereum;\n\n    const chainId = (_window$ethereum = window.ethereum) === null || _window$ethereum === void 0 ? void 0 : _window$ethereum.chainId;\n\n    if (!account) {\n      return false;\n    }\n\n    if (window.ethereum && SUPPORTED_CHAIN_IDS.indexOf(parseInt(chainId, 16)) === -1) {\n      log(`Unsupported chain detected: ${chainId}`);\n      setSupportedChain(false);\n    } else {\n      setSupportedChain(true);\n    }\n\n    log(`Connected to: ${chainId}`);\n\n    if (!window.ethereum) {\n      return;\n    }\n\n    window.ethereum.on('networkChanged', networkId => {\n      log(`Network changed to: ${networkId}`);\n      setSupportedChain(SUPPORTED_CHAIN_IDS.indexOf(parseInt(networkId, 10)) !== -1);\n    });\n  }, [isConnected, account, ethereum]);\n  return supportedChain;\n};\n\n_s(useSupportedChain, \"FJjFaPRTswcIwLv8mgcAO/XULrI=\", false, function () {\n  return [useWallet];\n});\n\nexport default useSupportedChain;","map":{"version":3,"names":["useEffect","useState","log","useWallet","ETH_CHAIN_ID","BSC_CHAIN_ID","PLG_CHAIN_ID","SUPPORTED_CHAIN_IDS","useSupportedChain","supportedChain","setSupportedChain","isConnected","account","ethereum","chainId","window","indexOf","parseInt","on","networkId"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/hooks/useSupportedChain.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { log } from '../utils/logger';\nimport { useWallet } from 'use-wallet';\n\nconst ETH_CHAIN_ID: number = 1;\nconst BSC_CHAIN_ID: number = 56;\nconst PLG_CHAIN_ID: number = 137;\nconst SUPPORTED_CHAIN_IDS: Array<number> = [ETH_CHAIN_ID, BSC_CHAIN_ID, PLG_CHAIN_ID];\n\nconst useSupportedChain = (): boolean => {\n    const [supportedChain, setSupportedChain] = useState(true);\n    const { isConnected, account, ethereum } = useWallet();\n\n    useEffect(() => {\n        const chainId = window.ethereum?.chainId;\n\n        if (!account) {\n            return false;\n        }\n\n        if (window.ethereum && SUPPORTED_CHAIN_IDS.indexOf(parseInt(chainId, 16)) === -1) {\n            log(`Unsupported chain detected: ${chainId}`);\n            setSupportedChain(false);\n        } else {\n            setSupportedChain(true);\n        }\n\n        log(`Connected to: ${chainId}`);\n\n        if (!window.ethereum) {\n            return;\n        }\n\n        window.ethereum.on('networkChanged', (networkId: string) => {\n            log(`Network changed to: ${networkId}`);\n            setSupportedChain(SUPPORTED_CHAIN_IDS.indexOf(parseInt(networkId, 10)) !== -1);\n        });\n    }, [isConnected, account, ethereum]);\n\n    return supportedChain;\n};\n\nexport default useSupportedChain;\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,YAAoB,GAAG,CAA7B;AACA,MAAMC,YAAoB,GAAG,EAA7B;AACA,MAAMC,YAAoB,GAAG,GAA7B;AACA,MAAMC,mBAAkC,GAAG,CAACH,YAAD,EAAeC,YAAf,EAA6BC,YAA7B,CAA3C;;AAEA,MAAME,iBAAiB,GAAG,MAAe;EAAA;;EACrC,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,IAAD,CAApD;EACA,MAAM;IAAEU,WAAF;IAAeC,OAAf;IAAwBC;EAAxB,IAAqCV,SAAS,EAApD;EAEAH,SAAS,CAAC,MAAM;IAAA;;IACZ,MAAMc,OAAO,uBAAGC,MAAM,CAACF,QAAV,qDAAG,iBAAiBC,OAAjC;;IAEA,IAAI,CAACF,OAAL,EAAc;MACV,OAAO,KAAP;IACH;;IAED,IAAIG,MAAM,CAACF,QAAP,IAAmBN,mBAAmB,CAACS,OAApB,CAA4BC,QAAQ,CAACH,OAAD,EAAU,EAAV,CAApC,MAAuD,CAAC,CAA/E,EAAkF;MAC9EZ,GAAG,CAAE,+BAA8BY,OAAQ,EAAxC,CAAH;MACAJ,iBAAiB,CAAC,KAAD,CAAjB;IACH,CAHD,MAGO;MACHA,iBAAiB,CAAC,IAAD,CAAjB;IACH;;IAEDR,GAAG,CAAE,iBAAgBY,OAAQ,EAA1B,CAAH;;IAEA,IAAI,CAACC,MAAM,CAACF,QAAZ,EAAsB;MAClB;IACH;;IAEDE,MAAM,CAACF,QAAP,CAAgBK,EAAhB,CAAmB,gBAAnB,EAAsCC,SAAD,IAAuB;MACxDjB,GAAG,CAAE,uBAAsBiB,SAAU,EAAlC,CAAH;MACAT,iBAAiB,CAACH,mBAAmB,CAACS,OAApB,CAA4BC,QAAQ,CAACE,SAAD,EAAY,EAAZ,CAApC,MAAyD,CAAC,CAA3D,CAAjB;IACH,CAHD;EAIH,CAxBQ,EAwBN,CAACR,WAAD,EAAcC,OAAd,EAAuBC,QAAvB,CAxBM,CAAT;EA0BA,OAAOJ,cAAP;AACH,CA/BD;;GAAMD,iB;UAEyCL,S;;;AA+B/C,eAAeK,iBAAf"},"metadata":{},"sourceType":"module"}