{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { approve, getMasterChefContract } from '../sushi/utils';\nimport useSushi from './useSushi';\nimport { getZunamiAddress, isPLG } from '../utils/zunami';\nimport { log } from '../utils/logger';\n\nconst useApprove = () => {\n  _s();\n\n  const {\n    account,\n    chainId,\n    ethereum\n  } = useWallet();\n  const sushi = useSushi();\n  let masterChefContract = getMasterChefContract(sushi);\n\n  if (chainId === 56) {\n    masterChefContract.defaultAccount = account;\n    masterChefContract.options.address = getZunamiAddress(chainId);\n  }\n\n  if (isPLG(chainId) && masterChefContract) {\n    masterChefContract.defaultAccount = account;\n    masterChefContract.options.address = getZunamiAddress(chainId);\n  }\n\n  const handleApproveGZLP = useCallback(async () => {\n    try {\n      const tx = await approve(ethereum, getZunamiAddress(chainId), masterChefContract, account);\n      log(`GZLP approval granted`);\n      log(tx);\n      return tx.hash;\n    } catch (error) {\n      log(`❗️ Error while approving GZLP: ${error.message}`);\n      return false;\n    }\n  }, [account, masterChefContract, chainId, ethereum]);\n  const handleApprove = useCallback(async tokenAddress => {\n    try {\n      const tx = await approve(ethereum, tokenAddress, masterChefContract, account);\n      return tx;\n    } catch (error) {\n      log(`❗️ Error while approving token: ${error.message}`);\n      return false;\n    }\n  }, [account, ethereum, masterChefContract]);\n  return {\n    onApprove: handleApprove,\n    onGZLPApprove: handleApproveGZLP\n  };\n};\n\n_s(useApprove, \"mWCpPs6aBNjqsoYr9Q4hPP1KTmg=\", false, function () {\n  return [useWallet, useSushi];\n});\n\nexport default useApprove;","map":{"version":3,"names":["useCallback","useWallet","approve","getMasterChefContract","useSushi","getZunamiAddress","isPLG","log","useApprove","account","chainId","ethereum","sushi","masterChefContract","defaultAccount","options","address","handleApproveGZLP","tx","hash","error","message","handleApprove","tokenAddress","onApprove","onGZLPApprove"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/hooks/useApprove.ts"],"sourcesContent":["import { useCallback } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { approve, getMasterChefContract } from '../sushi/utils';\nimport useSushi from './useSushi';\nimport { getZunamiAddress, isPLG } from '../utils/zunami';\nimport { log } from '../utils/logger';\n\nconst useApprove = () => {\n    const { account, chainId, ethereum } = useWallet();\n    const sushi = useSushi();\n    let masterChefContract = getMasterChefContract(sushi);\n\n    if (chainId === 56) {\n        masterChefContract.defaultAccount = account;\n        masterChefContract.options.address = getZunamiAddress(chainId);\n    }\n\n    if (isPLG(chainId) && masterChefContract) {\n        masterChefContract.defaultAccount = account;\n        masterChefContract.options.address = getZunamiAddress(chainId);\n    }\n\n    const handleApproveGZLP = useCallback(async () => {\n        try {\n            const tx = await approve(\n                ethereum,\n                getZunamiAddress(chainId),\n                masterChefContract,\n                account\n            );\n\n            log(`GZLP approval granted`);\n            log(tx);\n            return tx.hash;\n        } catch (error: any) {\n            log(`❗️ Error while approving GZLP: ${error.message}`)\n            return false;\n        }\n    }, [account, masterChefContract, chainId, ethereum]);\n\n    const handleApprove = useCallback(\n        async (tokenAddress: string) => {\n            try {\n                const tx = await approve(ethereum, tokenAddress, masterChefContract, account);\n                return tx;\n            } catch (error: any) {\n                log(`❗️ Error while approving token: ${error.message}`)\n                return false;\n            }\n        },\n        [account, ethereum, masterChefContract]\n    );\n\n    return {\n        onApprove: handleApprove,\n        onGZLPApprove: handleApproveGZLP,\n    };\n};\n\nexport default useApprove;\n"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,OAAT,EAAkBC,qBAAlB,QAA+C,gBAA/C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,gBAAT,EAA2BC,KAA3B,QAAwC,iBAAxC;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAM;IAAEC,OAAF;IAAWC,OAAX;IAAoBC;EAApB,IAAiCV,SAAS,EAAhD;EACA,MAAMW,KAAK,GAAGR,QAAQ,EAAtB;EACA,IAAIS,kBAAkB,GAAGV,qBAAqB,CAACS,KAAD,CAA9C;;EAEA,IAAIF,OAAO,KAAK,EAAhB,EAAoB;IAChBG,kBAAkB,CAACC,cAAnB,GAAoCL,OAApC;IACAI,kBAAkB,CAACE,OAAnB,CAA2BC,OAA3B,GAAqCX,gBAAgB,CAACK,OAAD,CAArD;EACH;;EAED,IAAIJ,KAAK,CAACI,OAAD,CAAL,IAAkBG,kBAAtB,EAA0C;IACtCA,kBAAkB,CAACC,cAAnB,GAAoCL,OAApC;IACAI,kBAAkB,CAACE,OAAnB,CAA2BC,OAA3B,GAAqCX,gBAAgB,CAACK,OAAD,CAArD;EACH;;EAED,MAAMO,iBAAiB,GAAGjB,WAAW,CAAC,YAAY;IAC9C,IAAI;MACA,MAAMkB,EAAE,GAAG,MAAMhB,OAAO,CACpBS,QADoB,EAEpBN,gBAAgB,CAACK,OAAD,CAFI,EAGpBG,kBAHoB,EAIpBJ,OAJoB,CAAxB;MAOAF,GAAG,CAAE,uBAAF,CAAH;MACAA,GAAG,CAACW,EAAD,CAAH;MACA,OAAOA,EAAE,CAACC,IAAV;IACH,CAXD,CAWE,OAAOC,KAAP,EAAmB;MACjBb,GAAG,CAAE,kCAAiCa,KAAK,CAACC,OAAQ,EAAjD,CAAH;MACA,OAAO,KAAP;IACH;EACJ,CAhBoC,EAgBlC,CAACZ,OAAD,EAAUI,kBAAV,EAA8BH,OAA9B,EAAuCC,QAAvC,CAhBkC,CAArC;EAkBA,MAAMW,aAAa,GAAGtB,WAAW,CAC7B,MAAOuB,YAAP,IAAgC;IAC5B,IAAI;MACA,MAAML,EAAE,GAAG,MAAMhB,OAAO,CAACS,QAAD,EAAWY,YAAX,EAAyBV,kBAAzB,EAA6CJ,OAA7C,CAAxB;MACA,OAAOS,EAAP;IACH,CAHD,CAGE,OAAOE,KAAP,EAAmB;MACjBb,GAAG,CAAE,mCAAkCa,KAAK,CAACC,OAAQ,EAAlD,CAAH;MACA,OAAO,KAAP;IACH;EACJ,CAT4B,EAU7B,CAACZ,OAAD,EAAUE,QAAV,EAAoBE,kBAApB,CAV6B,CAAjC;EAaA,OAAO;IACHW,SAAS,EAAEF,aADR;IAEHG,aAAa,EAAER;EAFZ,CAAP;AAIH,CAlDD;;GAAMT,U;UACqCP,S,EACzBG,Q;;;AAkDlB,eAAeI,UAAf"},"metadata":{},"sourceType":"module"}