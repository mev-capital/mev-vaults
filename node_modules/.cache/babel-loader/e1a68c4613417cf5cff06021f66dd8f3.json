{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport { useCallback } from 'react';\nimport { useWallet } from 'use-wallet';\nimport useSushi from './useSushi';\nimport converterABI from '../actions/abi/zunami_busd_converter.json';\nimport Web3 from 'web3';\nimport { log } from '../utils/logger';\nimport { isBSC } from '../utils/zunami';\nexport const useSlippage = () => {\n  _s();\n\n  const {\n    chainId\n  } = useWallet();\n  const sushi = useSushi();\n  const fetchSlippage = useCallback(async busd => {\n    if (!isBSC(chainId)) {\n      return;\n    }\n\n    const web3 = new Web3(sushi.getBscProvider());\n    const contract = new web3.eth.Contract(converterABI);\n    contract.options.address = '0xbDA7FAb835a8202B89a9C827dbA0224703e90CC9';\n    const value = new BigNumber(busd).multipliedBy(new BigNumber(10).pow(18)).toString();\n    log(`ZUN-BUSD-CONVERTER: Executing getAmountOut(${value})`);\n    return await contract.methods.getAmountOut(value).call();\n  }, [chainId, sushi]);\n  return {\n    getSlippage: fetchSlippage\n  };\n};\n\n_s(useSlippage, \"3PYMpj3y90H/bMuPPdU+BTCE3mc=\", false, function () {\n  return [useWallet, useSushi];\n});","map":{"version":3,"names":["BigNumber","useCallback","useWallet","useSushi","converterABI","Web3","log","isBSC","useSlippage","chainId","sushi","fetchSlippage","busd","web3","getBscProvider","contract","eth","Contract","options","address","value","multipliedBy","pow","toString","methods","getAmountOut","call","getSlippage"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/hooks/useSlippage.ts"],"sourcesContent":["import BigNumber from 'bignumber.js';\nimport { useCallback } from 'react';\nimport { useWallet } from 'use-wallet';\nimport useSushi from './useSushi';\nimport converterABI from '../actions/abi/zunami_busd_converter.json';\nimport Web3 from 'web3';\nimport { log } from '../utils/logger';\nimport { isBSC } from '../utils/zunami';\n\nexport const useSlippage = () => {\n    const { chainId } = useWallet();\n    const sushi = useSushi();\n    \n\n    const fetchSlippage = useCallback(\n        async (busd: string) => {\n            if (!isBSC(chainId)) {\n                return;\n            }\n\n            const web3 = new Web3(sushi.getBscProvider());\n            const contract = new web3.eth.Contract(converterABI);\n            contract.options.address = '0xbDA7FAb835a8202B89a9C827dbA0224703e90CC9';\n            const value = new BigNumber(busd).multipliedBy(new BigNumber(10).pow(18)).toString();\n\n            log(`ZUN-BUSD-CONVERTER: Executing getAmountOut(${value})`);\n\n            return await contract.methods.getAmountOut(value).call();\n        },\n        [chainId, sushi]\n    );\n\n    return {\n        getSlippage: fetchSlippage,\n    };\n};\n"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAC7B,MAAM;IAAEC;EAAF,IAAcP,SAAS,EAA7B;EACA,MAAMQ,KAAK,GAAGP,QAAQ,EAAtB;EAGA,MAAMQ,aAAa,GAAGV,WAAW,CAC7B,MAAOW,IAAP,IAAwB;IACpB,IAAI,CAACL,KAAK,CAACE,OAAD,CAAV,EAAqB;MACjB;IACH;;IAED,MAAMI,IAAI,GAAG,IAAIR,IAAJ,CAASK,KAAK,CAACI,cAAN,EAAT,CAAb;IACA,MAAMC,QAAQ,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBb,YAAtB,CAAjB;IACAW,QAAQ,CAACG,OAAT,CAAiBC,OAAjB,GAA2B,4CAA3B;IACA,MAAMC,KAAK,GAAG,IAAIpB,SAAJ,CAAcY,IAAd,EAAoBS,YAApB,CAAiC,IAAIrB,SAAJ,CAAc,EAAd,EAAkBsB,GAAlB,CAAsB,EAAtB,CAAjC,EAA4DC,QAA5D,EAAd;IAEAjB,GAAG,CAAE,8CAA6Cc,KAAM,GAArD,CAAH;IAEA,OAAO,MAAML,QAAQ,CAACS,OAAT,CAAiBC,YAAjB,CAA8BL,KAA9B,EAAqCM,IAArC,EAAb;EACH,CAd4B,EAe7B,CAACjB,OAAD,EAAUC,KAAV,CAf6B,CAAjC;EAkBA,OAAO;IACHiB,WAAW,EAAEhB;EADV,CAAP;AAGH,CA1BM;;GAAMH,W;UACWN,S,EACNC,Q"},"metadata":{},"sourceType":"module"}