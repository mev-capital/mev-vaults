{"ast":null,"code":"var _jsxFileName = \"/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/components/NetworkSelector/NetworkSelector.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './NetworkSelector.scss';\nimport { ReactComponent as ETHLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!./eth_logo.svg\";\nimport { ReactComponent as BSCLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!./bsc_logo.svg\";\nimport { ReactComponent as PLGLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!./polygon_logo.svg\";\nimport { log } from '../../utils/logger';\nimport { useWallet } from 'use-wallet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const networks = [{\n  id: 1,\n  key: '0x1',\n  value: 'Ethereum',\n  icon: /*#__PURE__*/_jsxDEV(ETHLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 15\n  }, this)\n}, {\n  id: 56,\n  key: '0x38',\n  value: 'Binance',\n  icon: /*#__PURE__*/_jsxDEV(BSCLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 15\n  }, this)\n}, {\n  key: '0x3',\n  value: 'Ropsten Testnet',\n  icon: /*#__PURE__*/_jsxDEV(ETHLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 15\n  }, this)\n}, {\n  key: '0x4',\n  value: 'Rinkeby Testnet',\n  icon: /*#__PURE__*/_jsxDEV(ETHLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 15\n  }, this)\n}, {\n  key: '0x2a',\n  value: 'Kovan Testnet',\n  icon: /*#__PURE__*/_jsxDEV(ETHLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 15\n  }, this)\n}, {\n  key: '0x5',\n  value: 'Goerli Testnet',\n  icon: /*#__PURE__*/_jsxDEV(ETHLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 15\n  }, this)\n}, {\n  key: '0x61',\n  value: 'Smart Chain Testnet',\n  icon: /*#__PURE__*/_jsxDEV(ETHLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 15\n  }, this)\n}, {\n  key: '0x89',\n  value: 'Polygon',\n  icon: /*#__PURE__*/_jsxDEV(PLGLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 15\n  }, this)\n}, {\n  key: '0x13881',\n  value: 'Mumbai',\n  icon: /*#__PURE__*/_jsxDEV(ETHLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 15\n  }, this)\n}, {\n  key: '0xa86a',\n  value: 'Avalanche',\n  icon: /*#__PURE__*/_jsxDEV(ETHLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 15\n  }, this)\n}, {\n  key: '0xa869',\n  value: 'Avalanche Testnet',\n  icon: /*#__PURE__*/_jsxDEV(ETHLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 15\n  }, this)\n}, {\n  key: '0xfa',\n  value: 'Fantom',\n  icon: /*#__PURE__*/_jsxDEV(ETHLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 15\n  }, this)\n}, {\n  key: '0x504',\n  value: 'Moonbeam',\n  icon: /*#__PURE__*/_jsxDEV(ETHLogo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 15\n  }, this)\n}];\nexport const NetworkSelector = _ref => {\n  _s();\n\n  let {\n    className,\n    onNetworkChange,\n    autoChange = true,\n    hideActiveNetwork = false,\n    customNetworksList\n  } = _ref;\n  const [activeNetwork, setActiveNetwork] = useState(networks[0]);\n  const eth = window.ethereum;\n  const {\n    chainId\n  } = useWallet();\n  const [chainSupported, setChainSupported] = useState(false);\n  const networksList = customNetworksList ? customNetworksList : networks;\n  const availableNetworks = networksList.filter(item => [1, 56, 137].indexOf(parseInt(item.key, 16)) !== -1);\n  useEffect(() => {\n    if (!chainId) {\n      return;\n    }\n\n    const supportedChainIds = [1, 56, 137];\n    const defaultNetwork = networks.filter(network => parseInt(network.key, 16) === chainId)[0];\n\n    if (!hideActiveNetwork) {\n      setActiveNetwork(defaultNetwork);\n    }\n\n    setChainSupported(supportedChainIds.indexOf(parseInt(activeNetwork.key, 16)) !== -1);\n  }, [chainId, activeNetwork, hideActiveNetwork]);\n\n  if (!activeNetwork) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `NetworkSelector ${className}`,\n    children: [chainSupported && activeNetwork.icon, !chainSupported && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: activeNetwork.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"NetworkSelector__Toggler\",\n      width: \"16\",\n      height: \"5\",\n      viewBox: \"0 0 16 5\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M1 1L8 4L15 1\",\n        stroke: \"#404040\",\n        strokeWidth: \"1.1\",\n        strokeLinecap: \"round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: activeNetwork.key,\n      onChange: async e => {\n        var _e$nativeEvent, _e$nativeEvent$target;\n\n        const selectedValue = e === null || e === void 0 ? void 0 : (_e$nativeEvent = e.nativeEvent) === null || _e$nativeEvent === void 0 ? void 0 : (_e$nativeEvent$target = _e$nativeEvent.target) === null || _e$nativeEvent$target === void 0 ? void 0 : _e$nativeEvent$target.value;\n        const network = networks.filter(network => network.key === selectedValue)[0];\n        setActiveNetwork(network);\n        log(`Network switch to ${selectedValue} (select onChange)`);\n\n        if (eth && eth.request && autoChange) {\n          try {\n            await eth.request({\n              method: 'wallet_switchEthereumChain',\n              params: [{\n                chainId: selectedValue\n              }]\n            });\n          } catch (e) {\n            let chainParams = {\n              chainId: '0x38',\n              chainName: 'Binance Smart Chain Mainnet',\n              nativeCurrency: {\n                name: 'Binance Coin',\n                symbol: 'BNB',\n                decimals: 18\n              },\n              rpcUrls: ['https://bsc-dataseed1.ninicoin.io'],\n              blockExplorerUrls: ['https://bscscan.com']\n            };\n\n            if (selectedValue === '0x89') {\n              chainParams = {\n                chainId: '0x89',\n                chainName: 'Polygon Mainnet',\n                nativeCurrency: {\n                  name: 'MATIC',\n                  symbol: 'MATIC',\n                  decimals: 18\n                },\n                rpcUrls: ['https://polygon-rpc.com'],\n                blockExplorerUrls: ['https://polygonscan.com']\n              };\n            }\n\n            window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [chainParams]\n            }).catch(error => {\n              log(error);\n            });\n          }\n        }\n\n        if (onNetworkChange) {\n          onNetworkChange(network);\n        }\n      },\n      children: availableNetworks.map(network => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: network.key,\n        children: network.value\n      }, network.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NetworkSelector, \"KfdwMyRJKLf5aWmnb6XJqp8U5wg=\", false, function () {\n  return [useWallet];\n});\n\n_c = NetworkSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetworkSelector\");","map":{"version":3,"names":["useEffect","useState","log","useWallet","networks","id","key","value","icon","NetworkSelector","className","onNetworkChange","autoChange","hideActiveNetwork","customNetworksList","activeNetwork","setActiveNetwork","eth","window","ethereum","chainId","chainSupported","setChainSupported","networksList","availableNetworks","filter","item","indexOf","parseInt","supportedChainIds","defaultNetwork","network","e","selectedValue","nativeEvent","target","request","method","params","chainParams","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","catch","error","map"],"sources":["/home/bacarif/Documents/MEV CAPITAL/ZunamiUI/src/components/NetworkSelector/NetworkSelector.tsx"],"sourcesContent":["import { ReactElement, useEffect, useState } from 'react';\nimport './NetworkSelector.scss';\nimport { ReactComponent as ETHLogo } from './eth_logo.svg';\nimport { ReactComponent as BSCLogo } from './bsc_logo.svg';\nimport { ReactComponent as PLGLogo } from './polygon_logo.svg';\nimport { log } from '../../utils/logger';\nimport { useWallet } from 'use-wallet';\n\ninterface NetworkSelectorProps extends React.HTMLProps<HTMLDivElement> {\n    onNetworkChange?: Function;\n    hideActiveNetwork: boolean;\n    autoChange: boolean;\n    customNetworksList?: Array<Network>;\n}\n\nexport interface Network {\n    key: string;\n    value: string;\n    icon: ReactElement;\n}\n\nexport const networks = [\n    {\n        id: 1,\n        key: '0x1',\n        value: 'Ethereum',\n        icon: <ETHLogo />,\n    },\n    {\n        id: 56,\n        key: '0x38',\n        value: 'Binance',\n        icon: <BSCLogo />,\n    },\n    {\n        key: '0x3',\n        value: 'Ropsten Testnet',\n        icon: <ETHLogo />,\n    },\n    {\n        key: '0x4',\n        value: 'Rinkeby Testnet',\n        icon: <ETHLogo />,\n    },\n    {\n        key: '0x2a',\n        value: 'Kovan Testnet',\n        icon: <ETHLogo />,\n    },\n    {\n        key: '0x5',\n        value: 'Goerli Testnet',\n        icon: <ETHLogo />,\n    },\n    {\n        key: '0x61',\n        value: 'Smart Chain Testnet',\n        icon: <ETHLogo />,\n    },\n    {\n        key: '0x89',\n        value: 'Polygon',\n        icon: <PLGLogo />,\n    },\n    {\n        key: '0x13881',\n        value: 'Mumbai',\n        icon: <ETHLogo />,\n    },\n    {\n        key: '0xa86a',\n        value: 'Avalanche',\n        icon: <ETHLogo />,\n    },\n    {\n        key: '0xa869',\n        value: 'Avalanche Testnet',\n        icon: <ETHLogo />,\n    },\n    {\n        key: '0xfa',\n        value: 'Fantom',\n        icon: <ETHLogo />,\n    },\n    {\n        key: '0x504',\n        value: 'Moonbeam',\n        icon: <ETHLogo />,\n    },\n];\n\nexport const NetworkSelector: React.FC<NetworkSelectorProps> = ({\n    className,\n    onNetworkChange,\n    autoChange = true,\n    hideActiveNetwork = false,\n    customNetworksList,\n}) => {\n    const [activeNetwork, setActiveNetwork] = useState<Network>(networks[0]);\n    const eth = window.ethereum;\n    const { chainId } = useWallet();\n    const [chainSupported, setChainSupported] = useState(false);\n    const networksList = customNetworksList ? customNetworksList : networks;\n    const availableNetworks = networksList.filter(\n        (item) => [1, 56, 137].indexOf(parseInt(item.key, 16)) !== -1\n    );\n\n    useEffect(() => {\n        if (!chainId) {\n            return;\n        }\n\n        const supportedChainIds = [1, 56, 137];\n\n        const defaultNetwork = networks.filter(\n            (network) => parseInt(network.key, 16) === chainId\n        )[0];\n\n        if (!hideActiveNetwork) {\n            setActiveNetwork(defaultNetwork);\n        }\n\n        setChainSupported(supportedChainIds.indexOf(parseInt(activeNetwork.key, 16)) !== -1);\n    }, [chainId, activeNetwork, hideActiveNetwork]);\n\n    if (!activeNetwork) {\n        return <div></div>;\n    }\n\n    return (\n        <div className={`NetworkSelector ${className}`}>\n            {chainSupported && activeNetwork.icon}\n            {!chainSupported && <span>?</span>}\n            <span>{activeNetwork.value}</span>\n            <svg\n                className=\"NetworkSelector__Toggler\"\n                width=\"16\"\n                height=\"5\"\n                viewBox=\"0 0 16 5\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path d=\"M1 1L8 4L15 1\" stroke=\"#404040\" strokeWidth=\"1.1\" strokeLinecap=\"round\" />\n            </svg>\n            <select\n                value={activeNetwork.key}\n                onChange={async (e) => {\n                    const selectedValue = e?.nativeEvent?.target?.value;\n                    const network = networks.filter((network) => network.key === selectedValue)[0];\n\n                    setActiveNetwork(network);\n\n                    log(`Network switch to ${selectedValue} (select onChange)`);\n\n                    if (eth && eth.request && autoChange) {\n                        try {\n                            await eth.request({\n                                method: 'wallet_switchEthereumChain',\n                                params: [{ chainId: selectedValue }],\n                            });\n                        } catch (e) {\n                            let chainParams = {\n                                chainId: '0x38',\n                                chainName: 'Binance Smart Chain Mainnet',\n                                nativeCurrency: {\n                                    name: 'Binance Coin',\n                                    symbol: 'BNB',\n                                    decimals: 18,\n                                },\n                                rpcUrls: ['https://bsc-dataseed1.ninicoin.io'],\n                                blockExplorerUrls: ['https://bscscan.com'],\n                            };\n\n                            if (selectedValue === '0x89') {\n                                chainParams = {\n                                    chainId: '0x89',\n                                    chainName: 'Polygon Mainnet',\n                                    nativeCurrency: {\n                                        name: 'MATIC',\n                                        symbol: 'MATIC',\n                                        decimals: 18,\n                                    },\n                                    rpcUrls: ['https://polygon-rpc.com'],\n                                    blockExplorerUrls: ['https://polygonscan.com'],\n                                };\n                            }\n\n                            window.ethereum\n                                .request({\n                                    method: 'wallet_addEthereumChain',\n                                    params: [chainParams],\n                                })\n                                .catch((error) => {\n                                    log(error);\n                                });\n                        }\n                    }\n\n                    if (onNetworkChange) {\n                        onNetworkChange(network);\n                    }\n                }}\n            >\n                {availableNetworks.map((network) => (\n                    <option key={network.key} value={network.key}>\n                        {network.value}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n"],"mappings":";;;AAAA,SAAuBA,SAAvB,EAAkCC,QAAlC,QAAkD,OAAlD;AACA,OAAO,wBAAP;;;;AAIA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAeA,OAAO,MAAMC,QAAQ,GAAG,CACpB;EACIC,EAAE,EAAE,CADR;EAEIC,GAAG,EAAE,KAFT;EAGIC,KAAK,EAAE,UAHX;EAIIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAJV,CADoB,EAOpB;EACIH,EAAE,EAAE,EADR;EAEIC,GAAG,EAAE,MAFT;EAGIC,KAAK,EAAE,SAHX;EAIIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAJV,CAPoB,EAapB;EACIF,GAAG,EAAE,KADT;EAEIC,KAAK,EAAE,iBAFX;EAGIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAHV,CAboB,EAkBpB;EACIF,GAAG,EAAE,KADT;EAEIC,KAAK,EAAE,iBAFX;EAGIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAHV,CAlBoB,EAuBpB;EACIF,GAAG,EAAE,MADT;EAEIC,KAAK,EAAE,eAFX;EAGIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAHV,CAvBoB,EA4BpB;EACIF,GAAG,EAAE,KADT;EAEIC,KAAK,EAAE,gBAFX;EAGIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAHV,CA5BoB,EAiCpB;EACIF,GAAG,EAAE,MADT;EAEIC,KAAK,EAAE,qBAFX;EAGIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAHV,CAjCoB,EAsCpB;EACIF,GAAG,EAAE,MADT;EAEIC,KAAK,EAAE,SAFX;EAGIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAHV,CAtCoB,EA2CpB;EACIF,GAAG,EAAE,SADT;EAEIC,KAAK,EAAE,QAFX;EAGIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAHV,CA3CoB,EAgDpB;EACIF,GAAG,EAAE,QADT;EAEIC,KAAK,EAAE,WAFX;EAGIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAHV,CAhDoB,EAqDpB;EACIF,GAAG,EAAE,QADT;EAEIC,KAAK,EAAE,mBAFX;EAGIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAHV,CArDoB,EA0DpB;EACIF,GAAG,EAAE,MADT;EAEIC,KAAK,EAAE,QAFX;EAGIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAHV,CA1DoB,EA+DpB;EACIF,GAAG,EAAE,OADT;EAEIC,KAAK,EAAE,UAFX;EAGIC,IAAI,eAAE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA;AAHV,CA/DoB,CAAjB;AAsEP,OAAO,MAAMC,eAA+C,GAAG,QAMzD;EAAA;;EAAA,IAN0D;IAC5DC,SAD4D;IAE5DC,eAF4D;IAG5DC,UAAU,GAAG,IAH+C;IAI5DC,iBAAiB,GAAG,KAJwC;IAK5DC;EAL4D,CAM1D;EACF,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAUG,QAAQ,CAAC,CAAD,CAAlB,CAAlD;EACA,MAAMa,GAAG,GAAGC,MAAM,CAACC,QAAnB;EACA,MAAM;IAAEC;EAAF,IAAcjB,SAAS,EAA7B;EACA,MAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAAC,KAAD,CAApD;EACA,MAAMsB,YAAY,GAAGT,kBAAkB,GAAGA,kBAAH,GAAwBV,QAA/D;EACA,MAAMoB,iBAAiB,GAAGD,YAAY,CAACE,MAAb,CACrBC,IAAD,IAAU,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,EAAaC,OAAb,CAAqBC,QAAQ,CAACF,IAAI,CAACpB,GAAN,EAAW,EAAX,CAA7B,MAAiD,CAAC,CADtC,CAA1B;EAIAN,SAAS,CAAC,MAAM;IACZ,IAAI,CAACoB,OAAL,EAAc;MACV;IACH;;IAED,MAAMS,iBAAiB,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,CAA1B;IAEA,MAAMC,cAAc,GAAG1B,QAAQ,CAACqB,MAAT,CAClBM,OAAD,IAAaH,QAAQ,CAACG,OAAO,CAACzB,GAAT,EAAc,EAAd,CAAR,KAA8Bc,OADxB,EAErB,CAFqB,CAAvB;;IAIA,IAAI,CAACP,iBAAL,EAAwB;MACpBG,gBAAgB,CAACc,cAAD,CAAhB;IACH;;IAEDR,iBAAiB,CAACO,iBAAiB,CAACF,OAAlB,CAA0BC,QAAQ,CAACb,aAAa,CAACT,GAAf,EAAoB,EAApB,CAAlC,MAA+D,CAAC,CAAjE,CAAjB;EACH,CAhBQ,EAgBN,CAACc,OAAD,EAAUL,aAAV,EAAyBF,iBAAzB,CAhBM,CAAT;;EAkBA,IAAI,CAACE,aAAL,EAAoB;IAChB,oBAAO;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBACI;IAAK,SAAS,EAAG,mBAAkBL,SAAU,EAA7C;IAAA,WACKW,cAAc,IAAIN,aAAa,CAACP,IADrC,EAEK,CAACa,cAAD,iBAAmB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFxB,eAGI;MAAA,UAAON,aAAa,CAACR;IAArB;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MACI,SAAS,EAAC,0BADd;MAEI,KAAK,EAAC,IAFV;MAGI,MAAM,EAAC,GAHX;MAII,OAAO,EAAC,UAJZ;MAKI,IAAI,EAAC,MALT;MAMI,KAAK,EAAC,4BANV;MAAA,uBAQI;QAAM,CAAC,EAAC,eAAR;QAAwB,MAAM,EAAC,SAA/B;QAAyC,WAAW,EAAC,KAArD;QAA2D,aAAa,EAAC;MAAzE;QAAA;QAAA;QAAA;MAAA;IARJ;MAAA;MAAA;MAAA;IAAA,QAJJ,eAcI;MACI,KAAK,EAAEQ,aAAa,CAACT,GADzB;MAEI,QAAQ,EAAE,MAAO0B,CAAP,IAAa;QAAA;;QACnB,MAAMC,aAAa,GAAGD,CAAH,aAAGA,CAAH,yCAAGA,CAAC,CAAEE,WAAN,4EAAG,eAAgBC,MAAnB,0DAAG,sBAAwB5B,KAA9C;QACA,MAAMwB,OAAO,GAAG3B,QAAQ,CAACqB,MAAT,CAAiBM,OAAD,IAAaA,OAAO,CAACzB,GAAR,KAAgB2B,aAA7C,EAA4D,CAA5D,CAAhB;QAEAjB,gBAAgB,CAACe,OAAD,CAAhB;QAEA7B,GAAG,CAAE,qBAAoB+B,aAAc,oBAApC,CAAH;;QAEA,IAAIhB,GAAG,IAAIA,GAAG,CAACmB,OAAX,IAAsBxB,UAA1B,EAAsC;UAClC,IAAI;YACA,MAAMK,GAAG,CAACmB,OAAJ,CAAY;cACdC,MAAM,EAAE,4BADM;cAEdC,MAAM,EAAE,CAAC;gBAAElB,OAAO,EAAEa;cAAX,CAAD;YAFM,CAAZ,CAAN;UAIH,CALD,CAKE,OAAOD,CAAP,EAAU;YACR,IAAIO,WAAW,GAAG;cACdnB,OAAO,EAAE,MADK;cAEdoB,SAAS,EAAE,6BAFG;cAGdC,cAAc,EAAE;gBACZC,IAAI,EAAE,cADM;gBAEZC,MAAM,EAAE,KAFI;gBAGZC,QAAQ,EAAE;cAHE,CAHF;cAQdC,OAAO,EAAE,CAAC,mCAAD,CARK;cASdC,iBAAiB,EAAE,CAAC,qBAAD;YATL,CAAlB;;YAYA,IAAIb,aAAa,KAAK,MAAtB,EAA8B;cAC1BM,WAAW,GAAG;gBACVnB,OAAO,EAAE,MADC;gBAEVoB,SAAS,EAAE,iBAFD;gBAGVC,cAAc,EAAE;kBACZC,IAAI,EAAE,OADM;kBAEZC,MAAM,EAAE,OAFI;kBAGZC,QAAQ,EAAE;gBAHE,CAHN;gBAQVC,OAAO,EAAE,CAAC,yBAAD,CARC;gBASVC,iBAAiB,EAAE,CAAC,yBAAD;cATT,CAAd;YAWH;;YAED5B,MAAM,CAACC,QAAP,CACKiB,OADL,CACa;cACLC,MAAM,EAAE,yBADH;cAELC,MAAM,EAAE,CAACC,WAAD;YAFH,CADb,EAKKQ,KALL,CAKYC,KAAD,IAAW;cACd9C,GAAG,CAAC8C,KAAD,CAAH;YACH,CAPL;UAQH;QACJ;;QAED,IAAIrC,eAAJ,EAAqB;UACjBA,eAAe,CAACoB,OAAD,CAAf;QACH;MACJ,CAzDL;MAAA,UA2DKP,iBAAiB,CAACyB,GAAlB,CAAuBlB,OAAD,iBACnB;QAA0B,KAAK,EAAEA,OAAO,CAACzB,GAAzC;QAAA,UACKyB,OAAO,CAACxB;MADb,GAAawB,OAAO,CAACzB,GAArB;QAAA;QAAA;QAAA;MAAA,QADH;IA3DL;MAAA;MAAA;MAAA;IAAA,QAdJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkFH,CAxHM;;GAAMG,e;UASWN,S;;;KATXM,e"},"metadata":{},"sourceType":"module"}